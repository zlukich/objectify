[
    {
        "id": "fccae755c2f8e1fe",
        "type": "tab",
        "label": "General Information",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "8eca7d2d63e49a13",
        "type": "tab",
        "label": "Current Status",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a08ae145f2d5cb38",
        "type": "tab",
        "label": "Serv filesystem",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c5fc9b7a988cec09",
        "type": "tab",
        "label": "Charuco camera poses",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "3669868b19b1582f",
        "type": "tab",
        "label": "Colmap",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f11166a80e40d7b6",
        "type": "tab",
        "label": "Instant-NGP",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0cc33ef5972e0643",
        "type": "tab",
        "label": "Flow 2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "cd35db7d9440e826",
        "type": "tab",
        "label": "Save and Viz",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c0273576f864fea6",
        "type": "tab",
        "label": "Comparison",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ce11a1573af9dae5",
        "type": "tab",
        "label": "Automatic reconstruction",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "dba0e3f78435d0da",
        "type": "tab",
        "label": "Stream and Capture",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "9a065f7de759f344",
        "type": "group",
        "z": "3669868b19b1582f",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "a772c2fbbb54ca51",
            "80f0e37eedd4ac4c",
            "aca9a5a6408f5b30"
        ],
        "x": 334,
        "y": 759,
        "w": 1178,
        "h": 288
    },
    {
        "id": "29bf2eccfbb8fe16",
        "type": "group",
        "z": "cd35db7d9440e826",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "d6716d447139a35c",
            "586038a5dcac1eac",
            "9ac718281d44165a",
            "f0d9e0579a4ed929",
            "804b2434dfa88e92",
            "3fc5b673b5fef038",
            "0c114a1712edbf27",
            "583d5f7edc4fb63a",
            "25fce322b6f11e59",
            "e8e972c0b58a4f12",
            "4de86a1edb0d9a2e",
            "419a9f1c1e75891e",
            "857e073fca509c2e",
            "d23290c4262f3351",
            "cb77f7a82b32bf9e",
            "eb6ca6290bc7a968",
            "6855f6f284c43984",
            "f01519fbe4901cea",
            "72ac73d5a30d357d",
            "c12eb424d725ba51",
            "bccd7e1f55b8fa84"
        ],
        "x": 554,
        "y": 239,
        "w": 1512,
        "h": 402
    },
    {
        "id": "28c003637500bb58",
        "type": "group",
        "z": "f11166a80e40d7b6",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "d7c9289e3b43fa08",
            "ed3316b06c40e79c",
            "79f125292ff3885d",
            "0e8b617c0ee560fd",
            "c2deb24644c45a06",
            "c45f862057b98f28",
            "50f6a1a84175c4c1",
            "be433bed50bb1f35",
            "ae681a65f8ed97a2",
            "9cd6126067c8d457",
            "7fff52a787654f03",
            "8b4531d23690c116",
            "8f84de504bd9865d",
            "1f21093d7f876a07",
            "8ce95ac3bfcccac5",
            "ad467ef6eb73e5a7"
        ],
        "x": 764,
        "y": 119,
        "w": 1942,
        "h": 242
    },
    {
        "id": "a97981e2e8c1f13e",
        "type": "group",
        "z": "ce11a1573af9dae5",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "529b44651e96af74",
            "99a1eb025cd521ab",
            "d84bb53e6f53b33e",
            "59087407bde0886a",
            "a2f6ee2a8fab4c4e",
            "5eeb4bf58301947d"
        ],
        "x": 674,
        "y": 699,
        "w": 792,
        "h": 182
    },
    {
        "id": "16e9549a3ea706bc",
        "type": "group",
        "z": "c5fc9b7a988cec09",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "6ec4b344c84f72e8",
            "5ae3b7b8fe108ddb",
            "f0b90c78f5f79e71",
            "567a4991445ed8e7",
            "be3b2ff50c3c00d1",
            "ca2e9a4b6955efb0",
            "7b36c9095cf50122"
        ],
        "x": 1914,
        "y": 259,
        "w": 1132,
        "h": 182
    },
    {
        "id": "80f0e37eedd4ac4c",
        "type": "group",
        "z": "3669868b19b1582f",
        "g": "9a065f7de759f344",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "8c41744e6989238e",
            "d266f296d5bff25f",
            "4612c2840bc9045d",
            "16bbbc3cfdc4abeb",
            "f7fedae0681f404d",
            "97a9602c25c5b4b1",
            "77d15c886180587e"
        ],
        "x": 394,
        "y": 839,
        "w": 1092,
        "h": 182
    },
    {
        "id": "d6a9b08dd46babd7",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "true",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 64,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "5b85a63a82c4ef95",
        "type": "ui_tab",
        "name": "Server filesystem",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "a27b0a4d01a4d522",
        "type": "ui_tab",
        "name": "Working dashboard",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "6422196517775826",
        "type": "ui_tab",
        "name": "1.a  Colmap Camera Poses",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "2685b6bd219f3017",
        "type": "ui_tab",
        "name": "2.a Instant-NGP",
        "icon": "dashboard",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "1e6c4b6a9d036b5a",
        "type": "ui_tab",
        "name": "1.b Charuco Camera Poses",
        "icon": "dashboard",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "1f362802086f4d96",
        "type": "ui_tab",
        "name": "3. Visualization + Manipulation",
        "icon": "dashboard",
        "order": 6,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "32edcbac3bca6f64",
        "type": "ui_tab",
        "name": "4. Comparison",
        "icon": "dashboard",
        "order": 7,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "a7be7e0c24eb1f61",
        "type": "ui_tab",
        "name": "Automatic Reconstruction",
        "icon": "dashboard",
        "order": 8,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "7c3d1ffe5de85af4",
        "type": "ui_group",
        "name": "File Browser",
        "tab": "5b85a63a82c4ef95",
        "order": 1,
        "disp": true,
        "width": 12,
        "collapse": false,
        "className": ""
    },
    {
        "id": "b9eaf4515438b94a",
        "type": "ui_group",
        "name": "File Preview",
        "tab": "5b85a63a82c4ef95",
        "order": 2,
        "disp": true,
        "width": 12,
        "collapse": false,
        "className": ""
    },
    {
        "id": "23c5588908fde9b8",
        "type": "ui_group",
        "name": "instant-ngp parameters",
        "tab": "2685b6bd219f3017",
        "order": 1,
        "disp": true,
        "width": 7,
        "collapse": true,
        "className": ""
    },
    {
        "id": "53646539ec83fa85",
        "type": "ui_group",
        "name": "Default",
        "tab": "6422196517775826",
        "order": 2,
        "disp": true,
        "width": "5",
        "collapse": false,
        "className": ""
    },
    {
        "id": "6c2e3428a6c52ed8",
        "type": "ui_group",
        "name": "Colmap folder",
        "tab": "6422196517775826",
        "order": 1,
        "disp": true,
        "width": 11,
        "collapse": false,
        "className": ""
    },
    {
        "id": "45c6e5c68f9384b7",
        "type": "ui_group",
        "name": "Logging",
        "tab": "6422196517775826",
        "order": 3,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "cef361cee940a92c",
        "type": "ui_group",
        "name": "Current Status",
        "tab": "a27b0a4d01a4d522",
        "order": 3,
        "disp": true,
        "width": "12",
        "collapse": true,
        "className": ""
    },
    {
        "id": "919860c8b411c539",
        "type": "ui_group",
        "name": "instant-ngp",
        "tab": "2685b6bd219f3017",
        "order": 1,
        "disp": true,
        "width": 12,
        "collapse": false,
        "className": ""
    },
    {
        "id": "3fdc8d9e247e5296",
        "type": "ui_group",
        "name": "Guideline",
        "tab": "1f362802086f4d96",
        "order": 1,
        "disp": true,
        "width": 23,
        "collapse": false,
        "className": ""
    },
    {
        "id": "bbcac8f35b0ea650",
        "type": "ui_group",
        "name": "Comparison",
        "tab": "32edcbac3bca6f64",
        "order": 1,
        "disp": true,
        "width": 22,
        "collapse": false,
        "className": ""
    },
    {
        "id": "acabc51978b41c5b",
        "type": "ui_group",
        "name": "Default",
        "tab": "a7be7e0c24eb1f61",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a4ece68598262627",
        "type": "ui_group",
        "name": "General information",
        "tab": "a27b0a4d01a4d522",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a7d09646c3ab18c3",
        "type": "ui_group",
        "name": "Logging",
        "tab": "2685b6bd219f3017",
        "order": 4,
        "disp": true,
        "width": 12,
        "collapse": false,
        "className": ""
    },
    {
        "id": "94b2d8d9e77fa636",
        "type": "ui_group",
        "name": "Charuco Filesystem",
        "tab": "1e6c4b6a9d036b5a",
        "order": 1,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b4e511253bf4fd53",
        "type": "ui_group",
        "name": "Charuco Parameters",
        "tab": "1e6c4b6a9d036b5a",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "40324dcc41601167",
        "type": "ui_group",
        "name": "Charuco Logging",
        "tab": "1e6c4b6a9d036b5a",
        "order": 3,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "40495299a6187faf",
        "type": "ui_group",
        "name": "Viz FS",
        "tab": "1f362802086f4d96",
        "order": 3,
        "disp": true,
        "width": 23,
        "collapse": false,
        "className": ""
    },
    {
        "id": "740f8e0483a46aa2",
        "type": "ui_group",
        "name": "Cam",
        "tab": "a27b0a4d01a4d522",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "2fdbed4902a7b60d",
        "type": "ui_group",
        "name": "Project folder",
        "tab": "a7be7e0c24eb1f61",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ba8e9aea5067f1d0",
        "type": "ui_spacer",
        "z": "3669868b19b1582f",
        "name": "spacer",
        "group": "7c3d1ffe5de85af4",
        "order": 9,
        "width": 3,
        "height": 1
    },
    {
        "id": "37fe093634d3b272",
        "type": "ui_spacer",
        "z": "3669868b19b1582f",
        "name": "spacer",
        "group": "7c3d1ffe5de85af4",
        "order": 10,
        "width": 12,
        "height": 1
    },
    {
        "id": "1eea8cd56e671b3f",
        "type": "ui_spacer",
        "z": "3669868b19b1582f",
        "name": "spacer",
        "group": "7c3d1ffe5de85af4",
        "order": 12,
        "width": 9,
        "height": 1
    },
    {
        "id": "314b9936612ff9f3",
        "type": "ui_spacer",
        "z": "c0273576f864fea6",
        "name": "spacer",
        "group": "bbcac8f35b0ea650",
        "order": 3,
        "width": 16,
        "height": 1
    },
    {
        "id": "c84c35e6e9992f9a",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": false,
        "alpnprotocol": ""
    },
    {
        "id": "9c64fb15589e3e19",
        "type": "ui_spacer",
        "z": "fccae755c2f8e1fe",
        "name": "spacer",
        "group": "a4ece68598262627",
        "order": 7,
        "width": 2,
        "height": 1
    },
    {
        "id": "c5c5f6666338d7bc",
        "type": "ui_spacer",
        "z": "fccae755c2f8e1fe",
        "name": "spacer",
        "group": "a4ece68598262627",
        "order": 9,
        "width": 2,
        "height": 1
    },
    {
        "id": "2879c45d1f10f465",
        "type": "ui_spacer",
        "z": "fccae755c2f8e1fe",
        "name": "spacer",
        "group": "a4ece68598262627",
        "order": 11,
        "width": 2,
        "height": 1
    },
    {
        "id": "d817641e5720e118",
        "type": "ui_spacer",
        "z": "fccae755c2f8e1fe",
        "name": "spacer",
        "group": "a4ece68598262627",
        "order": 13,
        "width": 2,
        "height": 1
    },
    {
        "id": "74929cb0ddc5da11",
        "type": "ui_spacer",
        "z": "fccae755c2f8e1fe",
        "name": "spacer",
        "group": "a4ece68598262627",
        "order": 15,
        "width": 2,
        "height": 1
    },
    {
        "id": "841ffd43930efd2b",
        "type": "ui_spacer",
        "z": "fccae755c2f8e1fe",
        "name": "spacer",
        "group": "a4ece68598262627",
        "order": 17,
        "width": 2,
        "height": 1
    },
    {
        "id": "c894a6155bba38cb",
        "type": "ui_spacer",
        "z": "fccae755c2f8e1fe",
        "name": "spacer",
        "group": "a4ece68598262627",
        "order": 19,
        "width": 2,
        "height": 1
    },
    {
        "id": "cfd279198029ce86",
        "type": "ui_spacer",
        "z": "fccae755c2f8e1fe",
        "name": "spacer",
        "group": "a4ece68598262627",
        "order": 21,
        "width": 2,
        "height": 1
    },
    {
        "id": "65a095f1680f0bb3",
        "type": "ui_spacer",
        "z": "fccae755c2f8e1fe",
        "name": "spacer",
        "group": "a4ece68598262627",
        "order": 23,
        "width": 2,
        "height": 1
    },
    {
        "id": "e5c9c2f28acb48d5",
        "type": "ui_spacer",
        "z": "fccae755c2f8e1fe",
        "name": "spacer",
        "group": "a4ece68598262627",
        "order": 25,
        "width": 2,
        "height": 1
    },
    {
        "id": "8d677324d31f955e",
        "type": "ui_spacer",
        "z": "fccae755c2f8e1fe",
        "name": "spacer",
        "group": "a4ece68598262627",
        "order": 27,
        "width": 2,
        "height": 1
    },
    {
        "id": "f4d8211f2f36ab82",
        "type": "ui_spacer",
        "z": "fccae755c2f8e1fe",
        "name": "spacer",
        "group": "a4ece68598262627",
        "order": 29,
        "width": 2,
        "height": 1
    },
    {
        "id": "6e85d859e59f3615",
        "type": "ui_spacer",
        "z": "fccae755c2f8e1fe",
        "name": "spacer",
        "group": "a4ece68598262627",
        "order": 31,
        "width": 2,
        "height": 1
    },
    {
        "id": "7ad22764797ee663",
        "type": "ui_spacer",
        "z": "fccae755c2f8e1fe",
        "name": "spacer",
        "group": "a4ece68598262627",
        "order": 33,
        "width": 3,
        "height": 1
    },
    {
        "id": "8dcab78481958bc5",
        "type": "ui_spacer",
        "z": "fccae755c2f8e1fe",
        "name": "spacer",
        "group": "740f8e0483a46aa2",
        "order": 3,
        "width": 6,
        "height": 1
    },
    {
        "id": "b7e0b9a6a620b0f3",
        "type": "ui_spacer",
        "z": "fccae755c2f8e1fe",
        "name": "spacer",
        "group": "740f8e0483a46aa2",
        "order": 5,
        "width": 4,
        "height": 1
    },
    {
        "id": "a72c21f0e8884bb4",
        "type": "ui_spacer",
        "z": "c5fc9b7a988cec09",
        "name": "spacer",
        "group": "6c2e3428a6c52ed8",
        "order": 2,
        "width": 3,
        "height": 1
    },
    {
        "id": "909479128c6439ca",
        "type": "ui_spacer",
        "z": "c5fc9b7a988cec09",
        "name": "spacer",
        "group": "6c2e3428a6c52ed8",
        "order": 3,
        "width": 11,
        "height": 1
    },
    {
        "id": "b09604b4787bf542",
        "type": "ui_spacer",
        "z": "c5fc9b7a988cec09",
        "name": "spacer",
        "group": "6c2e3428a6c52ed8",
        "order": 5,
        "width": 3,
        "height": 1
    },
    {
        "id": "2e213f322126a8c8",
        "type": "ui_spacer",
        "z": "c5fc9b7a988cec09",
        "name": "spacer",
        "group": "53646539ec83fa85",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "8e0420aa37dd840d",
        "type": "ui_spacer",
        "z": "c5fc9b7a988cec09",
        "name": "spacer",
        "group": "53646539ec83fa85",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "f2a5d184e192c9e9",
        "type": "ui_spacer",
        "z": "c5fc9b7a988cec09",
        "name": "spacer",
        "group": "53646539ec83fa85",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "d8228f06b32cb732",
        "type": "ui_spacer",
        "z": "c5fc9b7a988cec09",
        "name": "spacer",
        "group": "53646539ec83fa85",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "7f89662d8053bfdc",
        "type": "ui_spacer",
        "z": "c5fc9b7a988cec09",
        "name": "spacer",
        "group": "53646539ec83fa85",
        "order": 11,
        "width": 1,
        "height": 1
    },
    {
        "id": "641ab54d07b14db8",
        "type": "ui_spacer",
        "z": "c5fc9b7a988cec09",
        "name": "spacer",
        "group": "53646539ec83fa85",
        "order": 13,
        "width": 1,
        "height": 1
    },
    {
        "id": "0785c90990266f84",
        "type": "ui_spacer",
        "z": "c5fc9b7a988cec09",
        "name": "spacer",
        "group": "94b2d8d9e77fa636",
        "order": 2,
        "width": 4,
        "height": 1
    },
    {
        "id": "88a0645a8eb7958b",
        "type": "ui_spacer",
        "z": "c5fc9b7a988cec09",
        "name": "spacer",
        "group": "94b2d8d9e77fa636",
        "order": 4,
        "width": 2,
        "height": 1
    },
    {
        "id": "f238fdb394e9bc82",
        "type": "ui_spacer",
        "z": "cd35db7d9440e826",
        "name": "spacer",
        "group": "3fdc8d9e247e5296",
        "order": 2,
        "width": 23,
        "height": 1
    },
    {
        "id": "3ce734053c6d9240",
        "type": "ui_spacer",
        "z": "cd35db7d9440e826",
        "name": "spacer",
        "group": "3fdc8d9e247e5296",
        "order": 4,
        "width": 4,
        "height": 1
    },
    {
        "id": "a8d7dc2bf131c56e",
        "type": "ui_spacer",
        "z": "cd35db7d9440e826",
        "name": "spacer",
        "group": "3fdc8d9e247e5296",
        "order": 8,
        "width": 2,
        "height": 1
    },
    {
        "id": "bfdae5b02f08d3a8",
        "type": "ui_spacer",
        "z": "cd35db7d9440e826",
        "name": "spacer",
        "group": "3fdc8d9e247e5296",
        "order": 9,
        "width": 12,
        "height": 1
    },
    {
        "id": "8b58ed4604a2c5aa",
        "type": "ui_spacer",
        "z": "cd35db7d9440e826",
        "name": "spacer",
        "group": "3fdc8d9e247e5296",
        "order": 11,
        "width": 5,
        "height": 1
    },
    {
        "id": "1e7a4eba089a3095",
        "type": "ui_spacer",
        "z": "cd35db7d9440e826",
        "name": "spacer",
        "group": "3fdc8d9e247e5296",
        "order": 12,
        "width": 23,
        "height": 1
    },
    {
        "id": "8438dcf26ce9b0fb",
        "type": "ui_spacer",
        "z": "cd35db7d9440e826",
        "name": "spacer",
        "group": "3fdc8d9e247e5296",
        "order": 15,
        "width": 19,
        "height": 1
    },
    {
        "id": "6a496a207515154b",
        "type": "ui_spacer",
        "z": "cd35db7d9440e826",
        "name": "spacer",
        "group": "40495299a6187faf",
        "order": 3,
        "width": 11,
        "height": 1
    },
    {
        "id": "8394bbd0950b5804",
        "type": "ui_spacer",
        "z": "cd35db7d9440e826",
        "name": "spacer",
        "group": "40495299a6187faf",
        "order": 5,
        "width": 8,
        "height": 1
    },
    {
        "id": "81b7ae6612104704",
        "type": "ui_spacer",
        "z": "c5fc9b7a988cec09",
        "name": "spacer",
        "group": "919860c8b411c539",
        "order": 2,
        "width": 4,
        "height": 1
    },
    {
        "id": "d1d87d86d135705a",
        "type": "ui_spacer",
        "z": "c5fc9b7a988cec09",
        "name": "spacer",
        "group": "919860c8b411c539",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "022e8b8d5f02aba3",
        "type": "http in",
        "z": "fccae755c2f8e1fe",
        "name": "",
        "url": "/input",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 420,
        "y": 740,
        "wires": [
            [
                "1194fe8e1decdd52"
            ]
        ]
    },
    {
        "id": "a590ebcf1e07f4c9",
        "type": "template",
        "z": "fccae755c2f8e1fe",
        "name": "page",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{ \n\"total_angle\": {{ total_angle }},\n\"perspectives\": {{ perspectrives }},\n\"emerg_stop\": {{ emerg_stop }},\n\"start\": {{ start }},\n\"height_min\": {{height_min}},\n\"height_max\": {{height_max}},\n\"height_number\": {{height_number}},\n\"fix_light\": {{fix_light}},\n\"brightness\": {{brightness}}\n}",
        "x": 870,
        "y": 740,
        "wires": [
            [
                "8667971b26018b5d",
                "b109aaee299d6e5b"
            ]
        ]
    },
    {
        "id": "1194fe8e1decdd52",
        "type": "change",
        "z": "fccae755c2f8e1fe",
        "name": "Copy inputs",
        "rules": [
            {
                "t": "set",
                "p": "total_angle",
                "pt": "msg",
                "to": "total_angle",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "perspectrives",
                "pt": "msg",
                "to": "perspectrives",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "emerg_stop",
                "pt": "msg",
                "to": "emerg_stop",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "start",
                "pt": "msg",
                "to": "start",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "height_min",
                "pt": "msg",
                "to": "height_min",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "height_max",
                "pt": "msg",
                "to": "height_max",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "height_number",
                "pt": "msg",
                "to": "height_number",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "fix_light",
                "pt": "msg",
                "to": "fix_light",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "brightness",
                "pt": "msg",
                "to": "brightness",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 740,
        "wires": [
            [
                "a590ebcf1e07f4c9"
            ]
        ]
    },
    {
        "id": "8667971b26018b5d",
        "type": "http response",
        "z": "fccae755c2f8e1fe",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1090,
        "y": 740,
        "wires": []
    },
    {
        "id": "3341086b91dd82ec",
        "type": "change",
        "z": "fccae755c2f8e1fe",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "camera2",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "3bd86762c2a247ab",
        "type": "change",
        "z": "fccae755c2f8e1fe",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "camera3",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "39ed91b9d66b8696",
        "type": "change",
        "z": "fccae755c2f8e1fe",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "camera4",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "ab44e156ede30368",
        "type": "change",
        "z": "fccae755c2f8e1fe",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "camera5",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "76a48c31dc8fab75",
        "type": "change",
        "z": "fccae755c2f8e1fe",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "camera1",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "c4083a3b45acb0b9",
        "type": "change",
        "z": "fccae755c2f8e1fe",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "total_angle",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1150,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "726be6b8c037d90e",
        "type": "change",
        "z": "fccae755c2f8e1fe",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "perspectrives",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1160,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "b109aaee299d6e5b",
        "type": "debug",
        "z": "fccae755c2f8e1fe",
        "name": "debug 19",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 800,
        "wires": []
    },
    {
        "id": "e1329c7744929330",
        "type": "exec",
        "z": "fccae755c2f8e1fe",
        "command": "python C:\\Users\\zlukich\\Desktop\\lehre\\sose23\\Bachelorarbeit\\node-red\\complete_2024_01_24_Threads.py",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1430,
        "y": 400,
        "wires": [
            [
                "f9f1e69761b72ca2"
            ],
            [
                "f9f1e69761b72ca2"
            ],
            [
                "f9f1e69761b72ca2"
            ]
        ]
    },
    {
        "id": "a2bd57fadc8b198c",
        "type": "change",
        "z": "fccae755c2f8e1fe",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "emerg_stop",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1400,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "f33b39705fbc6b12",
        "type": "change",
        "z": "fccae755c2f8e1fe",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "start",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1370,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "18b9af68cc85fde2",
        "type": "comment",
        "z": "fccae755c2f8e1fe",
        "name": "Properties Camera",
        "info": "",
        "x": 390,
        "y": 100,
        "wires": []
    },
    {
        "id": "979d3b45dec79c6d",
        "type": "comment",
        "z": "fccae755c2f8e1fe",
        "name": "Properties Table",
        "info": "",
        "x": 860,
        "y": 100,
        "wires": []
    },
    {
        "id": "70cd2bd71c0e4ec1",
        "type": "comment",
        "z": "fccae755c2f8e1fe",
        "name": "Buttons",
        "info": "",
        "x": 830,
        "y": 280,
        "wires": []
    },
    {
        "id": "e4cb24f7344043e9",
        "type": "http request",
        "z": "fccae755c2f8e1fe",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://127.0.0.1:1880/input",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 650,
        "y": 800,
        "wires": [
            [
                "4d516df56986d774"
            ]
        ]
    },
    {
        "id": "83f1e6aa05243804",
        "type": "inject",
        "z": "fccae755c2f8e1fe",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 420,
        "y": 800,
        "wires": [
            [
                "e4cb24f7344043e9"
            ]
        ]
    },
    {
        "id": "4d516df56986d774",
        "type": "debug",
        "z": "fccae755c2f8e1fe",
        "name": "debug 13",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 800,
        "wires": []
    },
    {
        "id": "66102499712ae3e0",
        "type": "comment",
        "z": "fccae755c2f8e1fe",
        "name": "Copy parameters",
        "info": "",
        "x": 380,
        "y": 680,
        "wires": []
    },
    {
        "id": "1a9e606f41044807",
        "type": "trigger",
        "z": "fccae755c2f8e1fe",
        "name": "",
        "op1": "true",
        "op2": "false",
        "op1type": "bool",
        "op2type": "bool",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1160,
        "y": 340,
        "wires": [
            [
                "a2bd57fadc8b198c"
            ]
        ]
    },
    {
        "id": "af206142e16fdd11",
        "type": "trigger",
        "z": "fccae755c2f8e1fe",
        "name": "",
        "op1": "true",
        "op2": "false",
        "op1type": "bool",
        "op2type": "bool",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1160,
        "y": 460,
        "wires": [
            [
                "f33b39705fbc6b12"
            ]
        ]
    },
    {
        "id": "f9f1e69761b72ca2",
        "type": "debug",
        "z": "fccae755c2f8e1fe",
        "name": "debug 22",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2080,
        "y": 400,
        "wires": []
    },
    {
        "id": "54bcede389de4c65",
        "type": "change",
        "z": "fccae755c2f8e1fe",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "height_min",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "bb882bdeb312b886",
        "type": "change",
        "z": "fccae755c2f8e1fe",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "height_max",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "c01990733f0b263c",
        "type": "change",
        "z": "fccae755c2f8e1fe",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "height_number",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "8c114f3138b04e4e",
        "type": "trigger",
        "z": "fccae755c2f8e1fe",
        "name": "",
        "op1": "true",
        "op2": "false",
        "op1type": "bool",
        "op2type": "bool",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1160,
        "y": 520,
        "wires": [
            [
                "45b2d0a879f29157"
            ]
        ]
    },
    {
        "id": "45b2d0a879f29157",
        "type": "change",
        "z": "fccae755c2f8e1fe",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "fix_light",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1380,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "20f8427b857a5d15",
        "type": "change",
        "z": "fccae755c2f8e1fe",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "brightness",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1190,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "32ab29732e2a6bc0",
        "type": "comment",
        "z": "fccae755c2f8e1fe",
        "name": "Cam",
        "info": "",
        "x": 890,
        "y": 920,
        "wires": []
    },
    {
        "id": "32b9923dbf9e473e",
        "type": "function",
        "z": "fccae755c2f8e1fe",
        "name": "Folder handling",
        "func": "let folder = global.get(\"filebrowser_default_folder\");\nlet project_name = flow.get(\"project_name\")\n//console.log(project_name);\nif(project_name!==\"\"){\n\nvar dir = folder+project_name;\n\nif (!fs.existsSync(dir)){\n    fs.mkdirSync(dir, { recursive: true });\n}\n\n}\nif (folder===undefined) {\n    folder=\"./projects/\";\n    context.set(\"folder\", folder);\n}\n\n\nmsg.project_name = project_name;\nmsg.payload = {\"start\":folder};\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "fs",
                "module": "fs"
            }
        ],
        "x": 400,
        "y": 1040,
        "wires": [
            [
                "9b1d7fda1b1e5bcc",
                "48683e832b42b025"
            ]
        ]
    },
    {
        "id": "026ea1203c2c1823",
        "type": "function",
        "z": "fccae755c2f8e1fe",
        "name": "Prep Data",
        "func": "function convertDate(local) {\n    let d = new Date(local);\n    d.setTime(d.getTime()+3600*1000);\n    return d.toISOString().slice(0, 19).replace('T', ' ');\n}\n\nvar newmsg = msg;\nvar last_folder = \"\";\nnewmsg.options = [];\n\nfor (var i=0; i<msg.payload.length; i++) {\n\n    msg.payload[i].fname = msg.payload[i].name.replace(/^.*(\\\\|\\/|\\:)/, '');\n    if (msg.payload[i].stat.isDirectory) {\n        msg.payload[i].ext = \"folder\";\n        newmsg.options[i] = msg.payload[i].fname;\n        //newmsg.payload = msg.payload[i].fname;\n        last_folder = msg.payload[i].fname\n    }\n}\nmsg.payload = last_folder;\nflow.set(\"currentfolder\",msg.payload);\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 1040,
        "wires": [
            [
                "a74cb59a85574a5d"
            ]
        ]
    },
    {
        "id": "bf6a0bfd35f6ec1f",
        "type": "change",
        "z": "fccae755c2f8e1fe",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "project_name",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "filebrowser_default_folder",
                "pt": "global",
                "to": "./projects/",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "48683e832b42b025",
        "type": "debug",
        "z": "fccae755c2f8e1fe",
        "name": "debug 34",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 1180,
        "wires": []
    },
    {
        "id": "896850ed72cc1931",
        "type": "debug",
        "z": "fccae755c2f8e1fe",
        "name": "debug 35",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "global.get('filebrowser_default_folder')",
        "targetType": "jsonata",
        "statusVal": "",
        "statusType": "auto",
        "x": 240,
        "y": 1180,
        "wires": []
    },
    {
        "id": "15e4d6b85941baa2",
        "type": "inject",
        "z": "fccae755c2f8e1fe",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "filebrowser_default_folder",
        "payloadType": "global",
        "x": 170,
        "y": 920,
        "wires": [
            [
                "32b9923dbf9e473e"
            ]
        ]
    },
    {
        "id": "a7816c586542ea3d",
        "type": "change",
        "z": "fccae755c2f8e1fe",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "selected_project",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1420,
        "y": 1000,
        "wires": [
            [
                "c995437f2e07c2a9",
                "7bfa38a0f66d68e1",
                "4819a5fb717ddca6",
                "3a5cc637ad1c52df",
                "067da2f1d49bc5ac"
            ]
        ]
    },
    {
        "id": "a23887630790e859",
        "type": "function",
        "z": "fccae755c2f8e1fe",
        "name": "Set global_folder",
        "func": "var folder = global.get('filebrowser_default_folder');\nvar project= msg.payload;\nmsg.payload = folder+project+\"/\";\n\nglobal.set(\"selected_project\", msg.payload)\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 1060,
        "wires": [
            [
                "a7816c586542ea3d",
                "630c9b6d04bb1d91"
            ]
        ]
    },
    {
        "id": "c995437f2e07c2a9",
        "type": "debug",
        "z": "fccae755c2f8e1fe",
        "name": "debug 37",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2040,
        "y": 1160,
        "wires": []
    },
    {
        "id": "630c9b6d04bb1d91",
        "type": "debug",
        "z": "fccae755c2f8e1fe",
        "name": "debug 38",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1460,
        "y": 1460,
        "wires": []
    },
    {
        "id": "a74cb59a85574a5d",
        "type": "ui_dropdown",
        "z": "fccae755c2f8e1fe",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "740f8e0483a46aa2",
        "order": 4,
        "width": 8,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 900,
        "y": 1040,
        "wires": [
            [
                "a23887630790e859"
            ]
        ]
    },
    {
        "id": "ed5505fb56aaabed",
        "type": "ui_numeric",
        "z": "fccae755c2f8e1fe",
        "d": true,
        "name": "CameraPos1",
        "label": "Camera Postitions",
        "tooltip": "",
        "group": "a4ece68598262627",
        "order": 18,
        "width": 4,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "camera1",
        "topicType": "flow",
        "format": "{{value}}",
        "min": 0,
        "max": "22",
        "step": 1,
        "className": "",
        "x": 370,
        "y": 160,
        "wires": [
            [
                "76a48c31dc8fab75"
            ]
        ],
        "outputLabels": [
            "camera_position1"
        ],
        "info": "camera_position1"
    },
    {
        "id": "1bc040b35c6bd706",
        "type": "ui_numeric",
        "z": "fccae755c2f8e1fe",
        "d": true,
        "name": "CameraPos2",
        "label": "",
        "tooltip": "",
        "group": "a4ece68598262627",
        "order": 12,
        "width": 4,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "22",
        "step": 1,
        "className": "",
        "x": 370,
        "y": 220,
        "wires": [
            [
                "3341086b91dd82ec"
            ]
        ]
    },
    {
        "id": "27d4fe5891f75bc7",
        "type": "ui_numeric",
        "z": "fccae755c2f8e1fe",
        "d": true,
        "name": "CameraPos3",
        "label": "",
        "tooltip": "",
        "group": "a4ece68598262627",
        "order": 20,
        "width": 4,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "22",
        "step": 1,
        "className": "",
        "x": 370,
        "y": 280,
        "wires": [
            [
                "3bd86762c2a247ab"
            ]
        ]
    },
    {
        "id": "1d864b73a5f9630b",
        "type": "ui_numeric",
        "z": "fccae755c2f8e1fe",
        "d": true,
        "name": "CameraPos4",
        "label": "",
        "tooltip": "",
        "group": "a4ece68598262627",
        "order": 14,
        "width": 4,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "22",
        "step": 1,
        "className": "",
        "x": 370,
        "y": 340,
        "wires": [
            [
                "39ed91b9d66b8696"
            ]
        ]
    },
    {
        "id": "f7e9a437135c65a7",
        "type": "ui_numeric",
        "z": "fccae755c2f8e1fe",
        "d": true,
        "name": "CameraPos5",
        "label": "",
        "tooltip": "",
        "group": "a4ece68598262627",
        "order": 26,
        "width": 4,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "22",
        "step": 1,
        "className": "",
        "x": 370,
        "y": 400,
        "wires": [
            [
                "ab44e156ede30368"
            ]
        ]
    },
    {
        "id": "f35d36c78a3a26fd",
        "type": "ui_numeric",
        "z": "fccae755c2f8e1fe",
        "name": "",
        "label": "Total Angle",
        "tooltip": "Set the total rotation angle for the table",
        "group": "a4ece68598262627",
        "order": 24,
        "width": 4,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "360",
        "step": "30",
        "className": "",
        "x": 850,
        "y": 160,
        "wires": [
            [
                "c4083a3b45acb0b9"
            ]
        ]
    },
    {
        "id": "3033de403c57d8d7",
        "type": "ui_numeric",
        "z": "fccae755c2f8e1fe",
        "name": "",
        "label": "Perspectives",
        "tooltip": "Set the number of perspectives for the table",
        "group": "a4ece68598262627",
        "order": 16,
        "width": 4,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "perspectives",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "10",
        "step": "1",
        "className": "",
        "x": 850,
        "y": 220,
        "wires": [
            [
                "726be6b8c037d90e"
            ]
        ]
    },
    {
        "id": "d72c9cb2ec24695f",
        "type": "ui_numeric",
        "z": "fccae755c2f8e1fe",
        "name": "height_min",
        "label": "Minimal Height",
        "tooltip": "Set the lowest perspective of the camera",
        "group": "a4ece68598262627",
        "order": 6,
        "width": 4,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "25",
        "step": 1,
        "className": "",
        "x": 370,
        "y": 460,
        "wires": [
            [
                "54bcede389de4c65"
            ]
        ]
    },
    {
        "id": "21703b6924147fd8",
        "type": "ui_numeric",
        "z": "fccae755c2f8e1fe",
        "name": "height_max",
        "label": "Maximal Height",
        "tooltip": "Set the highest perspective of the camera",
        "group": "a4ece68598262627",
        "order": 8,
        "width": 4,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": "1",
        "max": "26",
        "step": 1,
        "className": "",
        "x": 370,
        "y": 520,
        "wires": [
            [
                "bb882bdeb312b886"
            ]
        ]
    },
    {
        "id": "d0fd6e9605d2dcae",
        "type": "ui_numeric",
        "z": "fccae755c2f8e1fe",
        "name": "height_number",
        "label": "Perspectives",
        "tooltip": "Set the number of perspectives for the camera",
        "group": "a4ece68598262627",
        "order": 10,
        "width": 4,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "50",
        "step": 1,
        "className": "",
        "x": 380,
        "y": 580,
        "wires": [
            [
                "c01990733f0b263c"
            ]
        ]
    },
    {
        "id": "e65dbe64d0026136",
        "type": "ui_button",
        "z": "fccae755c2f8e1fe",
        "name": "",
        "group": "a4ece68598262627",
        "order": 32,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Emergency Stop",
        "tooltip": "",
        "color": "",
        "bgcolor": "red",
        "className": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "reset",
        "topicType": "msg",
        "x": 870,
        "y": 340,
        "wires": [
            [
                "1a9e606f41044807"
            ]
        ]
    },
    {
        "id": "c4f5b630856191e0",
        "type": "ui_button",
        "z": "fccae755c2f8e1fe",
        "name": "",
        "group": "a4ece68598262627",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Run the programme",
        "tooltip": "",
        "color": "",
        "bgcolor": "lightblue",
        "className": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "reset",
        "topicType": "msg",
        "x": 880,
        "y": 400,
        "wires": [
            [
                "e1329c7744929330"
            ]
        ]
    },
    {
        "id": "d307c3ec3f9301df",
        "type": "ui_button",
        "z": "fccae755c2f8e1fe",
        "name": "",
        "group": "a4ece68598262627",
        "order": 28,
        "width": 4,
        "height": 1,
        "passthru": true,
        "label": "Take over parameters",
        "tooltip": "",
        "color": "",
        "bgcolor": "green",
        "className": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "reset",
        "topicType": "msg",
        "x": 880,
        "y": 460,
        "wires": [
            [
                "af206142e16fdd11"
            ]
        ]
    },
    {
        "id": "b0a3f433a7990f4a",
        "type": "ui_button",
        "z": "fccae755c2f8e1fe",
        "name": "Fix light",
        "group": "a4ece68598262627",
        "order": 5,
        "width": 4,
        "height": 1,
        "passthru": true,
        "label": "Fix light",
        "tooltip": "Brightness of the light can not be changed afterwards",
        "color": "",
        "bgcolor": "green",
        "className": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "reset",
        "topicType": "msg",
        "x": 840,
        "y": 520,
        "wires": [
            [
                "8c114f3138b04e4e"
            ]
        ]
    },
    {
        "id": "4e633ee5284f931b",
        "type": "ui_button",
        "z": "fccae755c2f8e1fe",
        "name": "",
        "group": "740f8e0483a46aa2",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Create a project",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 160,
        "y": 1040,
        "wires": [
            [
                "32b9923dbf9e473e",
                "896850ed72cc1931"
            ]
        ]
    },
    {
        "id": "3c5d68e5e7c2c9fa",
        "type": "ui_text_input",
        "z": "fccae755c2f8e1fe",
        "name": "",
        "label": "Create project",
        "tooltip": "",
        "group": "740f8e0483a46aa2",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 460,
        "y": 940,
        "wires": [
            [
                "bf6a0bfd35f6ec1f"
            ]
        ]
    },
    {
        "id": "57652c5960bfee20",
        "type": "ui_slider",
        "z": "fccae755c2f8e1fe",
        "name": "",
        "label": "Brightness",
        "tooltip": "",
        "group": "a4ece68598262627",
        "order": 3,
        "width": 4,
        "height": 1,
        "passthru": true,
        "outs": "all",
        "topic": "topic",
        "topicType": "msg",
        "min": 0,
        "max": "1",
        "step": "0.05",
        "className": "",
        "x": 850,
        "y": 580,
        "wires": [
            [
                "20f8427b857a5d15"
            ]
        ]
    },
    {
        "id": "558fa8465da0cc4d",
        "type": "ui_text",
        "z": "fccae755c2f8e1fe",
        "group": "740f8e0483a46aa2",
        "order": 2,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "Select project name",
        "format": "(results will be saved here)",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 940,
        "y": 980,
        "wires": []
    },
    {
        "id": "a7f80355e5046908",
        "type": "ui_iframe",
        "z": "fccae755c2f8e1fe",
        "group": "740f8e0483a46aa2",
        "name": "",
        "order": 1,
        "width": 12,
        "height": 12,
        "url": "127.0.0.1:5000",
        "origin": "*",
        "scale": 100,
        "x": 730,
        "y": 1480,
        "wires": [
            []
        ]
    },
    {
        "id": "ebaf426061a8bade",
        "type": "config",
        "z": "fccae755c2f8e1fe",
        "name": "",
        "properties": [
            {
                "p": "filebrowser_default_folder",
                "pt": "global",
                "to": "./projects/",
                "tot": "str"
            },
            {
                "p": "ingp_root",
                "pt": "global",
                "to": "../../instant-ngp/scripts/",
                "tot": "str"
            }
        ],
        "active": true,
        "x": 490,
        "y": 1360,
        "wires": []
    },
    {
        "id": "9b1d7fda1b1e5bcc",
        "type": "fs-file-lister",
        "z": "fccae755c2f8e1fe",
        "name": "Files",
        "start": "./projects/",
        "pattern": "*.*",
        "folders": "*",
        "hidden": false,
        "lstype": "directories",
        "path": true,
        "single": true,
        "depth": 0,
        "stat": true,
        "showWarnings": false,
        "x": 590,
        "y": 1040,
        "wires": [
            [
                "026ea1203c2c1823"
            ]
        ]
    },
    {
        "id": "c0a95f2e814e50a6",
        "type": "http request",
        "z": "fccae755c2f8e1fe",
        "name": "Config get",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://127.0.0.1/5001/config/current_work",
        "tls": "c84c35e6e9992f9a",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1870,
        "y": 720,
        "wires": [
            [
                "d932151fc45ceda3"
            ]
        ]
    },
    {
        "id": "d932151fc45ceda3",
        "type": "debug",
        "z": "fccae755c2f8e1fe",
        "name": "debug 49",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2200,
        "y": 720,
        "wires": []
    },
    {
        "id": "6559bdfe3e859880",
        "type": "inject",
        "z": "fccae755c2f8e1fe",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1580,
        "y": 720,
        "wires": [
            [
                "c0a95f2e814e50a6"
            ]
        ]
    },
    {
        "id": "0e3188356bf30267",
        "type": "debug",
        "z": "fccae755c2f8e1fe",
        "d": true,
        "name": "STDOUT of ConifgManager",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2360,
        "y": 920,
        "wires": []
    },
    {
        "id": "29cf2434ec8ef52d",
        "type": "pythonshell in",
        "z": "fccae755c2f8e1fe",
        "d": true,
        "name": "Config_manager",
        "pyfile": "/home/iat/Documents/BA_Oleksandr/objectify/node-red/config_manager_server.py",
        "virtualenv": "/home/iat/miniforge3/envs/ba_oleksandr",
        "continuous": true,
        "stdInData": false,
        "x": 2020,
        "y": 1000,
        "wires": [
            [
                "0e3188356bf30267"
            ]
        ]
    },
    {
        "id": "f3986f152e25a633",
        "type": "inject",
        "z": "fccae755c2f8e1fe",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 1360,
        "wires": [
            [
                "ebaf426061a8bade"
            ]
        ]
    },
    {
        "id": "7bfa38a0f66d68e1",
        "type": "link out",
        "z": "fccae755c2f8e1fe",
        "name": "Colmap global folder out",
        "mode": "link",
        "links": [
            "97a9602c25c5b4b1"
        ],
        "x": 1505,
        "y": 1100,
        "wires": []
    },
    {
        "id": "4819a5fb717ddca6",
        "type": "link out",
        "z": "fccae755c2f8e1fe",
        "name": "Charuco global folder out",
        "mode": "link",
        "links": [
            "ca2e9a4b6955efb0"
        ],
        "x": 1505,
        "y": 1140,
        "wires": []
    },
    {
        "id": "3a5cc637ad1c52df",
        "type": "link out",
        "z": "fccae755c2f8e1fe",
        "name": "INGP global folder out",
        "mode": "link",
        "links": [
            "9cd6126067c8d457"
        ],
        "x": 1505,
        "y": 1180,
        "wires": []
    },
    {
        "id": "067da2f1d49bc5ac",
        "type": "link out",
        "z": "fccae755c2f8e1fe",
        "name": "AR global folder out",
        "mode": "link",
        "links": [
            "5eeb4bf58301947d"
        ],
        "x": 1505,
        "y": 1240,
        "wires": []
    },
    {
        "id": "f7749039b7b820a5",
        "type": "inject",
        "z": "fccae755c2f8e1fe",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.01",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1770,
        "y": 920,
        "wires": [
            [
                "2f0ed9da04dc177b"
            ]
        ]
    },
    {
        "id": "2f0ed9da04dc177b",
        "type": "exec",
        "z": "fccae755c2f8e1fe",
        "command": "python config_manager_server.py",
        "addpay": "",
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 2020,
        "y": 920,
        "wires": [
            [
                "0e3188356bf30267"
            ],
            [
                "0e3188356bf30267"
            ],
            []
        ]
    },
    {
        "id": "8071265587d0b45a",
        "type": "http in",
        "z": "8eca7d2d63e49a13",
        "name": "",
        "url": "/output",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 350,
        "y": 40,
        "wires": [
            [
                "70c0409e226d3d5b",
                "4879d0213220a004",
                "c546738a8f85d229",
                "a743dd566d4fdad8",
                "03176de6869456be",
                "e142628b545370aa",
                "ee14b69173ac93ea",
                "c90606a2913fe6f7",
                "7fbd75b7f534f64b",
                "cf2993ea20abea59",
                "3b7d1ded84890aa0"
            ]
        ]
    },
    {
        "id": "70c0409e226d3d5b",
        "type": "http response",
        "z": "8eca7d2d63e49a13",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1330,
        "y": 40,
        "wires": []
    },
    {
        "id": "4879d0213220a004",
        "type": "function",
        "z": "8eca7d2d63e49a13",
        "name": "table_anticlock",
        "func": "msg.payload = (msg.payload).table_anticlock\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 200,
        "wires": [
            [
                "a08921c87f9abf35",
                "d864e63dcde7b6ba"
            ]
        ]
    },
    {
        "id": "c546738a8f85d229",
        "type": "function",
        "z": "8eca7d2d63e49a13",
        "name": "camera_bottom",
        "func": "msg.payload = (msg.payload).camera_bottom\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 260,
        "wires": [
            [
                "e55c62523596f902",
                "aab231571bf84154"
            ]
        ]
    },
    {
        "id": "a743dd566d4fdad8",
        "type": "function",
        "z": "8eca7d2d63e49a13",
        "name": "camera_top",
        "func": "msg.payload = (msg.payload).camera_top\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 320,
        "wires": [
            [
                "f80062c84c342f75",
                "46ec8a8142a1f74c",
                "043c35858412784b"
            ]
        ]
    },
    {
        "id": "46ec8a8142a1f74c",
        "type": "debug",
        "z": "8eca7d2d63e49a13",
        "name": "debug 5",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1140,
        "y": 360,
        "wires": []
    },
    {
        "id": "67afc617ad4c3850",
        "type": "debug",
        "z": "8eca7d2d63e49a13",
        "name": "debug 6",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1140,
        "y": 420,
        "wires": []
    },
    {
        "id": "aab231571bf84154",
        "type": "debug",
        "z": "8eca7d2d63e49a13",
        "name": "debug 7",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1140,
        "y": 300,
        "wires": []
    },
    {
        "id": "d864e63dcde7b6ba",
        "type": "debug",
        "z": "8eca7d2d63e49a13",
        "name": "debug 8",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1140,
        "y": 240,
        "wires": []
    },
    {
        "id": "fbe61c7587a7c515",
        "type": "debug",
        "z": "8eca7d2d63e49a13",
        "name": "debug 9",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1140,
        "y": 180,
        "wires": []
    },
    {
        "id": "03176de6869456be",
        "type": "function",
        "z": "8eca7d2d63e49a13",
        "name": "position_table",
        "func": "msg.payload = (msg.payload).is_position_table\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 600,
        "wires": [
            [
                "4d7d468fc61e0ecc",
                "18c1dc382b0a63d3"
            ]
        ]
    },
    {
        "id": "e142628b545370aa",
        "type": "function",
        "z": "8eca7d2d63e49a13",
        "name": "position_camera",
        "func": "msg.payload = (msg.payload).is_position_camera\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 660,
        "wires": [
            [
                "3560a2cde97376f0",
                "06e89746bc3fc24d"
            ]
        ]
    },
    {
        "id": "ee14b69173ac93ea",
        "type": "function",
        "z": "8eca7d2d63e49a13",
        "name": "table_clock",
        "func": "msg.payload = (msg.payload).table_clock\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 140,
        "wires": [
            [
                "f6312def595a53a0",
                "fbe61c7587a7c515"
            ]
        ]
    },
    {
        "id": "18c1dc382b0a63d3",
        "type": "debug",
        "z": "8eca7d2d63e49a13",
        "name": "debug 20",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1140,
        "y": 640,
        "wires": []
    },
    {
        "id": "3560a2cde97376f0",
        "type": "debug",
        "z": "8eca7d2d63e49a13",
        "name": "debug 21",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1140,
        "y": 700,
        "wires": []
    },
    {
        "id": "945907725a9710f7",
        "type": "comment",
        "z": "8eca7d2d63e49a13",
        "name": "Boolean Output",
        "info": "",
        "x": 640,
        "y": 80,
        "wires": []
    },
    {
        "id": "b724d3d10dd39164",
        "type": "comment",
        "z": "8eca7d2d63e49a13",
        "name": "Real Output",
        "info": "",
        "x": 630,
        "y": 540,
        "wires": []
    },
    {
        "id": "043c35858412784b",
        "type": "trigger",
        "z": "8eca7d2d63e49a13",
        "name": "",
        "op1": "true",
        "op2": "false",
        "op1type": "bool",
        "op2type": "bool",
        "duration": "2",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 620,
        "y": 380,
        "wires": [
            [
                "f6e8268ad915f67e",
                "67afc617ad4c3850"
            ]
        ]
    },
    {
        "id": "3f7120b4bd91d91c",
        "type": "inject",
        "z": "8eca7d2d63e49a13",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "10.2",
        "payloadType": "str",
        "x": 630,
        "y": 720,
        "wires": [
            [
                "06e89746bc3fc24d"
            ]
        ]
    },
    {
        "id": "c90606a2913fe6f7",
        "type": "function",
        "z": "8eca7d2d63e49a13",
        "name": "camera_top",
        "func": "msg.payload = (msg.payload).connection\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 440,
        "wires": [
            [
                "4f37adf8081ab166",
                "8710c7720bcc4d0d"
            ]
        ]
    },
    {
        "id": "4f37adf8081ab166",
        "type": "debug",
        "z": "8eca7d2d63e49a13",
        "name": "debug 23",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1140,
        "y": 480,
        "wires": []
    },
    {
        "id": "7fbd75b7f534f64b",
        "type": "function",
        "z": "8eca7d2d63e49a13",
        "name": "check_limits_warning",
        "func": "msg.payload = (msg.payload).check_limits_warning\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 880,
        "wires": [
            [
                "b46c2f86215ed75b",
                "fc9c458616a7b2e6",
                "e5bdd8ee3fff20a7"
            ]
        ]
    },
    {
        "id": "cf2993ea20abea59",
        "type": "function",
        "z": "8eca7d2d63e49a13",
        "name": "claculate_steps_done",
        "func": "msg.payload = (msg.payload).claculate_steps_done\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 940,
        "wires": [
            [
                "1fc6278f8827cb0b",
                "206a068df64ccea4"
            ]
        ]
    },
    {
        "id": "3b7d1ded84890aa0",
        "type": "function",
        "z": "8eca7d2d63e49a13",
        "name": "set_motors_done",
        "func": "msg.payload = (msg.payload).set_motors_done\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 1000,
        "wires": [
            [
                "3482937b77e5a9b0",
                "0beccb70063cc8a4"
            ]
        ]
    },
    {
        "id": "82dd664f457d68c4",
        "type": "comment",
        "z": "8eca7d2d63e49a13",
        "name": "Real Output",
        "info": "",
        "x": 630,
        "y": 820,
        "wires": []
    },
    {
        "id": "3482937b77e5a9b0",
        "type": "debug",
        "z": "8eca7d2d63e49a13",
        "name": "debug 24",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1140,
        "y": 1040,
        "wires": []
    },
    {
        "id": "206a068df64ccea4",
        "type": "debug",
        "z": "8eca7d2d63e49a13",
        "name": "debug 25",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1140,
        "y": 980,
        "wires": []
    },
    {
        "id": "b46c2f86215ed75b",
        "type": "debug",
        "z": "8eca7d2d63e49a13",
        "name": "debug 26",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1140,
        "y": 920,
        "wires": []
    },
    {
        "id": "f6312def595a53a0",
        "type": "ui_switch",
        "z": "8eca7d2d63e49a13",
        "name": "Stopper Clockwise",
        "label": "",
        "tooltip": "Stopper Clockwise",
        "group": "cef361cee940a92c",
        "order": 3,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "rotate_right",
        "oncolor": "green",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "rotate_right",
        "offcolor": "grey",
        "animate": true,
        "className": "",
        "x": 930,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "a08921c87f9abf35",
        "type": "ui_switch",
        "z": "8eca7d2d63e49a13",
        "name": "Stopper Anticlockwise",
        "label": "",
        "tooltip": "Stopper Anticlockwise",
        "group": "cef361cee940a92c",
        "order": 5,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "rotate_left",
        "oncolor": "green",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "rotate_left",
        "offcolor": "grey",
        "animate": true,
        "className": "",
        "x": 940,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "e55c62523596f902",
        "type": "ui_switch",
        "z": "8eca7d2d63e49a13",
        "name": "Stopper Bottom",
        "label": "",
        "tooltip": "Stopper Bottom",
        "group": "cef361cee940a92c",
        "order": 6,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "vertical_align_bottom",
        "oncolor": "green",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "vertical_align_bottom",
        "offcolor": "grey",
        "animate": true,
        "className": "",
        "x": 920,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "f80062c84c342f75",
        "type": "ui_switch",
        "z": "8eca7d2d63e49a13",
        "name": "Stopper Top",
        "label": "",
        "tooltip": "Stopper Top",
        "group": "cef361cee940a92c",
        "order": 8,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "vertical_align_top",
        "oncolor": "green",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "vertical_align_top",
        "offcolor": "grey",
        "animate": true,
        "className": "",
        "x": 910,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "f6e8268ad915f67e",
        "type": "ui_switch",
        "z": "8eca7d2d63e49a13",
        "name": "Connection Computer",
        "label": "",
        "tooltip": "Connection Computer",
        "group": "a4ece68598262627",
        "order": 2,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "signal_wifi_4_bar",
        "oncolor": "green",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "signal_wifi_off",
        "offcolor": "red",
        "animate": false,
        "className": "",
        "x": 940,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "8710c7720bcc4d0d",
        "type": "ui_switch",
        "z": "8eca7d2d63e49a13",
        "name": "Connection Board",
        "label": "",
        "tooltip": "Connection Board",
        "group": "a4ece68598262627",
        "order": 4,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "signal_wifi_4_bar",
        "oncolor": "green",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "signal_wifi_off",
        "offcolor": "red",
        "animate": true,
        "className": "",
        "x": 930,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "fc9c458616a7b2e6",
        "type": "ui_switch",
        "z": "8eca7d2d63e49a13",
        "name": "Limit enabled",
        "label": "",
        "tooltip": "Limit enabled",
        "group": "cef361cee940a92c",
        "order": 7,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "error",
        "oncolor": "red",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "error",
        "offcolor": "grey",
        "animate": true,
        "className": "",
        "x": 910,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "1fc6278f8827cb0b",
        "type": "ui_switch",
        "z": "8eca7d2d63e49a13",
        "name": "Steps calculated",
        "label": "",
        "tooltip": "Steps are calculated",
        "group": "a4ece68598262627",
        "order": 22,
        "width": 4,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "done",
        "oncolor": "green",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "done",
        "offcolor": "grey",
        "animate": true,
        "className": "",
        "x": 920,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "0beccb70063cc8a4",
        "type": "ui_switch",
        "z": "8eca7d2d63e49a13",
        "name": "Motors and PINs are setted",
        "label": "",
        "tooltip": "Motors turned on",
        "group": "a4ece68598262627",
        "order": 30,
        "width": 4,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "done",
        "oncolor": "green",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "done",
        "offcolor": "grey",
        "animate": true,
        "className": "",
        "x": 960,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "e5bdd8ee3fff20a7",
        "type": "ui_switch",
        "z": "8eca7d2d63e49a13",
        "name": "Limit enabled",
        "label": "",
        "tooltip": "Limit enabled",
        "group": "cef361cee940a92c",
        "order": 4,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "error",
        "oncolor": "red",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "error",
        "offcolor": "grey",
        "animate": true,
        "className": "",
        "x": 910,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "4d7d468fc61e0ecc",
        "type": "ui_gauge",
        "z": "8eca7d2d63e49a13",
        "name": "",
        "group": "cef361cee940a92c",
        "order": 1,
        "width": 6,
        "height": 11,
        "gtype": "compass",
        "title": "Position Table",
        "label": "",
        "format": "{{value}}°",
        "min": "359",
        "max": "0",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": true,
        "className": "",
        "x": 920,
        "y": 600,
        "wires": []
    },
    {
        "id": "06e89746bc3fc24d",
        "type": "ui_template",
        "z": "8eca7d2d63e49a13",
        "group": "cef361cee940a92c",
        "name": "Position Camera",
        "order": 2,
        "width": 6,
        "height": 11,
        "format": "<div style=\"text-align: center; margin-top: 40px;\">Position Camera</div>\n<input ng-init=\"output(msg)\" class=\"sliderV size1x6\" type=\"range\" min=\"0\" max=\"22\" step=\"0.1\" ng-model=\"msg.payload\" aria-label=\"volume\" ng-change=\"output(msg)\">\n<span class=\"slider-value\">{{ msg.payload }} cm</span>\n\n<script>\n(function($scope) {\n    $scope.output = function(key) {\n        if ($scope.hasOwnProperty(\"msg\")) {\n            if ($scope.msg.hasOwnProperty(\"socketid\") || $scope.msg.payload !== 50) {\n                $scope.send({payload: $scope.msg.payload, socketid: $scope.msg.socketid});\n            }\n        }\n    };\n})(scope);\n</script>\n\n<style>\ninput[type='range'].sliderH {\n  margin-top: 60px;\n  width: 80px;\n  height: 240px;\n  padding: 0;\n  overflow: unset;\n  cursor: grab;\n}\ninput[type='range'].sliderV {\n  transform: rotateZ(-90deg);\n  margin-top: 100px;\n  writing-mode: bt-lr;\n  width: 80%;\n  padding: 0;\n  overflow: unset;\n  cursor: grab;\n  height: 8px;\n  margin-left: -100px;\n}\n.size1x6 {\n    height: 8px !important;\n    margin-left: -70px !important;\n    margin-top: 150px !important;\n}\n.size2x6 {\n    height: 13px !important;\n    margin-left: -80px !important;\n}\n.size1x6::-webkit-slider-thumb {\n    height: 23px !important;\n    width: 42px !important;\n}\n.size2x6::-webkit-slider-thumb{\n    height: 43px !important;\n    width: 72px !important;\n}\n@media screen and (-webkit-min-device-pixel-ratio: 0) {\n  input[type='range'].sliderH {\n    -webkit-appearance: none;\n    width: 240px;\n    height: 10px;\n    margin-top: 30px;\n    margin-left: 30px;\n    outline: 0;\n    border-radius: 5px;\n    background-color: #0b0b0b;\n    box-shadow: inset 1px 1px 0 1px #6d6d6d;\n  }\n}\n@media screen and (-webkit-min-device-pixel-ratio: 0) {\n  input[type='range'].sliderV {\n    -webkit-appearance: none;\n    -webkit-transform: rotate(270deg);\n    width: 240px;\n    height: 10px;\n    margin-left: 30px;\n    margin-top: 140px;\n    outline: 0;\n    border-radius: 5px;\n    background-color: #0b0b0b;\n    box-shadow: inset 1px 1px 0 1px #6d6d6d;\n  }\n}\ninput[type='range']::-ms-track {\n  width: 10px;\n  height: 240px;\n  border-radius: 5px;\n  background-color: #0b0b0b;\n  box-shadow: inset 1px 1px 0 1px #6d6d6d;\n  border: 0;\n}\ninput[type='range']::-moz-range-track {\n    transform: rotateZ(-90deg);\n  width: 10px;\n  height: 240px;\n  border-radius: 5px;\n  background-color: #0b0b0b;\n  box-shadow: inset 1px 1px 0 1px #6d6d6d;\n  border: 0;\n}\ninput[type='range']::-webkit-slider-thumb {\n  width: 72px;\n  height: 32px;\n  -webkit-appearance: none;\n  background-image: -webkit-linear-gradient(left, #0f0f0f, #2e2e2e 4%, #0f0f0f 8%, #000 47%, #808080 48%, #808080 52%, #000 53%, #1a1a1a 96%, #2e2e2e);\n  //box-shadow: 5px -10px 20px 0 #1a1a1a;\n}\ninput[type='range']::-ms-thumb {\n  width: 32px;\n  height: 72px;\n  border: 0;\n  //box-shadow: -10px -5px 20px 0 #1a1a1a;\n  background-image: -ms-linear-gradient(bottom, #0f0f0f, #2e2e2e 4%, #0f0f0f 8%, #000 47%, #808080 48%, #808080 52%, #000 53%, #1a1a1a 96%, #2e2e2e);\n}\ninput[type='range']::-ms-tooltip {\n  display: none;\n}\ninput[type='range']::-moz-range-thumb {\n  width: 32px;\n  height: 72px;\n  border: 0;\n  box-shadow: -10px -5px 20px 0 #1a1a1a;\n  background-image: -moz-linear-gradient(bottom, #0f0f0f, #2e2e2e 4%, #0f0f0f 8%, #000 47%, #808080 48%, #808080 52%, #000 53%, #1a1a1a 96%, #2e2e2e);\n  border-radius: 0;\n  transform: rotateZ(-90deg);\n}\n.slider-value {\n    display: inline-block;\n    margin-left: 110px; /* Adjust as needed */\n    margin-top: -29px;\n    font-size: 50px;\n    font-weight: bold;\n}\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 930,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "aa8c482.93734b8",
        "type": "http in",
        "z": "a08ae145f2d5cb38",
        "name": "",
        "url": "/download",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 540,
        "y": 1020,
        "wires": [
            [
                "d969ba04.e24028"
            ]
        ]
    },
    {
        "id": "d19cc7d8.646328",
        "type": "http response",
        "z": "a08ae145f2d5cb38",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1490,
        "y": 1120,
        "wires": []
    },
    {
        "id": "d969ba04.e24028",
        "type": "function",
        "z": "a08ae145f2d5cb38",
        "name": "Get the file name",
        "func": "msg.filename = msg.req.query.filename;\nmsg.contentdisposition = \"attachment; filename=\\\"\" + msg.req.query.filename.replace(/^.*(\\\\|\\/|\\:)/, '') + \"\\\"\";\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 1020,
        "wires": [
            [
                "e92381c3.c4cd2"
            ]
        ],
        "outputLabels": [
            "Folder selected"
        ]
    },
    {
        "id": "e92381c3.c4cd2",
        "type": "file in",
        "z": "a08ae145f2d5cb38",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1140,
        "y": 1120,
        "wires": [
            [
                "99ff4953.d0d5c8"
            ]
        ]
    },
    {
        "id": "99ff4953.d0d5c8",
        "type": "change",
        "z": "a08ae145f2d5cb38",
        "name": "Set Headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "headers.content-type",
                "pt": "msg",
                "to": "text/csv",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "headers.Content-Disposition",
                "pt": "msg",
                "to": "contentdisposition",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1310,
        "y": 1120,
        "wires": [
            [
                "d19cc7d8.646328"
            ]
        ]
    },
    {
        "id": "4c19cb23d0b871bb",
        "type": "comment",
        "z": "a08ae145f2d5cb38",
        "name": "New File Browser",
        "info": "",
        "x": 400,
        "y": 380,
        "wires": []
    },
    {
        "id": "52a7d9cf9e103e93",
        "type": "inject",
        "z": "a08ae145f2d5cb38",
        "name": "Init",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "change",
        "payload": "filebrowser_default_folder",
        "payloadType": "global",
        "x": 370,
        "y": 480,
        "wires": [
            [
                "5e18896e060736a2"
            ]
        ]
    },
    {
        "id": "5e18896e060736a2",
        "type": "function",
        "z": "a08ae145f2d5cb38",
        "name": "Folder handling",
        "func": "let folder = context.get(\"folder\");\nif (folder===undefined) {\n    folder=\"/projects\";\n    context.set(\"folder\", folder);\n}\n\nlet hidden = context.get(\"hidden\");\nif (hidden===undefined) {\n    hidden=false;\n    context.set(\"hidden\", hidden);\n}\n\nif (msg.topic===\"up\") {\n    var the_arr = folder.split('/');\n    the_arr.pop();\n    folder=the_arr.join('/'); \n    context.set(\"folder\", folder);\n}\nif (msg.topic===\"change\") {\n    folder=msg.payload;    \n    context.set(\"folder\", folder);\n}\nif (msg.topic===\"hidden\") {\n    hidden=msg.payload;    \n    context.set(\"hidden\", hidden);\n}\n\nmsg.payload = {\"start\":folder, \"hidden\": hidden};\nflow.set(\"folder\", folder);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 520,
        "wires": [
            [
                "7940237deb98874d",
                "c9bad6d25a599039"
            ]
        ]
    },
    {
        "id": "1a853077cd0370f3",
        "type": "function",
        "z": "a08ae145f2d5cb38",
        "name": "Prep Data",
        "func": "function convertDate(local) {\n    let d = new Date(local);\n    d.setTime(d.getTime()+3600*1000);\n    return d.toISOString().slice(0, 19).replace('T', ' ');\n}\n\nif (msg.topic === \"quickfilter\") {\n    let filter = msg.payload;\n    msg.payload = flow.get(\"currentfolder\").slice();\n    if (msg.payload !== \"\") {\n        for (var i = msg.payload.length-1; i >= 0; i--) {\n            if (!msg.payload[i].fname.includes(filter)) {\n                msg.payload.splice(i,1);\n            }\n        }\n    }\n    return msg;\n}\n\nfor (var i=0; i<msg.payload.length; i++) {\n   // msg.payload[i].stat.created = convertDate(msg.payload[i].stat.created);\n   // msg.payload[i].stat.changed = convertDate(msg.payload[i].stat.changed);\n   // msg.payload[i].stat.accessed = convertDate(msg.payload[i].stat.accessed);\n   // msg.payload[i].stat.statusChanged = convertDate(msg.payload[i].stat.statusChanged);\n    msg.payload[i].fname = msg.payload[i].name.replace(/^.*(\\\\|\\/|\\:)/, '');\n    if (msg.payload[i].stat.isDirectory) {\n        msg.payload[i].ext = \"folder\";\n        msg.payload[i].icon = \"<i class=\\\"fa fa-folder-o\\\"></i>\";\n    } else {\n        msg.payload[i].ext = msg.payload[i].fname.split('.').pop().toLowerCase();\n        msg.payload[i].downloadlink = \"/download?filename=\"+msg.payload[i].name;\n        switch (msg.payload[i].ext) {\n            case \"csv\":\n            case \"txt\":\n                msg.payload[i].icon = \"<i class=\\\"fa fa-file-text-o\\\"></i>\";\n                break;\n            case \"jpg\":\n            case \"jpeg\":\n            case \"png\":\n            case \"gif\":\n                msg.payload[i].icon = \"<i class=\\\"fa fa-file-image-o\\\"></i>\";\n                break;\n            case \"json\":\n            case \"py\":\n            case \"sh\":\n                msg.payload[i].icon = \"<i class=\\\"fa fa-file-code-o\\\"></i>\";\n                break;\n            default:\n                msg.payload[i].icon = \"<i class=\\\"fa fa-file-o\\\"></i>\";\n        }\n    }\n}\nflow.set(\"currentfolder\",msg.payload);\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 520,
        "wires": [
            [
                "8dd5fe2ad1c1362e"
            ]
        ]
    },
    {
        "id": "2fd8e45dcc9f2743",
        "type": "switch",
        "z": "a08ae145f2d5cb38",
        "name": "File type",
        "property": "payload.ext",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "csv",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "txt",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "json",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "sh",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "py",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "jpg",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "jpeg",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "png",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "gif",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 10,
        "x": 640,
        "y": 840,
        "wires": [
            [
                "f4a765c1f1902e7a"
            ],
            [
                "f4a765c1f1902e7a"
            ],
            [
                "f4a765c1f1902e7a"
            ],
            [
                "f4a765c1f1902e7a"
            ],
            [
                "f4a765c1f1902e7a"
            ],
            [
                "d01017c774b3015b"
            ],
            [
                "d01017c774b3015b"
            ],
            [
                "d01017c774b3015b"
            ],
            [
                "d01017c774b3015b"
            ],
            [
                "94f0866931125570"
            ]
        ]
    },
    {
        "id": "f4a765c1f1902e7a",
        "type": "function",
        "z": "a08ae145f2d5cb38",
        "name": "Get the file name",
        "func": "if (msg.payload.stat.size<200000) {\n    msg.filename = msg.payload.name;\n    return [msg,null];\n} else {\n    return [null,msg];  \n}\n",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 800,
        "wires": [
            [
                "1bd0dae8f649fd8a"
            ],
            [
                "777954f42573efc6"
            ]
        ],
        "outputLabels": [
            "Folder selected",
            ""
        ]
    },
    {
        "id": "1bd0dae8f649fd8a",
        "type": "file in",
        "z": "a08ae145f2d5cb38",
        "name": "",
        "filename": "",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 1200,
        "y": 920,
        "wires": [
            [
                "87752f132359caad"
            ]
        ]
    },
    {
        "id": "87752f132359caad",
        "type": "function",
        "z": "a08ae145f2d5cb38",
        "name": "Div text",
        "func": "function HTMLEncode(str) {\n    var i = str.length,\n        aRet = [];\n\n    while (i--) {\n        var iC = str[i].charCodeAt();\n        if (iC < 65 || iC > 127 || (iC > 90 && iC < 97)) {\n            aRet[i] = '&#' + iC + ';';\n        } else {\n            aRet[i] = str[i];\n        }\n    }\n    return aRet.join('');\n}\n\nlet text = \"<div>\";\nlet filecontent = \"\";\nfilecontent += msg.payload;\n\nfilecontent = HTMLEncode(filecontent);\n\n// Convert line feed to <br>\nfilecontent = filecontent.replace(/(?:\\r\\n|\\r|\\n)/g, '<br/>');\n\n\n\ntext += filecontent;\ntext += \"</div>\";\nmsg.payload = text;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1360,
        "y": 920,
        "wires": [
            [
                "1ec03f77c131fff2"
            ]
        ]
    },
    {
        "id": "d01017c774b3015b",
        "type": "function",
        "z": "a08ae145f2d5cb38",
        "name": "Get the file name",
        "func": "if (msg.payload.stat.size < 2000000) {\n    msg.filename = msg.payload.name;\n    return [msg, null];\n} else {\n    return [null, msg];\n}\n",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 880,
        "wires": [
            [
                "36938b3decb00b93"
            ],
            [
                "777954f42573efc6"
            ]
        ],
        "outputLabels": [
            "Folder selected",
            ""
        ]
    },
    {
        "id": "36938b3decb00b93",
        "type": "file in",
        "z": "a08ae145f2d5cb38",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1200,
        "y": 1000,
        "wires": [
            [
                "f3a77316a142090b"
            ]
        ]
    },
    {
        "id": "ee1728b79fedf48f",
        "type": "function",
        "z": "a08ae145f2d5cb38",
        "name": "Div image",
        "func": "let text = \"<img src=\\\"data:image/png;base64,\";\ntext += msg.payload;\ntext += \"\\\" width=\\\"100%\\\"/>\";\nmsg.payload = text;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 1000,
        "wires": [
            [
                "1ec03f77c131fff2"
            ]
        ]
    },
    {
        "id": "cf09d98db7656238",
        "type": "function",
        "z": "a08ae145f2d5cb38",
        "name": "Change folder",
        "func": "\nif (msg.payload.stat.isDirectory) {\n\n    msg.topic = \"change\";\n    msg.payload = msg.payload.name;\n\n    return msg;\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 600,
        "wires": [
            [
                "5e18896e060736a2"
            ]
        ]
    },
    {
        "id": "ab85eb9606fc412a",
        "type": "function",
        "z": "a08ae145f2d5cb38",
        "name": "Handle file actions",
        "func": "switch (msg.topic) {\n    case (\"delete\"):\n        msg.file = context.get(\"lastfile\");\n        if (msg.file!==undefined) {\n            msg.filename = msg.file.name;\n            return [msg,null];\n        }\n        break;\n    case (\"download\"):\n        msg.file = context.get(\"lastfile\");\n        if (msg.file !== undefined) {\n            //msg.template = \"<script>window.location.href = \\\"/download?filename=\"+msg.file.name+\"\\\";</script>\";\n            msg.template = \"<script>window.open('/download?filename=\" + encodeURIComponent(msg.file.name) + \"', '_blank');</script>\";\n            return [null, msg];\n        }\n        break;\n    default:\n        context.set(\"lastfile\", msg.payload);\n}",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1590,
        "y": 720,
        "wires": [
            [
                "346d1bfad5842d5e"
            ],
            [
                "f27d36356901af0b"
            ]
        ]
    },
    {
        "id": "346d1bfad5842d5e",
        "type": "change",
        "z": "a08ae145f2d5cb38",
        "name": "Set message",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Delete confirmation",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Are you sure you want to delete this file?",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1810,
        "y": 720,
        "wires": [
            [
                "89dc6deaab1808aa"
            ]
        ]
    },
    {
        "id": "32285273e011031e",
        "type": "switch",
        "z": "a08ae145f2d5cb38",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Yes",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2150,
        "y": 720,
        "wires": [
            [
                "2ac7af71cd82b7a7"
            ]
        ]
    },
    {
        "id": "2ac7af71cd82b7a7",
        "type": "file",
        "z": "a08ae145f2d5cb38",
        "name": "Delete file",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "delete",
        "encoding": "none",
        "x": 2300,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "1275bed0427c4097",
        "type": "link in",
        "z": "a08ae145f2d5cb38",
        "name": "Refresh File List",
        "links": [
            "3d10270c932dca69"
        ],
        "x": 405,
        "y": 680,
        "wires": [
            [
                "5e18896e060736a2"
            ]
        ]
    },
    {
        "id": "94f0866931125570",
        "type": "function",
        "z": "a08ae145f2d5cb38",
        "name": "Div text",
        "func": "msg.payload = \"<div>No preview available</div>\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1500,
        "y": 1060,
        "wires": [
            [
                "1ec03f77c131fff2"
            ]
        ]
    },
    {
        "id": "777954f42573efc6",
        "type": "function",
        "z": "a08ae145f2d5cb38",
        "name": "File too big",
        "func": "msg.payload = \"<div>File too large for preview</div>\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1370,
        "y": 960,
        "wires": [
            [
                "1ec03f77c131fff2"
            ]
        ]
    },
    {
        "id": "66bc0f58da04db30",
        "type": "function",
        "z": "a08ae145f2d5cb38",
        "name": "Sure?",
        "func": "let folder = flow.get(\"currentfolder\");\nlet count = 0;\nlet total = 0;\n\nif (folder===undefined) {\n    return;\n}\n\nfor (var i = 0; i < folder.length; i++) {\n    if (folder[i].stat.isFile) {\n        count++\n        total+=folder[i].stat.size;\n    } \n}\n\nmsg.topic=\"Download all files?\"\nmsg.payload = \"This will zip \" + count + \" file(s) in this folder with a total size of \" + total.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")+\" bytes. Are you sure?\";\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1160,
        "wires": [
            [
                "fe70301f0dba3337"
            ]
        ]
    },
    {
        "id": "1342a37f07b7f60b",
        "type": "switch",
        "z": "a08ae145f2d5cb38",
        "name": "Yes?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Yes",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 910,
        "y": 1160,
        "wires": [
            [
                "03c02db4323050f9"
            ]
        ]
    },
    {
        "id": "03c02db4323050f9",
        "type": "function",
        "z": "a08ae145f2d5cb38",
        "name": "Zip command",
        "func": "let folder = flow.get(\"folder\");\n\n// Get the current time and convert it to text\nvar now = new Date();\nvar yyyy = now.getFullYear();\nvar mm = now.getMonth() < 9 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1); // getMonth() is zero-based\nvar dd = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\nvar hh = now.getHours() < 10 ? \"0\" + now.getHours() : now.getHours();\nvar mmm = now.getMinutes() < 10 ? \"0\" + now.getMinutes() : now.getMinutes();\nvar ss = now.getSeconds() < 10 ? \"0\" + now.getSeconds() : now.getSeconds();\n\n// Generate out file name pattern\nlet filename = folder.match(/([^\\/]*)\\/*$/)[1]+\"_\" + yyyy + mm + dd + hh + mmm+ss+\".zip\";\nlet filepath = folder + \"/\" + filename;\n\nmsg.save = {\"name\": filepath, \"fname\": filename };\n\nmsg.payload = \"zip \" + filepath+\" \"+folder+\"/*.*\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 1240,
        "wires": [
            [
                "08f02bd4e485aba7"
            ]
        ]
    },
    {
        "id": "08f02bd4e485aba7",
        "type": "exec",
        "z": "a08ae145f2d5cb38",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Execute zip",
        "x": 1450,
        "y": 1260,
        "wires": [
            [
                "9442aea2f165046c"
            ],
            [],
            []
        ]
    },
    {
        "id": "278d2f3e30bb8eed",
        "type": "change",
        "z": "a08ae145f2d5cb38",
        "name": "Get zip details",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "save",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1820,
        "y": 1200,
        "wires": [
            [
                "9f0139c9d4cf303c",
                "ab85eb9606fc412a"
            ]
        ]
    },
    {
        "id": "9442aea2f165046c",
        "type": "switch",
        "z": "a08ae145f2d5cb38",
        "name": "Success?",
        "property": "rc.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1620,
        "y": 1240,
        "wires": [
            [
                "278d2f3e30bb8eed",
                "33821421f5f9e1c3"
            ],
            [
                "a14832dbe8ca1c31"
            ]
        ]
    },
    {
        "id": "33821421f5f9e1c3",
        "type": "change",
        "z": "a08ae145f2d5cb38",
        "name": "Notification",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Zip file containing all files in this folder has been generated. Click on Download above.",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1830,
        "y": 1260,
        "wires": [
            [
                "1ec03f77c131fff2"
            ]
        ]
    },
    {
        "id": "a14832dbe8ca1c31",
        "type": "change",
        "z": "a08ae145f2d5cb38",
        "name": "Failed notification",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Download all failed!",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Download All",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1850,
        "y": 1300,
        "wires": [
            [
                "6c43b2f8441fd24e"
            ]
        ]
    },
    {
        "id": "4434a55ef1ec1dbc",
        "type": "change",
        "z": "a08ae145f2d5cb38",
        "name": "Empty",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 910,
        "y": 460,
        "wires": [
            [
                "bfc3ef112044fb10"
            ]
        ]
    },
    {
        "id": "7c30fb48.99cd2c",
        "type": "http in",
        "z": "a08ae145f2d5cb38",
        "name": "",
        "url": "/simple",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 1580,
        "wires": [
            [
                "3153fbd3.203a64"
            ]
        ]
    },
    {
        "id": "3153fbd3.203a64",
        "type": "template",
        "z": "a08ae145f2d5cb38",
        "name": "html",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<h1>Upload a file here:</h1>\n\n<form action=\"/upload\" method=\"POST\" enctype=\"multipart/form-data\">\n    <input type=\"file\" name=\"myFile\" />\n    <input type=\"submit\" value=\"Submit\">\n</form>",
        "output": "str",
        "x": 270,
        "y": 1580,
        "wires": [
            [
                "737e44d2.373a64"
            ]
        ]
    },
    {
        "id": "737e44d2.373a64",
        "type": "http response",
        "z": "a08ae145f2d5cb38",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 450,
        "y": 1580,
        "wires": []
    },
    {
        "id": "4a7eded4.56598",
        "type": "http response",
        "z": "a08ae145f2d5cb38",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 550,
        "y": 1840,
        "wires": []
    },
    {
        "id": "46e01eea.4a46a",
        "type": "comment",
        "z": "a08ae145f2d5cb38",
        "name": "Simple",
        "info": "",
        "x": 90,
        "y": 1540,
        "wires": []
    },
    {
        "id": "72e223ba.672874",
        "type": "template",
        "z": "a08ae145f2d5cb38",
        "name": "dropzone.js",
        "field": "dropzonejs",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "\n/*\n *\n * More info at [www.dropzonejs.com](http://www.dropzonejs.com)\n *\n * Copyright (c) 2012, Matias Meno\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n */\n\n(function() {\n  var Dropzone, Emitter, camelize, contentLoaded, detectVerticalSquash, drawImageIOSFix, noop, without,\n    __slice = [].slice,\n    __hasProp = {}.hasOwnProperty,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n  noop = function() {};\n\n  Emitter = (function() {\n    function Emitter() {}\n\n    Emitter.prototype.addEventListener = Emitter.prototype.on;\n\n    Emitter.prototype.on = function(event, fn) {\n      this._callbacks = this._callbacks || {};\n      if (!this._callbacks[event]) {\n        this._callbacks[event] = [];\n      }\n      this._callbacks[event].push(fn);\n      return this;\n    };\n\n    Emitter.prototype.emit = function() {\n      var args, callback, callbacks, event, _i, _len;\n      event = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n      this._callbacks = this._callbacks || {};\n      callbacks = this._callbacks[event];\n      if (callbacks) {\n        for (_i = 0, _len = callbacks.length; _i < _len; _i++) {\n          callback = callbacks[_i];\n          callback.apply(this, args);\n        }\n      }\n      return this;\n    };\n\n    Emitter.prototype.removeListener = Emitter.prototype.off;\n\n    Emitter.prototype.removeAllListeners = Emitter.prototype.off;\n\n    Emitter.prototype.removeEventListener = Emitter.prototype.off;\n\n    Emitter.prototype.off = function(event, fn) {\n      var callback, callbacks, i, _i, _len;\n      if (!this._callbacks || arguments.length === 0) {\n        this._callbacks = {};\n        return this;\n      }\n      callbacks = this._callbacks[event];\n      if (!callbacks) {\n        return this;\n      }\n      if (arguments.length === 1) {\n        delete this._callbacks[event];\n        return this;\n      }\n      for (i = _i = 0, _len = callbacks.length; _i < _len; i = ++_i) {\n        callback = callbacks[i];\n        if (callback === fn) {\n          callbacks.splice(i, 1);\n          break;\n        }\n      }\n      return this;\n    };\n\n    return Emitter;\n\n  })();\n\n  Dropzone = (function(_super) {\n    var extend, resolveOption;\n\n    __extends(Dropzone, _super);\n\n    Dropzone.prototype.Emitter = Emitter;\n\n\n    /*\n    This is a list of all available events you can register on a dropzone object.\n    \n    You can register an event handler like this:\n    \n        dropzone.on(\"dragEnter\", function() { });\n     */\n\n    Dropzone.prototype.events = [\"drop\", \"dragstart\", \"dragend\", \"dragenter\", \"dragover\", \"dragleave\", \"addedfile\", \"addedfiles\", \"removedfile\", \"thumbnail\", \"error\", \"errormultiple\", \"processing\", \"processingmultiple\", \"uploadprogress\", \"totaluploadprogress\", \"sending\", \"sendingmultiple\", \"success\", \"successmultiple\", \"canceled\", \"canceledmultiple\", \"complete\", \"completemultiple\", \"reset\", \"maxfilesexceeded\", \"maxfilesreached\", \"queuecomplete\"];\n\n    Dropzone.prototype.defaultOptions = {\n      url: null,\n      method: \"post\",\n      withCredentials: false,\n      parallelUploads: 2,\n      uploadMultiple: false,\n      maxFilesize: 256,\n      paramName: \"file\",\n      createImageThumbnails: true,\n      maxThumbnailFilesize: 10,\n      thumbnailWidth: 120,\n      thumbnailHeight: 120,\n      filesizeBase: 1000,\n      maxFiles: null,\n      params: {},\n      clickable: true,\n      ignoreHiddenFiles: true,\n      acceptedFiles: null,\n      acceptedMimeTypes: null,\n      autoProcessQueue: true,\n      autoQueue: true,\n      addRemoveLinks: false,\n      previewsContainer: null,\n      hiddenInputContainer: \"body\",\n      capture: null,\n      renameFilename: null,\n      dictDefaultMessage: \"Drop files here to upload\",\n      dictFallbackMessage: \"Your browser does not support drag'n'drop file uploads.\",\n      dictFallbackText: \"Please use the fallback form below to upload your files like in the olden days.\",\n      dictFileTooBig: \"File is too big ({{filesize}}MiB). Max filesize: {{maxFilesize}}MiB.\",\n      dictInvalidFileType: \"You can't upload files of this type.\",\n      dictResponseError: \"Server responded with {{statusCode}} code.\",\n      dictCancelUpload: \"Cancel upload\",\n      dictCancelUploadConfirmation: \"Are you sure you want to cancel this upload?\",\n      dictRemoveFile: \"Remove file\",\n      dictRemoveFileConfirmation: null,\n      dictMaxFilesExceeded: \"You can not upload any more files.\",\n      accept: function(file, done) {\n        return done();\n      },\n      init: function() {\n        return noop;\n      },\n      forceFallback: false,\n      fallback: function() {\n        var child, messageElement, span, _i, _len, _ref;\n        this.element.className = \"\" + this.element.className + \" dz-browser-not-supported\";\n        _ref = this.element.getElementsByTagName(\"div\");\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          child = _ref[_i];\n          if (/(^| )dz-message($| )/.test(child.className)) {\n            messageElement = child;\n            child.className = \"dz-message\";\n            continue;\n          }\n        }\n        if (!messageElement) {\n          messageElement = Dropzone.createElement(\"<div class=\\\"dz-message\\\"><span></span></div>\");\n          this.element.appendChild(messageElement);\n        }\n        span = messageElement.getElementsByTagName(\"span\")[0];\n        if (span) {\n          if (span.textContent != null) {\n            span.textContent = this.options.dictFallbackMessage;\n          } else if (span.innerText != null) {\n            span.innerText = this.options.dictFallbackMessage;\n          }\n        }\n        return this.element.appendChild(this.getFallbackForm());\n      },\n      resize: function(file) {\n        var info, srcRatio, trgRatio;\n        info = {\n          srcX: 0,\n          srcY: 0,\n          srcWidth: file.width,\n          srcHeight: file.height\n        };\n        srcRatio = file.width / file.height;\n        info.optWidth = this.options.thumbnailWidth;\n        info.optHeight = this.options.thumbnailHeight;\n        if ((info.optWidth == null) && (info.optHeight == null)) {\n          info.optWidth = info.srcWidth;\n          info.optHeight = info.srcHeight;\n        } else if (info.optWidth == null) {\n          info.optWidth = srcRatio * info.optHeight;\n        } else if (info.optHeight == null) {\n          info.optHeight = (1 / srcRatio) * info.optWidth;\n        }\n        trgRatio = info.optWidth / info.optHeight;\n        if (file.height < info.optHeight || file.width < info.optWidth) {\n          info.trgHeight = info.srcHeight;\n          info.trgWidth = info.srcWidth;\n        } else {\n          if (srcRatio > trgRatio) {\n            info.srcHeight = file.height;\n            info.srcWidth = info.srcHeight * trgRatio;\n          } else {\n            info.srcWidth = file.width;\n            info.srcHeight = info.srcWidth / trgRatio;\n          }\n        }\n        info.srcX = (file.width - info.srcWidth) / 2;\n        info.srcY = (file.height - info.srcHeight) / 2;\n        return info;\n      },\n\n      /*\n      Those functions register themselves to the events on init and handle all\n      the user interface specific stuff. Overwriting them won't break the upload\n      but can break the way it's displayed.\n      You can overwrite them if you don't like the default behavior. If you just\n      want to add an additional event handler, register it on the dropzone object\n      and don't overwrite those options.\n       */\n      drop: function(e) {\n        return this.element.classList.remove(\"dz-drag-hover\");\n      },\n      dragstart: noop,\n      dragend: function(e) {\n        return this.element.classList.remove(\"dz-drag-hover\");\n      },\n      dragenter: function(e) {\n        return this.element.classList.add(\"dz-drag-hover\");\n      },\n      dragover: function(e) {\n        return this.element.classList.add(\"dz-drag-hover\");\n      },\n      dragleave: function(e) {\n        return this.element.classList.remove(\"dz-drag-hover\");\n      },\n      paste: noop,\n      reset: function() {\n        return this.element.classList.remove(\"dz-started\");\n      },\n      addedfile: function(file) {\n        var node, removeFileEvent, removeLink, _i, _j, _k, _len, _len1, _len2, _ref, _ref1, _ref2, _results;\n        if (this.element === this.previewsContainer) {\n          this.element.classList.add(\"dz-started\");\n        }\n        if (this.previewsContainer) {\n          file.previewElement = Dropzone.createElement(this.options.previewTemplate.trim());\n          file.previewTemplate = file.previewElement;\n          this.previewsContainer.appendChild(file.previewElement);\n          _ref = file.previewElement.querySelectorAll(\"[data-dz-name]\");\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            node = _ref[_i];\n            node.textContent = this._renameFilename(file.name);\n          }\n          _ref1 = file.previewElement.querySelectorAll(\"[data-dz-size]\");\n          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\n            node = _ref1[_j];\n            node.innerHTML = this.filesize(file.size);\n          }\n          if (this.options.addRemoveLinks) {\n            file._removeLink = Dropzone.createElement(\"<a class=\\\"dz-remove\\\" href=\\\"javascript:undefined;\\\" data-dz-remove>\" + this.options.dictRemoveFile + \"</a>\");\n            file.previewElement.appendChild(file._removeLink);\n          }\n          removeFileEvent = (function(_this) {\n            return function(e) {\n              e.preventDefault();\n              e.stopPropagation();\n              if (file.status === Dropzone.UPLOADING) {\n                return Dropzone.confirm(_this.options.dictCancelUploadConfirmation, function() {\n                  return _this.removeFile(file);\n                });\n              } else {\n                if (_this.options.dictRemoveFileConfirmation) {\n                  return Dropzone.confirm(_this.options.dictRemoveFileConfirmation, function() {\n                    return _this.removeFile(file);\n                  });\n                } else {\n                  return _this.removeFile(file);\n                }\n              }\n            };\n          })(this);\n          _ref2 = file.previewElement.querySelectorAll(\"[data-dz-remove]\");\n          _results = [];\n          for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {\n            removeLink = _ref2[_k];\n            _results.push(removeLink.addEventListener(\"click\", removeFileEvent));\n          }\n          return _results;\n        }\n      },\n      removedfile: function(file) {\n        var _ref;\n        if (file.previewElement) {\n          if ((_ref = file.previewElement) != null) {\n            _ref.parentNode.removeChild(file.previewElement);\n          }\n        }\n        return this._updateMaxFilesReachedClass();\n      },\n      thumbnail: function(file, dataUrl) {\n        var thumbnailElement, _i, _len, _ref;\n        if (file.previewElement) {\n          file.previewElement.classList.remove(\"dz-file-preview\");\n          _ref = file.previewElement.querySelectorAll(\"[data-dz-thumbnail]\");\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            thumbnailElement = _ref[_i];\n            thumbnailElement.alt = file.name;\n            thumbnailElement.src = dataUrl;\n          }\n          return setTimeout(((function(_this) {\n            return function() {\n              return file.previewElement.classList.add(\"dz-image-preview\");\n            };\n          })(this)), 1);\n        }\n      },\n      error: function(file, message) {\n        var node, _i, _len, _ref, _results;\n        if (file.previewElement) {\n          file.previewElement.classList.add(\"dz-error\");\n          if (typeof message !== \"String\" && message.error) {\n            message = message.error;\n          }\n          _ref = file.previewElement.querySelectorAll(\"[data-dz-errormessage]\");\n          _results = [];\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            node = _ref[_i];\n            _results.push(node.textContent = message);\n          }\n          return _results;\n        }\n      },\n      errormultiple: noop,\n      processing: function(file) {\n        if (file.previewElement) {\n          file.previewElement.classList.add(\"dz-processing\");\n          if (file._removeLink) {\n            return file._removeLink.textContent = this.options.dictCancelUpload;\n          }\n        }\n      },\n      processingmultiple: noop,\n      uploadprogress: function(file, progress, bytesSent) {\n        var node, _i, _len, _ref, _results;\n        if (file.previewElement) {\n          _ref = file.previewElement.querySelectorAll(\"[data-dz-uploadprogress]\");\n          _results = [];\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            node = _ref[_i];\n            if (node.nodeName === 'PROGRESS') {\n              _results.push(node.value = progress);\n            } else {\n              _results.push(node.style.width = \"\" + progress + \"%\");\n            }\n          }\n          return _results;\n        }\n      },\n      totaluploadprogress: noop,\n      sending: noop,\n      sendingmultiple: noop,\n      success: function(file) {\n        if (file.previewElement) {\n          return file.previewElement.classList.add(\"dz-success\");\n        }\n      },\n      successmultiple: noop,\n      canceled: function(file) {\n        return this.emit(\"error\", file, \"Upload canceled.\");\n      },\n      canceledmultiple: noop,\n      complete: function(file) {\n        if (file._removeLink) {\n          file._removeLink.textContent = this.options.dictRemoveFile;\n        }\n        if (file.previewElement) {\n          return file.previewElement.classList.add(\"dz-complete\");\n        }\n      },\n      completemultiple: noop,\n      maxfilesexceeded: noop,\n      maxfilesreached: noop,\n      queuecomplete: noop,\n      addedfiles: noop,\n      previewTemplate: \"<div class=\\\"dz-preview dz-file-preview\\\">\\n  <div class=\\\"dz-image\\\"><img data-dz-thumbnail /></div>\\n  <div class=\\\"dz-details\\\">\\n    <div class=\\\"dz-size\\\"><span data-dz-size></span></div>\\n    <div class=\\\"dz-filename\\\"><span data-dz-name></span></div>\\n  </div>\\n  <div class=\\\"dz-progress\\\"><span class=\\\"dz-upload\\\" data-dz-uploadprogress></span></div>\\n  <div class=\\\"dz-error-message\\\"><span data-dz-errormessage></span></div>\\n  <div class=\\\"dz-success-mark\\\">\\n    <svg width=\\\"54px\\\" height=\\\"54px\\\" viewBox=\\\"0 0 54 54\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xmlns:sketch=\\\"http://www.bohemiancoding.com/sketch/ns\\\">\\n      <title>Check</title>\\n      <defs></defs>\\n      <g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\" sketch:type=\\\"MSPage\\\">\\n        <path d=\\\"M23.5,31.8431458 L17.5852419,25.9283877 C16.0248253,24.3679711 13.4910294,24.366835 11.9289322,25.9289322 C10.3700136,27.4878508 10.3665912,30.0234455 11.9283877,31.5852419 L20.4147581,40.0716123 C20.5133999,40.1702541 20.6159315,40.2626649 20.7218615,40.3488435 C22.2835669,41.8725651 24.794234,41.8626202 26.3461564,40.3106978 L43.3106978,23.3461564 C44.8771021,21.7797521 44.8758057,19.2483887 43.3137085,17.6862915 C41.7547899,16.1273729 39.2176035,16.1255422 37.6538436,17.6893022 L23.5,31.8431458 Z M27,53 C41.3594035,53 53,41.3594035 53,27 C53,12.6405965 41.3594035,1 27,1 C12.6405965,1 1,12.6405965 1,27 C1,41.3594035 12.6405965,53 27,53 Z\\\" id=\\\"Oval-2\\\" stroke-opacity=\\\"0.198794158\\\" stroke=\\\"#747474\\\" fill-opacity=\\\"0.816519475\\\" fill=\\\"#FFFFFF\\\" sketch:type=\\\"MSShapeGroup\\\"></path>\\n      </g>\\n    </svg>\\n  </div>\\n  <div class=\\\"dz-error-mark\\\">\\n    <svg width=\\\"54px\\\" height=\\\"54px\\\" viewBox=\\\"0 0 54 54\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xmlns:sketch=\\\"http://www.bohemiancoding.com/sketch/ns\\\">\\n      <title>Error</title>\\n      <defs></defs>\\n      <g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\" sketch:type=\\\"MSPage\\\">\\n        <g id=\\\"Check-+-Oval-2\\\" sketch:type=\\\"MSLayerGroup\\\" stroke=\\\"#747474\\\" stroke-opacity=\\\"0.198794158\\\" fill=\\\"#FFFFFF\\\" fill-opacity=\\\"0.816519475\\\">\\n          <path d=\\\"M32.6568542,29 L38.3106978,23.3461564 C39.8771021,21.7797521 39.8758057,19.2483887 38.3137085,17.6862915 C36.7547899,16.1273729 34.2176035,16.1255422 32.6538436,17.6893022 L27,23.3431458 L21.3461564,17.6893022 C19.7823965,16.1255422 17.2452101,16.1273729 15.6862915,17.6862915 C14.1241943,19.2483887 14.1228979,21.7797521 15.6893022,23.3461564 L21.3431458,29 L15.6893022,34.6538436 C14.1228979,36.2202479 14.1241943,38.7516113 15.6862915,40.3137085 C17.2452101,41.8726271 19.7823965,41.8744578 21.3461564,40.3106978 L27,34.6568542 L32.6538436,40.3106978 C34.2176035,41.8744578 36.7547899,41.8726271 38.3137085,40.3137085 C39.8758057,38.7516113 39.8771021,36.2202479 38.3106978,34.6538436 L32.6568542,29 Z M27,53 C41.3594035,53 53,41.3594035 53,27 C53,12.6405965 41.3594035,1 27,1 C12.6405965,1 1,12.6405965 1,27 C1,41.3594035 12.6405965,53 27,53 Z\\\" id=\\\"Oval-2\\\" sketch:type=\\\"MSShapeGroup\\\"></path>\\n        </g>\\n      </g>\\n    </svg>\\n  </div>\\n</div>\"\n    };\n\n    extend = function() {\n      var key, object, objects, target, val, _i, _len;\n      target = arguments[0], objects = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n      for (_i = 0, _len = objects.length; _i < _len; _i++) {\n        object = objects[_i];\n        for (key in object) {\n          val = object[key];\n          target[key] = val;\n        }\n      }\n      return target;\n    };\n\n    function Dropzone(element, options) {\n      var elementOptions, fallback, _ref;\n      this.element = element;\n      this.version = Dropzone.version;\n      this.defaultOptions.previewTemplate = this.defaultOptions.previewTemplate.replace(/\\n*/g, \"\");\n      this.clickableElements = [];\n      this.listeners = [];\n      this.files = [];\n      if (typeof this.element === \"string\") {\n        this.element = document.querySelector(this.element);\n      }\n      if (!(this.element && (this.element.nodeType != null))) {\n        throw new Error(\"Invalid dropzone element.\");\n      }\n      if (this.element.dropzone) {\n        throw new Error(\"Dropzone already attached.\");\n      }\n      Dropzone.instances.push(this);\n      this.element.dropzone = this;\n      elementOptions = (_ref = Dropzone.optionsForElement(this.element)) != null ? _ref : {};\n      this.options = extend({}, this.defaultOptions, elementOptions, options != null ? options : {});\n      if (this.options.forceFallback || !Dropzone.isBrowserSupported()) {\n        return this.options.fallback.call(this);\n      }\n      if (this.options.url == null) {\n        this.options.url = this.element.getAttribute(\"action\");\n      }\n      if (!this.options.url) {\n        throw new Error(\"No URL provided.\");\n      }\n      if (this.options.acceptedFiles && this.options.acceptedMimeTypes) {\n        throw new Error(\"You can't provide both 'acceptedFiles' and 'acceptedMimeTypes'. 'acceptedMimeTypes' is deprecated.\");\n      }\n      if (this.options.acceptedMimeTypes) {\n        this.options.acceptedFiles = this.options.acceptedMimeTypes;\n        delete this.options.acceptedMimeTypes;\n      }\n      this.options.method = this.options.method.toUpperCase();\n      if ((fallback = this.getExistingFallback()) && fallback.parentNode) {\n        fallback.parentNode.removeChild(fallback);\n      }\n      if (this.options.previewsContainer !== false) {\n        if (this.options.previewsContainer) {\n          this.previewsContainer = Dropzone.getElement(this.options.previewsContainer, \"previewsContainer\");\n        } else {\n          this.previewsContainer = this.element;\n        }\n      }\n      if (this.options.clickable) {\n        if (this.options.clickable === true) {\n          this.clickableElements = [this.element];\n        } else {\n          this.clickableElements = Dropzone.getElements(this.options.clickable, \"clickable\");\n        }\n      }\n      this.init();\n    }\n\n    Dropzone.prototype.getAcceptedFiles = function() {\n      var file, _i, _len, _ref, _results;\n      _ref = this.files;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        file = _ref[_i];\n        if (file.accepted) {\n          _results.push(file);\n        }\n      }\n      return _results;\n    };\n\n    Dropzone.prototype.getRejectedFiles = function() {\n      var file, _i, _len, _ref, _results;\n      _ref = this.files;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        file = _ref[_i];\n        if (!file.accepted) {\n          _results.push(file);\n        }\n      }\n      return _results;\n    };\n\n    Dropzone.prototype.getFilesWithStatus = function(status) {\n      var file, _i, _len, _ref, _results;\n      _ref = this.files;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        file = _ref[_i];\n        if (file.status === status) {\n          _results.push(file);\n        }\n      }\n      return _results;\n    };\n\n    Dropzone.prototype.getQueuedFiles = function() {\n      return this.getFilesWithStatus(Dropzone.QUEUED);\n    };\n\n    Dropzone.prototype.getUploadingFiles = function() {\n      return this.getFilesWithStatus(Dropzone.UPLOADING);\n    };\n\n    Dropzone.prototype.getAddedFiles = function() {\n      return this.getFilesWithStatus(Dropzone.ADDED);\n    };\n\n    Dropzone.prototype.getActiveFiles = function() {\n      var file, _i, _len, _ref, _results;\n      _ref = this.files;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        file = _ref[_i];\n        if (file.status === Dropzone.UPLOADING || file.status === Dropzone.QUEUED) {\n          _results.push(file);\n        }\n      }\n      return _results;\n    };\n\n    Dropzone.prototype.init = function() {\n      var eventName, noPropagation, setupHiddenFileInput, _i, _len, _ref, _ref1;\n      if (this.element.tagName === \"form\") {\n        this.element.setAttribute(\"enctype\", \"multipart/form-data\");\n      }\n      if (this.element.classList.contains(\"dropzone\") && !this.element.querySelector(\".dz-message\")) {\n        this.element.appendChild(Dropzone.createElement(\"<div class=\\\"dz-default dz-message\\\"><span>\" + this.options.dictDefaultMessage + \"</span></div>\"));\n      }\n      if (this.clickableElements.length) {\n        setupHiddenFileInput = (function(_this) {\n          return function() {\n            if (_this.hiddenFileInput) {\n              _this.hiddenFileInput.parentNode.removeChild(_this.hiddenFileInput);\n            }\n            _this.hiddenFileInput = document.createElement(\"input\");\n            _this.hiddenFileInput.setAttribute(\"type\", \"file\");\n            if ((_this.options.maxFiles == null) || _this.options.maxFiles > 1) {\n              _this.hiddenFileInput.setAttribute(\"multiple\", \"multiple\");\n            }\n            _this.hiddenFileInput.className = \"dz-hidden-input\";\n            if (_this.options.acceptedFiles != null) {\n              _this.hiddenFileInput.setAttribute(\"accept\", _this.options.acceptedFiles);\n            }\n            if (_this.options.capture != null) {\n              _this.hiddenFileInput.setAttribute(\"capture\", _this.options.capture);\n            }\n            _this.hiddenFileInput.style.visibility = \"hidden\";\n            _this.hiddenFileInput.style.position = \"absolute\";\n            _this.hiddenFileInput.style.top = \"0\";\n            _this.hiddenFileInput.style.left = \"0\";\n            _this.hiddenFileInput.style.height = \"0\";\n            _this.hiddenFileInput.style.width = \"0\";\n            document.querySelector(_this.options.hiddenInputContainer).appendChild(_this.hiddenFileInput);\n            return _this.hiddenFileInput.addEventListener(\"change\", function() {\n              var file, files, _i, _len;\n              files = _this.hiddenFileInput.files;\n              if (files.length) {\n                for (_i = 0, _len = files.length; _i < _len; _i++) {\n                  file = files[_i];\n                  _this.addFile(file);\n                }\n              }\n              _this.emit(\"addedfiles\", files);\n              return setupHiddenFileInput();\n            });\n          };\n        })(this);\n        setupHiddenFileInput();\n      }\n      this.URL = (_ref = window.URL) != null ? _ref : window.webkitURL;\n      _ref1 = this.events;\n      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n        eventName = _ref1[_i];\n        this.on(eventName, this.options[eventName]);\n      }\n      this.on(\"uploadprogress\", (function(_this) {\n        return function() {\n          return _this.updateTotalUploadProgress();\n        };\n      })(this));\n      this.on(\"removedfile\", (function(_this) {\n        return function() {\n          return _this.updateTotalUploadProgress();\n        };\n      })(this));\n      this.on(\"canceled\", (function(_this) {\n        return function(file) {\n          return _this.emit(\"complete\", file);\n        };\n      })(this));\n      this.on(\"complete\", (function(_this) {\n        return function(file) {\n          if (_this.getAddedFiles().length === 0 && _this.getUploadingFiles().length === 0 && _this.getQueuedFiles().length === 0) {\n            return setTimeout((function() {\n              return _this.emit(\"queuecomplete\");\n            }), 0);\n          }\n        };\n      })(this));\n      noPropagation = function(e) {\n        e.stopPropagation();\n        if (e.preventDefault) {\n          return e.preventDefault();\n        } else {\n          return e.returnValue = false;\n        }\n      };\n      this.listeners = [\n        {\n          element: this.element,\n          events: {\n            \"dragstart\": (function(_this) {\n              return function(e) {\n                return _this.emit(\"dragstart\", e);\n              };\n            })(this),\n            \"dragenter\": (function(_this) {\n              return function(e) {\n                noPropagation(e);\n                return _this.emit(\"dragenter\", e);\n              };\n            })(this),\n            \"dragover\": (function(_this) {\n              return function(e) {\n                var efct;\n                try {\n                  efct = e.dataTransfer.effectAllowed;\n                } catch (_error) {}\n                e.dataTransfer.dropEffect = 'move' === efct || 'linkMove' === efct ? 'move' : 'copy';\n                noPropagation(e);\n                return _this.emit(\"dragover\", e);\n              };\n            })(this),\n            \"dragleave\": (function(_this) {\n              return function(e) {\n                return _this.emit(\"dragleave\", e);\n              };\n            })(this),\n            \"drop\": (function(_this) {\n              return function(e) {\n                noPropagation(e);\n                return _this.drop(e);\n              };\n            })(this),\n            \"dragend\": (function(_this) {\n              return function(e) {\n                return _this.emit(\"dragend\", e);\n              };\n            })(this)\n          }\n        }\n      ];\n      this.clickableElements.forEach((function(_this) {\n        return function(clickableElement) {\n          return _this.listeners.push({\n            element: clickableElement,\n            events: {\n              \"click\": function(evt) {\n                if ((clickableElement !== _this.element) || (evt.target === _this.element || Dropzone.elementInside(evt.target, _this.element.querySelector(\".dz-message\")))) {\n                  _this.hiddenFileInput.click();\n                }\n                return true;\n              }\n            }\n          });\n        };\n      })(this));\n      this.enable();\n      return this.options.init.call(this);\n    };\n\n    Dropzone.prototype.destroy = function() {\n      var _ref;\n      this.disable();\n      this.removeAllFiles(true);\n      if ((_ref = this.hiddenFileInput) != null ? _ref.parentNode : void 0) {\n        this.hiddenFileInput.parentNode.removeChild(this.hiddenFileInput);\n        this.hiddenFileInput = null;\n      }\n      delete this.element.dropzone;\n      return Dropzone.instances.splice(Dropzone.instances.indexOf(this), 1);\n    };\n\n    Dropzone.prototype.updateTotalUploadProgress = function() {\n      var activeFiles, file, totalBytes, totalBytesSent, totalUploadProgress, _i, _len, _ref;\n      totalBytesSent = 0;\n      totalBytes = 0;\n      activeFiles = this.getActiveFiles();\n      if (activeFiles.length) {\n        _ref = this.getActiveFiles();\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          file = _ref[_i];\n          totalBytesSent += file.upload.bytesSent;\n          totalBytes += file.upload.total;\n        }\n        totalUploadProgress = 100 * totalBytesSent / totalBytes;\n      } else {\n        totalUploadProgress = 100;\n      }\n      return this.emit(\"totaluploadprogress\", totalUploadProgress, totalBytes, totalBytesSent);\n    };\n\n    Dropzone.prototype._getParamName = function(n) {\n      if (typeof this.options.paramName === \"function\") {\n        return this.options.paramName(n);\n      } else {\n        return \"\" + this.options.paramName + (this.options.uploadMultiple ? \"[\" + n + \"]\" : \"\");\n      }\n    };\n\n    Dropzone.prototype._renameFilename = function(name) {\n      if (typeof this.options.renameFilename !== \"function\") {\n        return name;\n      }\n      return this.options.renameFilename(name);\n    };\n\n    Dropzone.prototype.getFallbackForm = function() {\n      var existingFallback, fields, fieldsString, form;\n      if (existingFallback = this.getExistingFallback()) {\n        return existingFallback;\n      }\n      fieldsString = \"<div class=\\\"dz-fallback\\\">\";\n      if (this.options.dictFallbackText) {\n        fieldsString += \"<p>\" + this.options.dictFallbackText + \"</p>\";\n      }\n      fieldsString += \"<input type=\\\"file\\\" name=\\\"\" + (this._getParamName(0)) + \"\\\" \" + (this.options.uploadMultiple ? 'multiple=\"multiple\"' : void 0) + \" /><input type=\\\"submit\\\" value=\\\"Upload!\\\"></div>\";\n      fields = Dropzone.createElement(fieldsString);\n      if (this.element.tagName !== \"FORM\") {\n        form = Dropzone.createElement(\"<form action=\\\"\" + this.options.url + \"\\\" enctype=\\\"multipart/form-data\\\" method=\\\"\" + this.options.method + \"\\\"></form>\");\n        form.appendChild(fields);\n      } else {\n        this.element.setAttribute(\"enctype\", \"multipart/form-data\");\n        this.element.setAttribute(\"method\", this.options.method);\n      }\n      return form != null ? form : fields;\n    };\n\n    Dropzone.prototype.getExistingFallback = function() {\n      var fallback, getFallback, tagName, _i, _len, _ref;\n      getFallback = function(elements) {\n        var el, _i, _len;\n        for (_i = 0, _len = elements.length; _i < _len; _i++) {\n          el = elements[_i];\n          if (/(^| )fallback($| )/.test(el.className)) {\n            return el;\n          }\n        }\n      };\n      _ref = [\"div\", \"form\"];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        tagName = _ref[_i];\n        if (fallback = getFallback(this.element.getElementsByTagName(tagName))) {\n          return fallback;\n        }\n      }\n    };\n\n    Dropzone.prototype.setupEventListeners = function() {\n      var elementListeners, event, listener, _i, _len, _ref, _results;\n      _ref = this.listeners;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        elementListeners = _ref[_i];\n        _results.push((function() {\n          var _ref1, _results1;\n          _ref1 = elementListeners.events;\n          _results1 = [];\n          for (event in _ref1) {\n            listener = _ref1[event];\n            _results1.push(elementListeners.element.addEventListener(event, listener, false));\n          }\n          return _results1;\n        })());\n      }\n      return _results;\n    };\n\n    Dropzone.prototype.removeEventListeners = function() {\n      var elementListeners, event, listener, _i, _len, _ref, _results;\n      _ref = this.listeners;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        elementListeners = _ref[_i];\n        _results.push((function() {\n          var _ref1, _results1;\n          _ref1 = elementListeners.events;\n          _results1 = [];\n          for (event in _ref1) {\n            listener = _ref1[event];\n            _results1.push(elementListeners.element.removeEventListener(event, listener, false));\n          }\n          return _results1;\n        })());\n      }\n      return _results;\n    };\n\n    Dropzone.prototype.disable = function() {\n      var file, _i, _len, _ref, _results;\n      this.clickableElements.forEach(function(element) {\n        return element.classList.remove(\"dz-clickable\");\n      });\n      this.removeEventListeners();\n      _ref = this.files;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        file = _ref[_i];\n        _results.push(this.cancelUpload(file));\n      }\n      return _results;\n    };\n\n    Dropzone.prototype.enable = function() {\n      this.clickableElements.forEach(function(element) {\n        return element.classList.add(\"dz-clickable\");\n      });\n      return this.setupEventListeners();\n    };\n\n    Dropzone.prototype.filesize = function(size) {\n      var cutoff, i, selectedSize, selectedUnit, unit, units, _i, _len;\n      selectedSize = 0;\n      selectedUnit = \"b\";\n      if (size > 0) {\n        units = ['TB', 'GB', 'MB', 'KB', 'b'];\n        for (i = _i = 0, _len = units.length; _i < _len; i = ++_i) {\n          unit = units[i];\n          cutoff = Math.pow(this.options.filesizeBase, 4 - i) / 10;\n          if (size >= cutoff) {\n            selectedSize = size / Math.pow(this.options.filesizeBase, 4 - i);\n            selectedUnit = unit;\n            break;\n          }\n        }\n        selectedSize = Math.round(10 * selectedSize) / 10;\n      }\n      return \"<strong>\" + selectedSize + \"</strong> \" + selectedUnit;\n    };\n\n    Dropzone.prototype._updateMaxFilesReachedClass = function() {\n      if ((this.options.maxFiles != null) && this.getAcceptedFiles().length >= this.options.maxFiles) {\n        if (this.getAcceptedFiles().length === this.options.maxFiles) {\n          this.emit('maxfilesreached', this.files);\n        }\n        return this.element.classList.add(\"dz-max-files-reached\");\n      } else {\n        return this.element.classList.remove(\"dz-max-files-reached\");\n      }\n    };\n\n    Dropzone.prototype.drop = function(e) {\n      var files, items;\n      if (!e.dataTransfer) {\n        return;\n      }\n      this.emit(\"drop\", e);\n      files = e.dataTransfer.files;\n      this.emit(\"addedfiles\", files);\n      if (files.length) {\n        items = e.dataTransfer.items;\n        if (items && items.length && (items[0].webkitGetAsEntry != null)) {\n          this._addFilesFromItems(items);\n        } else {\n          this.handleFiles(files);\n        }\n      }\n    };\n\n    Dropzone.prototype.paste = function(e) {\n      var items, _ref;\n      if ((e != null ? (_ref = e.clipboardData) != null ? _ref.items : void 0 : void 0) == null) {\n        return;\n      }\n      this.emit(\"paste\", e);\n      items = e.clipboardData.items;\n      if (items.length) {\n        return this._addFilesFromItems(items);\n      }\n    };\n\n    Dropzone.prototype.handleFiles = function(files) {\n      var file, _i, _len, _results;\n      _results = [];\n      for (_i = 0, _len = files.length; _i < _len; _i++) {\n        file = files[_i];\n        _results.push(this.addFile(file));\n      }\n      return _results;\n    };\n\n    Dropzone.prototype._addFilesFromItems = function(items) {\n      var entry, item, _i, _len, _results;\n      _results = [];\n      for (_i = 0, _len = items.length; _i < _len; _i++) {\n        item = items[_i];\n        if ((item.webkitGetAsEntry != null) && (entry = item.webkitGetAsEntry())) {\n          if (entry.isFile) {\n            _results.push(this.addFile(item.getAsFile()));\n          } else if (entry.isDirectory) {\n            _results.push(this._addFilesFromDirectory(entry, entry.name));\n          } else {\n            _results.push(void 0);\n          }\n        } else if (item.getAsFile != null) {\n          if ((item.kind == null) || item.kind === \"file\") {\n            _results.push(this.addFile(item.getAsFile()));\n          } else {\n            _results.push(void 0);\n          }\n        } else {\n          _results.push(void 0);\n        }\n      }\n      return _results;\n    };\n\n    Dropzone.prototype._addFilesFromDirectory = function(directory, path) {\n      var dirReader, errorHandler, readEntries;\n      dirReader = directory.createReader();\n      errorHandler = function(error) {\n        return typeof console !== \"undefined\" && console !== null ? typeof console.log === \"function\" ? console.log(error) : void 0 : void 0;\n      };\n      readEntries = (function(_this) {\n        return function() {\n          return dirReader.readEntries(function(entries) {\n            var entry, _i, _len;\n            if (entries.length > 0) {\n              for (_i = 0, _len = entries.length; _i < _len; _i++) {\n                entry = entries[_i];\n                if (entry.isFile) {\n                  entry.file(function(file) {\n                    if (_this.options.ignoreHiddenFiles && file.name.substring(0, 1) === '.') {\n                      return;\n                    }\n                    file.fullPath = \"\" + path + \"/\" + file.name;\n                    return _this.addFile(file);\n                  });\n                } else if (entry.isDirectory) {\n                  _this._addFilesFromDirectory(entry, \"\" + path + \"/\" + entry.name);\n                }\n              }\n              readEntries();\n            }\n            return null;\n          }, errorHandler);\n        };\n      })(this);\n      return readEntries();\n    };\n\n    Dropzone.prototype.accept = function(file, done) {\n      if (file.size > this.options.maxFilesize * 1024 * 1024) {\n        return done(this.options.dictFileTooBig.replace(\"{{filesize}}\", Math.round(file.size / 1024 / 10.24) / 100).replace(\"{{maxFilesize}}\", this.options.maxFilesize));\n      } else if (!Dropzone.isValidFile(file, this.options.acceptedFiles)) {\n        return done(this.options.dictInvalidFileType);\n      } else if ((this.options.maxFiles != null) && this.getAcceptedFiles().length >= this.options.maxFiles) {\n        done(this.options.dictMaxFilesExceeded.replace(\"{{maxFiles}}\", this.options.maxFiles));\n        return this.emit(\"maxfilesexceeded\", file);\n      } else {\n        return this.options.accept.call(this, file, done);\n      }\n    };\n\n    Dropzone.prototype.addFile = function(file) {\n      file.upload = {\n        progress: 0,\n        total: file.size,\n        bytesSent: 0\n      };\n      this.files.push(file);\n      file.status = Dropzone.ADDED;\n      this.emit(\"addedfile\", file);\n      this._enqueueThumbnail(file);\n      return this.accept(file, (function(_this) {\n        return function(error) {\n          if (error) {\n            file.accepted = false;\n            _this._errorProcessing([file], error);\n          } else {\n            file.accepted = true;\n            if (_this.options.autoQueue) {\n              _this.enqueueFile(file);\n            }\n          }\n          return _this._updateMaxFilesReachedClass();\n        };\n      })(this));\n    };\n\n    Dropzone.prototype.enqueueFiles = function(files) {\n      var file, _i, _len;\n      for (_i = 0, _len = files.length; _i < _len; _i++) {\n        file = files[_i];\n        this.enqueueFile(file);\n      }\n      return null;\n    };\n\n    Dropzone.prototype.enqueueFile = function(file) {\n      if (file.status === Dropzone.ADDED && file.accepted === true) {\n        file.status = Dropzone.QUEUED;\n        if (this.options.autoProcessQueue) {\n          return setTimeout(((function(_this) {\n            return function() {\n              return _this.processQueue();\n            };\n          })(this)), 0);\n        }\n      } else {\n        throw new Error(\"This file can't be queued because it has already been processed or was rejected.\");\n      }\n    };\n\n    Dropzone.prototype._thumbnailQueue = [];\n\n    Dropzone.prototype._processingThumbnail = false;\n\n    Dropzone.prototype._enqueueThumbnail = function(file) {\n      if (this.options.createImageThumbnails && file.type.match(/image.*/) && file.size <= this.options.maxThumbnailFilesize * 1024 * 1024) {\n        this._thumbnailQueue.push(file);\n        return setTimeout(((function(_this) {\n          return function() {\n            return _this._processThumbnailQueue();\n          };\n        })(this)), 0);\n      }\n    };\n\n    Dropzone.prototype._processThumbnailQueue = function() {\n      if (this._processingThumbnail || this._thumbnailQueue.length === 0) {\n        return;\n      }\n      this._processingThumbnail = true;\n      return this.createThumbnail(this._thumbnailQueue.shift(), (function(_this) {\n        return function() {\n          _this._processingThumbnail = false;\n          return _this._processThumbnailQueue();\n        };\n      })(this));\n    };\n\n    Dropzone.prototype.removeFile = function(file) {\n      if (file.status === Dropzone.UPLOADING) {\n        this.cancelUpload(file);\n      }\n      this.files = without(this.files, file);\n      this.emit(\"removedfile\", file);\n      if (this.files.length === 0) {\n        return this.emit(\"reset\");\n      }\n    };\n\n    Dropzone.prototype.removeAllFiles = function(cancelIfNecessary) {\n      var file, _i, _len, _ref;\n      if (cancelIfNecessary == null) {\n        cancelIfNecessary = false;\n      }\n      _ref = this.files.slice();\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        file = _ref[_i];\n        if (file.status !== Dropzone.UPLOADING || cancelIfNecessary) {\n          this.removeFile(file);\n        }\n      }\n      return null;\n    };\n\n    Dropzone.prototype.createThumbnail = function(file, callback) {\n      var fileReader;\n      fileReader = new FileReader;\n      fileReader.onload = (function(_this) {\n        return function() {\n          if (file.type === \"image/svg+xml\") {\n            _this.emit(\"thumbnail\", file, fileReader.result);\n            if (callback != null) {\n              callback();\n            }\n            return;\n          }\n          return _this.createThumbnailFromUrl(file, fileReader.result, callback);\n        };\n      })(this);\n      return fileReader.readAsDataURL(file);\n    };\n\n    Dropzone.prototype.createThumbnailFromUrl = function(file, imageUrl, callback, crossOrigin) {\n      var img;\n      img = document.createElement(\"img\");\n      if (crossOrigin) {\n        img.crossOrigin = crossOrigin;\n      }\n      img.onload = (function(_this) {\n        return function() {\n          var canvas, ctx, resizeInfo, thumbnail, _ref, _ref1, _ref2, _ref3;\n          file.width = img.width;\n          file.height = img.height;\n          resizeInfo = _this.options.resize.call(_this, file);\n          if (resizeInfo.trgWidth == null) {\n            resizeInfo.trgWidth = resizeInfo.optWidth;\n          }\n          if (resizeInfo.trgHeight == null) {\n            resizeInfo.trgHeight = resizeInfo.optHeight;\n          }\n          canvas = document.createElement(\"canvas\");\n          ctx = canvas.getContext(\"2d\");\n          canvas.width = resizeInfo.trgWidth;\n          canvas.height = resizeInfo.trgHeight;\n          drawImageIOSFix(ctx, img, (_ref = resizeInfo.srcX) != null ? _ref : 0, (_ref1 = resizeInfo.srcY) != null ? _ref1 : 0, resizeInfo.srcWidth, resizeInfo.srcHeight, (_ref2 = resizeInfo.trgX) != null ? _ref2 : 0, (_ref3 = resizeInfo.trgY) != null ? _ref3 : 0, resizeInfo.trgWidth, resizeInfo.trgHeight);\n          thumbnail = canvas.toDataURL(\"image/png\");\n          _this.emit(\"thumbnail\", file, thumbnail);\n          if (callback != null) {\n            return callback();\n          }\n        };\n      })(this);\n      if (callback != null) {\n        img.onerror = callback;\n      }\n      return img.src = imageUrl;\n    };\n\n    Dropzone.prototype.processQueue = function() {\n      var i, parallelUploads, processingLength, queuedFiles;\n      parallelUploads = this.options.parallelUploads;\n      processingLength = this.getUploadingFiles().length;\n      i = processingLength;\n      if (processingLength >= parallelUploads) {\n        return;\n      }\n      queuedFiles = this.getQueuedFiles();\n      if (!(queuedFiles.length > 0)) {\n        return;\n      }\n      if (this.options.uploadMultiple) {\n        return this.processFiles(queuedFiles.slice(0, parallelUploads - processingLength));\n      } else {\n        while (i < parallelUploads) {\n          if (!queuedFiles.length) {\n            return;\n          }\n          this.processFile(queuedFiles.shift());\n          i++;\n        }\n      }\n    };\n\n    Dropzone.prototype.processFile = function(file) {\n      return this.processFiles([file]);\n    };\n\n    Dropzone.prototype.processFiles = function(files) {\n      var file, _i, _len;\n      for (_i = 0, _len = files.length; _i < _len; _i++) {\n        file = files[_i];\n        file.processing = true;\n        file.status = Dropzone.UPLOADING;\n        this.emit(\"processing\", file);\n      }\n      if (this.options.uploadMultiple) {\n        this.emit(\"processingmultiple\", files);\n      }\n      return this.uploadFiles(files);\n    };\n\n    Dropzone.prototype._getFilesWithXhr = function(xhr) {\n      var file, files;\n      return files = (function() {\n        var _i, _len, _ref, _results;\n        _ref = this.files;\n        _results = [];\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          file = _ref[_i];\n          if (file.xhr === xhr) {\n            _results.push(file);\n          }\n        }\n        return _results;\n      }).call(this);\n    };\n\n    Dropzone.prototype.cancelUpload = function(file) {\n      var groupedFile, groupedFiles, _i, _j, _len, _len1, _ref;\n      if (file.status === Dropzone.UPLOADING) {\n        groupedFiles = this._getFilesWithXhr(file.xhr);\n        for (_i = 0, _len = groupedFiles.length; _i < _len; _i++) {\n          groupedFile = groupedFiles[_i];\n          groupedFile.status = Dropzone.CANCELED;\n        }\n        file.xhr.abort();\n        for (_j = 0, _len1 = groupedFiles.length; _j < _len1; _j++) {\n          groupedFile = groupedFiles[_j];\n          this.emit(\"canceled\", groupedFile);\n        }\n        if (this.options.uploadMultiple) {\n          this.emit(\"canceledmultiple\", groupedFiles);\n        }\n      } else if ((_ref = file.status) === Dropzone.ADDED || _ref === Dropzone.QUEUED) {\n        file.status = Dropzone.CANCELED;\n        this.emit(\"canceled\", file);\n        if (this.options.uploadMultiple) {\n          this.emit(\"canceledmultiple\", [file]);\n        }\n      }\n      if (this.options.autoProcessQueue) {\n        return this.processQueue();\n      }\n    };\n\n    resolveOption = function() {\n      var args, option;\n      option = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n      if (typeof option === 'function') {\n        return option.apply(this, args);\n      }\n      return option;\n    };\n\n    Dropzone.prototype.uploadFile = function(file) {\n      return this.uploadFiles([file]);\n    };\n\n    Dropzone.prototype.uploadFiles = function(files) {\n      var file, formData, handleError, headerName, headerValue, headers, i, input, inputName, inputType, key, method, option, progressObj, response, updateProgress, url, value, xhr, _i, _j, _k, _l, _len, _len1, _len2, _len3, _m, _ref, _ref1, _ref2, _ref3, _ref4, _ref5;\n      xhr = new XMLHttpRequest();\n      for (_i = 0, _len = files.length; _i < _len; _i++) {\n        file = files[_i];\n        file.xhr = xhr;\n      }\n      method = resolveOption(this.options.method, files);\n      url = resolveOption(this.options.url, files);\n      xhr.open(method, url, true);\n      xhr.withCredentials = !!this.options.withCredentials;\n      response = null;\n      handleError = (function(_this) {\n        return function() {\n          var _j, _len1, _results;\n          _results = [];\n          for (_j = 0, _len1 = files.length; _j < _len1; _j++) {\n            file = files[_j];\n            _results.push(_this._errorProcessing(files, response || _this.options.dictResponseError.replace(\"{{statusCode}}\", xhr.status), xhr));\n          }\n          return _results;\n        };\n      })(this);\n      updateProgress = (function(_this) {\n        return function(e) {\n          var allFilesFinished, progress, _j, _k, _l, _len1, _len2, _len3, _results;\n          if (e != null) {\n            progress = 100 * e.loaded / e.total;\n            for (_j = 0, _len1 = files.length; _j < _len1; _j++) {\n              file = files[_j];\n              file.upload = {\n                progress: progress,\n                total: e.total,\n                bytesSent: e.loaded\n              };\n            }\n          } else {\n            allFilesFinished = true;\n            progress = 100;\n            for (_k = 0, _len2 = files.length; _k < _len2; _k++) {\n              file = files[_k];\n              if (!(file.upload.progress === 100 && file.upload.bytesSent === file.upload.total)) {\n                allFilesFinished = false;\n              }\n              file.upload.progress = progress;\n              file.upload.bytesSent = file.upload.total;\n            }\n            if (allFilesFinished) {\n              return;\n            }\n          }\n          _results = [];\n          for (_l = 0, _len3 = files.length; _l < _len3; _l++) {\n            file = files[_l];\n            _results.push(_this.emit(\"uploadprogress\", file, progress, file.upload.bytesSent));\n          }\n          return _results;\n        };\n      })(this);\n      xhr.onload = (function(_this) {\n        return function(e) {\n          var _ref;\n          if (files[0].status === Dropzone.CANCELED) {\n            return;\n          }\n          if (xhr.readyState !== 4) {\n            return;\n          }\n          response = xhr.responseText;\n          if (xhr.getResponseHeader(\"content-type\") && ~xhr.getResponseHeader(\"content-type\").indexOf(\"application/json\")) {\n            try {\n              response = JSON.parse(response);\n            } catch (_error) {\n              e = _error;\n              response = \"Invalid JSON response from server.\";\n            }\n          }\n          updateProgress();\n          if (!((200 <= (_ref = xhr.status) && _ref < 300))) {\n            return handleError();\n          } else {\n            return _this._finished(files, response, e);\n          }\n        };\n      })(this);\n      xhr.onerror = (function(_this) {\n        return function() {\n          if (files[0].status === Dropzone.CANCELED) {\n            return;\n          }\n          return handleError();\n        };\n      })(this);\n      progressObj = (_ref = xhr.upload) != null ? _ref : xhr;\n      progressObj.onprogress = updateProgress;\n      headers = {\n        \"Accept\": \"application/json\",\n        \"Cache-Control\": \"no-cache\",\n        \"X-Requested-With\": \"XMLHttpRequest\"\n      };\n      if (this.options.headers) {\n        extend(headers, this.options.headers);\n      }\n      for (headerName in headers) {\n        headerValue = headers[headerName];\n        if (headerValue) {\n          xhr.setRequestHeader(headerName, headerValue);\n        }\n      }\n      formData = new FormData();\n      if (this.options.params) {\n        _ref1 = this.options.params;\n        for (key in _ref1) {\n          value = _ref1[key];\n          formData.append(key, value);\n        }\n      }\n      for (_j = 0, _len1 = files.length; _j < _len1; _j++) {\n        file = files[_j];\n        this.emit(\"sending\", file, xhr, formData);\n      }\n      if (this.options.uploadMultiple) {\n        this.emit(\"sendingmultiple\", files, xhr, formData);\n      }\n      if (this.element.tagName === \"FORM\") {\n        _ref2 = this.element.querySelectorAll(\"input, textarea, select, button\");\n        for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {\n          input = _ref2[_k];\n          inputName = input.getAttribute(\"name\");\n          inputType = input.getAttribute(\"type\");\n          if (input.tagName === \"SELECT\" && input.hasAttribute(\"multiple\")) {\n            _ref3 = input.options;\n            for (_l = 0, _len3 = _ref3.length; _l < _len3; _l++) {\n              option = _ref3[_l];\n              if (option.selected) {\n                formData.append(inputName, option.value);\n              }\n            }\n          } else if (!inputType || ((_ref4 = inputType.toLowerCase()) !== \"checkbox\" && _ref4 !== \"radio\") || input.checked) {\n            formData.append(inputName, input.value);\n          }\n        }\n      }\n      for (i = _m = 0, _ref5 = files.length - 1; 0 <= _ref5 ? _m <= _ref5 : _m >= _ref5; i = 0 <= _ref5 ? ++_m : --_m) {\n        formData.append(this._getParamName(i), files[i], this._renameFilename(files[i].name));\n      }\n      return this.submitRequest(xhr, formData, files);\n    };\n\n    Dropzone.prototype.submitRequest = function(xhr, formData, files) {\n      return xhr.send(formData);\n    };\n\n    Dropzone.prototype._finished = function(files, responseText, e) {\n      var file, _i, _len;\n      for (_i = 0, _len = files.length; _i < _len; _i++) {\n        file = files[_i];\n        file.status = Dropzone.SUCCESS;\n        this.emit(\"success\", file, responseText, e);\n        this.emit(\"complete\", file);\n      }\n      if (this.options.uploadMultiple) {\n        this.emit(\"successmultiple\", files, responseText, e);\n        this.emit(\"completemultiple\", files);\n      }\n      if (this.options.autoProcessQueue) {\n        return this.processQueue();\n      }\n    };\n\n    Dropzone.prototype._errorProcessing = function(files, message, xhr) {\n      var file, _i, _len;\n      for (_i = 0, _len = files.length; _i < _len; _i++) {\n        file = files[_i];\n        file.status = Dropzone.ERROR;\n        this.emit(\"error\", file, message, xhr);\n        this.emit(\"complete\", file);\n      }\n      if (this.options.uploadMultiple) {\n        this.emit(\"errormultiple\", files, message, xhr);\n        this.emit(\"completemultiple\", files);\n      }\n      if (this.options.autoProcessQueue) {\n        return this.processQueue();\n      }\n    };\n\n    return Dropzone;\n\n  })(Emitter);\n\n  Dropzone.version = \"4.3.0\";\n\n  Dropzone.options = {};\n\n  Dropzone.optionsForElement = function(element) {\n    if (element.getAttribute(\"id\")) {\n      return Dropzone.options[camelize(element.getAttribute(\"id\"))];\n    } else {\n      return void 0;\n    }\n  };\n\n  Dropzone.instances = [];\n\n  Dropzone.forElement = function(element) {\n    if (typeof element === \"string\") {\n      element = document.querySelector(element);\n    }\n    if ((element != null ? element.dropzone : void 0) == null) {\n      throw new Error(\"No Dropzone found for given element. This is probably because you're trying to access it before Dropzone had the time to initialize. Use the `init` option to setup any additional observers on your Dropzone.\");\n    }\n    return element.dropzone;\n  };\n\n  Dropzone.autoDiscover = true;\n\n  Dropzone.discover = function() {\n    var checkElements, dropzone, dropzones, _i, _len, _results;\n    if (document.querySelectorAll) {\n      dropzones = document.querySelectorAll(\".dropzone\");\n    } else {\n      dropzones = [];\n      checkElements = function(elements) {\n        var el, _i, _len, _results;\n        _results = [];\n        for (_i = 0, _len = elements.length; _i < _len; _i++) {\n          el = elements[_i];\n          if (/(^| )dropzone($| )/.test(el.className)) {\n            _results.push(dropzones.push(el));\n          } else {\n            _results.push(void 0);\n          }\n        }\n        return _results;\n      };\n      checkElements(document.getElementsByTagName(\"div\"));\n      checkElements(document.getElementsByTagName(\"form\"));\n    }\n    _results = [];\n    for (_i = 0, _len = dropzones.length; _i < _len; _i++) {\n      dropzone = dropzones[_i];\n      if (Dropzone.optionsForElement(dropzone) !== false) {\n        _results.push(new Dropzone(dropzone));\n      } else {\n        _results.push(void 0);\n      }\n    }\n    return _results;\n  };\n\n  Dropzone.blacklistedBrowsers = [/opera.*Macintosh.*version\\/12/i];\n\n  Dropzone.isBrowserSupported = function() {\n    var capableBrowser, regex, _i, _len, _ref;\n    capableBrowser = true;\n    if (window.File && window.FileReader && window.FileList && window.Blob && window.FormData && document.querySelector) {\n      if (!(\"classList\" in document.createElement(\"a\"))) {\n        capableBrowser = false;\n      } else {\n        _ref = Dropzone.blacklistedBrowsers;\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          regex = _ref[_i];\n          if (regex.test(navigator.userAgent)) {\n            capableBrowser = false;\n            continue;\n          }\n        }\n      }\n    } else {\n      capableBrowser = false;\n    }\n    return capableBrowser;\n  };\n\n  without = function(list, rejectedItem) {\n    var item, _i, _len, _results;\n    _results = [];\n    for (_i = 0, _len = list.length; _i < _len; _i++) {\n      item = list[_i];\n      if (item !== rejectedItem) {\n        _results.push(item);\n      }\n    }\n    return _results;\n  };\n\n  camelize = function(str) {\n    return str.replace(/[\\-_](\\w)/g, function(match) {\n      return match.charAt(1).toUpperCase();\n    });\n  };\n\n  Dropzone.createElement = function(string) {\n    var div;\n    div = document.createElement(\"div\");\n    div.innerHTML = string;\n    return div.childNodes[0];\n  };\n\n  Dropzone.elementInside = function(element, container) {\n    if (element === container) {\n      return true;\n    }\n    while (element = element.parentNode) {\n      if (element === container) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  Dropzone.getElement = function(el, name) {\n    var element;\n    if (typeof el === \"string\") {\n      element = document.querySelector(el);\n    } else if (el.nodeType != null) {\n      element = el;\n    }\n    if (element == null) {\n      throw new Error(\"Invalid `\" + name + \"` option provided. Please provide a CSS selector or a plain HTML element.\");\n    }\n    return element;\n  };\n\n  Dropzone.getElements = function(els, name) {\n    var e, el, elements, _i, _j, _len, _len1, _ref;\n    if (els instanceof Array) {\n      elements = [];\n      try {\n        for (_i = 0, _len = els.length; _i < _len; _i++) {\n          el = els[_i];\n          elements.push(this.getElement(el, name));\n        }\n      } catch (_error) {\n        e = _error;\n        elements = null;\n      }\n    } else if (typeof els === \"string\") {\n      elements = [];\n      _ref = document.querySelectorAll(els);\n      for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {\n        el = _ref[_j];\n        elements.push(el);\n      }\n    } else if (els.nodeType != null) {\n      elements = [els];\n    }\n    if (!((elements != null) && elements.length)) {\n      throw new Error(\"Invalid `\" + name + \"` option provided. Please provide a CSS selector, a plain HTML element or a list of those.\");\n    }\n    return elements;\n  };\n\n  Dropzone.confirm = function(question, accepted, rejected) {\n    if (window.confirm(question)) {\n      return accepted();\n    } else if (rejected != null) {\n      return rejected();\n    }\n  };\n\n  Dropzone.isValidFile = function(file, acceptedFiles) {\n    var baseMimeType, mimeType, validType, _i, _len;\n    if (!acceptedFiles) {\n      return true;\n    }\n    acceptedFiles = acceptedFiles.split(\",\");\n    mimeType = file.type;\n    baseMimeType = mimeType.replace(/\\/.*$/, \"\");\n    for (_i = 0, _len = acceptedFiles.length; _i < _len; _i++) {\n      validType = acceptedFiles[_i];\n      validType = validType.trim();\n      if (validType.charAt(0) === \".\") {\n        if (file.name.toLowerCase().indexOf(validType.toLowerCase(), file.name.length - validType.length) !== -1) {\n          return true;\n        }\n      } else if (/\\/\\*$/.test(validType)) {\n        if (baseMimeType === validType.replace(/\\/.*$/, \"\")) {\n          return true;\n        }\n      } else {\n        if (mimeType === validType) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  if (typeof jQuery !== \"undefined\" && jQuery !== null) {\n    jQuery.fn.dropzone = function(options) {\n      return this.each(function() {\n        return new Dropzone(this, options);\n      });\n    };\n  }\n\n  if (typeof module !== \"undefined\" && module !== null) {\n    module.exports = Dropzone;\n  } else {\n    window.Dropzone = Dropzone;\n  }\n\n  Dropzone.ADDED = \"added\";\n\n  Dropzone.QUEUED = \"queued\";\n\n  Dropzone.ACCEPTED = Dropzone.QUEUED;\n\n  Dropzone.UPLOADING = \"uploading\";\n\n  Dropzone.PROCESSING = Dropzone.UPLOADING;\n\n  Dropzone.CANCELED = \"canceled\";\n\n  Dropzone.ERROR = \"error\";\n\n  Dropzone.SUCCESS = \"success\";\n\n\n  /*\n  \n  Bugfix for iOS 6 and 7\n  Source: http://stackoverflow.com/questions/11929099/html5-canvas-drawimage-ratio-bug-ios\n  based on the work of https://github.com/stomita/ios-imagefile-megapixel\n   */\n\n  detectVerticalSquash = function(img) {\n    var alpha, canvas, ctx, data, ey, ih, iw, py, ratio, sy;\n    iw = img.naturalWidth;\n    ih = img.naturalHeight;\n    canvas = document.createElement(\"canvas\");\n    canvas.width = 1;\n    canvas.height = ih;\n    ctx = canvas.getContext(\"2d\");\n    ctx.drawImage(img, 0, 0);\n    data = ctx.getImageData(0, 0, 1, ih).data;\n    sy = 0;\n    ey = ih;\n    py = ih;\n    while (py > sy) {\n      alpha = data[(py - 1) * 4 + 3];\n      if (alpha === 0) {\n        ey = py;\n      } else {\n        sy = py;\n      }\n      py = (ey + sy) >> 1;\n    }\n    ratio = py / ih;\n    if (ratio === 0) {\n      return 1;\n    } else {\n      return ratio;\n    }\n  };\n\n  drawImageIOSFix = function(ctx, img, sx, sy, sw, sh, dx, dy, dw, dh) {\n    var vertSquashRatio;\n    vertSquashRatio = detectVerticalSquash(img);\n    return ctx.drawImage(img, sx, sy, sw, sh, dx, dy, dw, dh / vertSquashRatio);\n  };\n\n\n  /*\n   * contentloaded.js\n   *\n   * Author: Diego Perini (diego.perini at gmail.com)\n   * Summary: cross-browser wrapper for DOMContentLoaded\n   * Updated: 20101020\n   * License: MIT\n   * Version: 1.2\n   *\n   * URL:\n   * http://javascript.nwbox.com/ContentLoaded/\n   * http://javascript.nwbox.com/ContentLoaded/MIT-LICENSE\n   */\n\n  contentLoaded = function(win, fn) {\n    var add, doc, done, init, poll, pre, rem, root, top;\n    done = false;\n    top = true;\n    doc = win.document;\n    root = doc.documentElement;\n    add = (doc.addEventListener ? \"addEventListener\" : \"attachEvent\");\n    rem = (doc.addEventListener ? \"removeEventListener\" : \"detachEvent\");\n    pre = (doc.addEventListener ? \"\" : \"on\");\n    init = function(e) {\n      if (e.type === \"readystatechange\" && doc.readyState !== \"complete\") {\n        return;\n      }\n      (e.type === \"load\" ? win : doc)[rem](pre + e.type, init, false);\n      if (!done && (done = true)) {\n        return fn.call(win, e.type || e);\n      }\n    };\n    poll = function() {\n      var e;\n      try {\n        root.doScroll(\"left\");\n      } catch (_error) {\n        e = _error;\n        setTimeout(poll, 50);\n        return;\n      }\n      return init(\"poll\");\n    };\n    if (doc.readyState !== \"complete\") {\n      if (doc.createEventObject && root.doScroll) {\n        try {\n          top = !win.frameElement;\n        } catch (_error) {}\n        if (top) {\n          poll();\n        }\n      }\n      doc[add](pre + \"DOMContentLoaded\", init, false);\n      doc[add](pre + \"readystatechange\", init, false);\n      return win[add](pre + \"load\", init, false);\n    }\n  };\n\n  Dropzone._autoDiscoverFunction = function() {\n    if (Dropzone.autoDiscover) {\n      return Dropzone.discover();\n    }\n  };\n\n  contentLoaded(window, Dropzone._autoDiscoverFunction);\n\n}).call(this);",
        "output": "str",
        "x": 350,
        "y": 1780,
        "wires": [
            [
                "4c2a0101.2130d"
            ]
        ]
    },
    {
        "id": "721c9d99.0d0064",
        "type": "http in",
        "z": "a08ae145f2d5cb38",
        "name": "",
        "url": "/complex",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 1780,
        "wires": [
            [
                "72e223ba.672874"
            ]
        ]
    },
    {
        "id": "5c63bf7.aba48c",
        "type": "template",
        "z": "a08ae145f2d5cb38",
        "name": "html",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<script>\n    {{{dropzonejs}}}\n</script>\n<style>\n    {{{css}}}\n</style>\n\n<script>\n    // \"myAwesomeDropzone\" is the camelized version of the HTML element's ID\n    Dropzone.options.myDropzone = {\n      paramName: \"myFile\", // The name that will be used to transfer the file\n      maxFilesize: 2, // MB\n      accept: function(file, done) {\n        if (file.name == \"justinbieber.jpg\") {\n          done(\"Naha, you don't.\");\n        }\n        else { done(); }\n      }\n    };\n</script>\n\n<h1>Upload a file here:</h1>\n\n<form action=\"/uploadpretty\" class=\"dropzone\" method=\"post\" enctype=\"multipart/form-data\" id=\"my-dropzone\">\n  <div class=\"fallback\">\n    <input name=\"myFile\" type=\"file\" />\n    <input type=\"submit\" value=\"Submit\">\n  </div>\n</form>",
        "output": "str",
        "x": 730,
        "y": 1780,
        "wires": [
            [
                "a8d1613b.9a0478"
            ]
        ]
    },
    {
        "id": "a8d1613b.9a0478",
        "type": "http response",
        "z": "a08ae145f2d5cb38",
        "name": "",
        "x": 890,
        "y": 1780,
        "wires": []
    },
    {
        "id": "7d8e179a.283e4",
        "type": "http response",
        "z": "a08ae145f2d5cb38",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 610,
        "y": 1620,
        "wires": []
    },
    {
        "id": "4c2a0101.2130d",
        "type": "template",
        "z": "a08ae145f2d5cb38",
        "name": "css",
        "field": "css",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": "/*\n * The MIT License\n * Copyright (c) 2012 Matias Meno <m@tias.me>\n */\n@-webkit-keyframes passing-through {\n  0% {\n    opacity: 0;\n    -webkit-transform: translateY(40px);\n    -moz-transform: translateY(40px);\n    -ms-transform: translateY(40px);\n    -o-transform: translateY(40px);\n    transform: translateY(40px); }\n  30%, 70% {\n    opacity: 1;\n    -webkit-transform: translateY(0px);\n    -moz-transform: translateY(0px);\n    -ms-transform: translateY(0px);\n    -o-transform: translateY(0px);\n    transform: translateY(0px); }\n  100% {\n    opacity: 0;\n    -webkit-transform: translateY(-40px);\n    -moz-transform: translateY(-40px);\n    -ms-transform: translateY(-40px);\n    -o-transform: translateY(-40px);\n    transform: translateY(-40px); } }\n@-moz-keyframes passing-through {\n  0% {\n    opacity: 0;\n    -webkit-transform: translateY(40px);\n    -moz-transform: translateY(40px);\n    -ms-transform: translateY(40px);\n    -o-transform: translateY(40px);\n    transform: translateY(40px); }\n  30%, 70% {\n    opacity: 1;\n    -webkit-transform: translateY(0px);\n    -moz-transform: translateY(0px);\n    -ms-transform: translateY(0px);\n    -o-transform: translateY(0px);\n    transform: translateY(0px); }\n  100% {\n    opacity: 0;\n    -webkit-transform: translateY(-40px);\n    -moz-transform: translateY(-40px);\n    -ms-transform: translateY(-40px);\n    -o-transform: translateY(-40px);\n    transform: translateY(-40px); } }\n@keyframes passing-through {\n  0% {\n    opacity: 0;\n    -webkit-transform: translateY(40px);\n    -moz-transform: translateY(40px);\n    -ms-transform: translateY(40px);\n    -o-transform: translateY(40px);\n    transform: translateY(40px); }\n  30%, 70% {\n    opacity: 1;\n    -webkit-transform: translateY(0px);\n    -moz-transform: translateY(0px);\n    -ms-transform: translateY(0px);\n    -o-transform: translateY(0px);\n    transform: translateY(0px); }\n  100% {\n    opacity: 0;\n    -webkit-transform: translateY(-40px);\n    -moz-transform: translateY(-40px);\n    -ms-transform: translateY(-40px);\n    -o-transform: translateY(-40px);\n    transform: translateY(-40px); } }\n@-webkit-keyframes slide-in {\n  0% {\n    opacity: 0;\n    -webkit-transform: translateY(40px);\n    -moz-transform: translateY(40px);\n    -ms-transform: translateY(40px);\n    -o-transform: translateY(40px);\n    transform: translateY(40px); }\n  30% {\n    opacity: 1;\n    -webkit-transform: translateY(0px);\n    -moz-transform: translateY(0px);\n    -ms-transform: translateY(0px);\n    -o-transform: translateY(0px);\n    transform: translateY(0px); } }\n@-moz-keyframes slide-in {\n  0% {\n    opacity: 0;\n    -webkit-transform: translateY(40px);\n    -moz-transform: translateY(40px);\n    -ms-transform: translateY(40px);\n    -o-transform: translateY(40px);\n    transform: translateY(40px); }\n  30% {\n    opacity: 1;\n    -webkit-transform: translateY(0px);\n    -moz-transform: translateY(0px);\n    -ms-transform: translateY(0px);\n    -o-transform: translateY(0px);\n    transform: translateY(0px); } }\n@keyframes slide-in {\n  0% {\n    opacity: 0;\n    -webkit-transform: translateY(40px);\n    -moz-transform: translateY(40px);\n    -ms-transform: translateY(40px);\n    -o-transform: translateY(40px);\n    transform: translateY(40px); }\n  30% {\n    opacity: 1;\n    -webkit-transform: translateY(0px);\n    -moz-transform: translateY(0px);\n    -ms-transform: translateY(0px);\n    -o-transform: translateY(0px);\n    transform: translateY(0px); } }\n@-webkit-keyframes pulse {\n  0% {\n    -webkit-transform: scale(1);\n    -moz-transform: scale(1);\n    -ms-transform: scale(1);\n    -o-transform: scale(1);\n    transform: scale(1); }\n  10% {\n    -webkit-transform: scale(1.1);\n    -moz-transform: scale(1.1);\n    -ms-transform: scale(1.1);\n    -o-transform: scale(1.1);\n    transform: scale(1.1); }\n  20% {\n    -webkit-transform: scale(1);\n    -moz-transform: scale(1);\n    -ms-transform: scale(1);\n    -o-transform: scale(1);\n    transform: scale(1); } }\n@-moz-keyframes pulse {\n  0% {\n    -webkit-transform: scale(1);\n    -moz-transform: scale(1);\n    -ms-transform: scale(1);\n    -o-transform: scale(1);\n    transform: scale(1); }\n  10% {\n    -webkit-transform: scale(1.1);\n    -moz-transform: scale(1.1);\n    -ms-transform: scale(1.1);\n    -o-transform: scale(1.1);\n    transform: scale(1.1); }\n  20% {\n    -webkit-transform: scale(1);\n    -moz-transform: scale(1);\n    -ms-transform: scale(1);\n    -o-transform: scale(1);\n    transform: scale(1); } }\n@keyframes pulse {\n  0% {\n    -webkit-transform: scale(1);\n    -moz-transform: scale(1);\n    -ms-transform: scale(1);\n    -o-transform: scale(1);\n    transform: scale(1); }\n  10% {\n    -webkit-transform: scale(1.1);\n    -moz-transform: scale(1.1);\n    -ms-transform: scale(1.1);\n    -o-transform: scale(1.1);\n    transform: scale(1.1); }\n  20% {\n    -webkit-transform: scale(1);\n    -moz-transform: scale(1);\n    -ms-transform: scale(1);\n    -o-transform: scale(1);\n    transform: scale(1); } }\n.dropzone, .dropzone * {\n  box-sizing: border-box; }\n\n.dropzone {\n  min-height: 150px;\n  border: 2px solid rgba(0, 0, 0, 0.3);\n  background: white;\n  padding: 20px 20px; }\n  .dropzone.dz-clickable {\n    cursor: pointer; }\n    .dropzone.dz-clickable * {\n      cursor: default; }\n    .dropzone.dz-clickable .dz-message, .dropzone.dz-clickable .dz-message * {\n      cursor: pointer; }\n  .dropzone.dz-started .dz-message {\n    display: none; }\n  .dropzone.dz-drag-hover {\n    border-style: solid; }\n    .dropzone.dz-drag-hover .dz-message {\n      opacity: 0.5; }\n  .dropzone .dz-message {\n    text-align: center;\n    margin: 2em 0; }\n  .dropzone .dz-preview {\n    position: relative;\n    display: inline-block;\n    vertical-align: top;\n    margin: 16px;\n    min-height: 100px; }\n    .dropzone .dz-preview:hover {\n      z-index: 1000; }\n      .dropzone .dz-preview:hover .dz-details {\n        opacity: 1; }\n    .dropzone .dz-preview.dz-file-preview .dz-image {\n      border-radius: 20px;\n      background: #999;\n      background: linear-gradient(to bottom, #eee, #ddd); }\n    .dropzone .dz-preview.dz-file-preview .dz-details {\n      opacity: 1; }\n    .dropzone .dz-preview.dz-image-preview {\n      background: white; }\n      .dropzone .dz-preview.dz-image-preview .dz-details {\n        -webkit-transition: opacity 0.2s linear;\n        -moz-transition: opacity 0.2s linear;\n        -ms-transition: opacity 0.2s linear;\n        -o-transition: opacity 0.2s linear;\n        transition: opacity 0.2s linear; }\n    .dropzone .dz-preview .dz-remove {\n      font-size: 14px;\n      text-align: center;\n      display: block;\n      cursor: pointer;\n      border: none; }\n      .dropzone .dz-preview .dz-remove:hover {\n        text-decoration: underline; }\n    .dropzone .dz-preview:hover .dz-details {\n      opacity: 1; }\n    .dropzone .dz-preview .dz-details {\n      z-index: 20;\n      position: absolute;\n      top: 0;\n      left: 0;\n      opacity: 0;\n      font-size: 13px;\n      min-width: 100%;\n      max-width: 100%;\n      padding: 2em 1em;\n      text-align: center;\n      color: rgba(0, 0, 0, 0.9);\n      line-height: 150%; }\n      .dropzone .dz-preview .dz-details .dz-size {\n        margin-bottom: 1em;\n        font-size: 16px; }\n      .dropzone .dz-preview .dz-details .dz-filename {\n        white-space: nowrap; }\n        .dropzone .dz-preview .dz-details .dz-filename:hover span {\n          border: 1px solid rgba(200, 200, 200, 0.8);\n          background-color: rgba(255, 255, 255, 0.8); }\n        .dropzone .dz-preview .dz-details .dz-filename:not(:hover) {\n          overflow: hidden;\n          text-overflow: ellipsis; }\n          .dropzone .dz-preview .dz-details .dz-filename:not(:hover) span {\n            border: 1px solid transparent; }\n      .dropzone .dz-preview .dz-details .dz-filename span, .dropzone .dz-preview .dz-details .dz-size span {\n        background-color: rgba(255, 255, 255, 0.4);\n        padding: 0 0.4em;\n        border-radius: 3px; }\n    .dropzone .dz-preview:hover .dz-image img {\n      -webkit-transform: scale(1.05, 1.05);\n      -moz-transform: scale(1.05, 1.05);\n      -ms-transform: scale(1.05, 1.05);\n      -o-transform: scale(1.05, 1.05);\n      transform: scale(1.05, 1.05);\n      -webkit-filter: blur(8px);\n      filter: blur(8px); }\n    .dropzone .dz-preview .dz-image {\n      border-radius: 20px;\n      overflow: hidden;\n      width: 120px;\n      height: 120px;\n      position: relative;\n      display: block;\n      z-index: 10; }\n      .dropzone .dz-preview .dz-image img {\n        display: block; }\n    .dropzone .dz-preview.dz-success .dz-success-mark {\n      -webkit-animation: passing-through 3s cubic-bezier(0.77, 0, 0.175, 1);\n      -moz-animation: passing-through 3s cubic-bezier(0.77, 0, 0.175, 1);\n      -ms-animation: passing-through 3s cubic-bezier(0.77, 0, 0.175, 1);\n      -o-animation: passing-through 3s cubic-bezier(0.77, 0, 0.175, 1);\n      animation: passing-through 3s cubic-bezier(0.77, 0, 0.175, 1); }\n    .dropzone .dz-preview.dz-error .dz-error-mark {\n      opacity: 1;\n      -webkit-animation: slide-in 3s cubic-bezier(0.77, 0, 0.175, 1);\n      -moz-animation: slide-in 3s cubic-bezier(0.77, 0, 0.175, 1);\n      -ms-animation: slide-in 3s cubic-bezier(0.77, 0, 0.175, 1);\n      -o-animation: slide-in 3s cubic-bezier(0.77, 0, 0.175, 1);\n      animation: slide-in 3s cubic-bezier(0.77, 0, 0.175, 1); }\n    .dropzone .dz-preview .dz-success-mark, .dropzone .dz-preview .dz-error-mark {\n      pointer-events: none;\n      opacity: 0;\n      z-index: 500;\n      position: absolute;\n      display: block;\n      top: 50%;\n      left: 50%;\n      margin-left: -27px;\n      margin-top: -27px; }\n      .dropzone .dz-preview .dz-success-mark svg, .dropzone .dz-preview .dz-error-mark svg {\n        display: block;\n        width: 54px;\n        height: 54px; }\n    .dropzone .dz-preview.dz-processing .dz-progress {\n      opacity: 1;\n      -webkit-transition: all 0.2s linear;\n      -moz-transition: all 0.2s linear;\n      -ms-transition: all 0.2s linear;\n      -o-transition: all 0.2s linear;\n      transition: all 0.2s linear; }\n    .dropzone .dz-preview.dz-complete .dz-progress {\n      opacity: 0;\n      -webkit-transition: opacity 0.4s ease-in;\n      -moz-transition: opacity 0.4s ease-in;\n      -ms-transition: opacity 0.4s ease-in;\n      -o-transition: opacity 0.4s ease-in;\n      transition: opacity 0.4s ease-in; }\n    .dropzone .dz-preview:not(.dz-processing) .dz-progress {\n      -webkit-animation: pulse 6s ease infinite;\n      -moz-animation: pulse 6s ease infinite;\n      -ms-animation: pulse 6s ease infinite;\n      -o-animation: pulse 6s ease infinite;\n      animation: pulse 6s ease infinite; }\n    .dropzone .dz-preview .dz-progress {\n      opacity: 1;\n      z-index: 1000;\n      pointer-events: none;\n      position: absolute;\n      height: 16px;\n      left: 50%;\n      top: 50%;\n      margin-top: -8px;\n      width: 80px;\n      margin-left: -40px;\n      background: rgba(255, 255, 255, 0.9);\n      -webkit-transform: scale(1);\n      border-radius: 8px;\n      overflow: hidden; }\n      .dropzone .dz-preview .dz-progress .dz-upload {\n        background: #333;\n        background: linear-gradient(to bottom, #666, #444);\n        position: absolute;\n        top: 0;\n        left: 0;\n        bottom: 0;\n        width: 0;\n        -webkit-transition: width 300ms ease-in-out;\n        -moz-transition: width 300ms ease-in-out;\n        -ms-transition: width 300ms ease-in-out;\n        -o-transition: width 300ms ease-in-out;\n        transition: width 300ms ease-in-out; }\n    .dropzone .dz-preview.dz-error .dz-error-message {\n      display: block; }\n    .dropzone .dz-preview.dz-error:hover .dz-error-message {\n      opacity: 1;\n      pointer-events: auto; }\n    .dropzone .dz-preview .dz-error-message {\n      pointer-events: none;\n      z-index: 1000;\n      position: absolute;\n      display: block;\n      display: none;\n      opacity: 0;\n      -webkit-transition: opacity 0.3s ease;\n      -moz-transition: opacity 0.3s ease;\n      -ms-transition: opacity 0.3s ease;\n      -o-transition: opacity 0.3s ease;\n      transition: opacity 0.3s ease;\n      border-radius: 8px;\n      font-size: 13px;\n      top: 130px;\n      left: -10px;\n      width: 140px;\n      background: #be2626;\n      background: linear-gradient(to bottom, #be2626, #a92222);\n      padding: 0.5em 1.2em;\n      color: white; }\n      .dropzone .dz-preview .dz-error-message:after {\n        content: '';\n        position: absolute;\n        top: -6px;\n        left: 64px;\n        width: 0;\n        height: 0;\n        border-left: 6px solid transparent;\n        border-right: 6px solid transparent;\n        border-bottom: 6px solid #be2626; }",
        "output": "str",
        "x": 530,
        "y": 1780,
        "wires": [
            [
                "5c63bf7.aba48c"
            ]
        ]
    },
    {
        "id": "efe92067.f84b28",
        "type": "http in",
        "z": "a08ae145f2d5cb38",
        "name": "",
        "url": "/uploadpretty",
        "method": "post",
        "upload": true,
        "swaggerDoc": "",
        "x": 130,
        "y": 1840,
        "wires": [
            [
                "4a7eded4.56598",
                "df0237a0.3141f8"
            ]
        ]
    },
    {
        "id": "25859a94.7d9976",
        "type": "http in",
        "z": "a08ae145f2d5cb38",
        "name": "",
        "url": "/upload",
        "method": "post",
        "upload": true,
        "swaggerDoc": "",
        "x": 110,
        "y": 1640,
        "wires": [
            [
                "d7e5df8b.97a4e8"
            ]
        ]
    },
    {
        "id": "e1643981.20d7c8",
        "type": "template",
        "z": "a08ae145f2d5cb38",
        "name": "html",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<p></p>File {{name}} uploaded !</p>\n\n<h2>Contents:</h2>\n\n<pre>\n{{{payload}}}\n</pre>",
        "output": "str",
        "x": 450,
        "y": 1640,
        "wires": [
            [
                "7d8e179a.283e4"
            ]
        ]
    },
    {
        "id": "d7e5df8b.97a4e8",
        "type": "function",
        "z": "a08ae145f2d5cb38",
        "name": "toBase64",
        "func": "msg.name = msg.req.files[0].originalname;\n\nif (msg.req.files[0].mimetype.includes('image')) {\n    msg.payload = `<img src=\"data:image/gif;base64,${msg.req.files[0].buffer.toString('base64')}\">`;\n} else {\n    msg.payload = msg.req.files[0].buffer.toString();\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 1640,
        "wires": [
            [
                "e1643981.20d7c8"
            ]
        ]
    },
    {
        "id": "b493c450.18d678",
        "type": "comment",
        "z": "a08ae145f2d5cb38",
        "name": "Complex",
        "info": "",
        "x": 100,
        "y": 1740,
        "wires": []
    },
    {
        "id": "df0237a0.3141f8",
        "type": "debug",
        "z": "a08ae145f2d5cb38",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "req.files",
        "x": 358,
        "y": 1897,
        "wires": []
    },
    {
        "id": "d1429e220b5dce36",
        "type": "file",
        "z": "a08ae145f2d5cb38",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 2460,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "8dd5fe2ad1c1362e",
        "type": "ui_etable",
        "z": "a08ae145f2d5cb38",
        "payload": "[{\"title\":\"Type\",\"field\":\"icon\",\"formatter\":\"html\",\"width\":50},{\"title\":\"Name\",\"field\":\"fname\"},{\"title\":\"Size\",\"field\":\"stat.size\",\"sorter\":\"number\",\"width\":100,\"sorterParams\":{\"thousandSeparator\":\",\",\"decimalSeparator\":\".\",\"alignEmptyValues\":\"top\"}},{\"title\":\"Created\",\"field\":\"stat.created\",\"formatter\":\"datetime\",\"width\":200,\"formatterParams\":{\"outputFormat\":\"yyyy.MM.DD HH:mm:ss\",\"invalidPlaceholder\":\"(invalid date)\",\"timezone\":\"system\"}},{\"title\":\"Changed\",\"field\":\"stat.changed\",\"formatter\":\"datetime\",\"width\":200,\"formatterParams\":{\"outputFormat\":\"yyyy.MM.DD HH:mm:ss\",\"invalidPlaceholder\":\"(invalid date)\",\"timezone\":\"system\"}}]",
        "payloadType": "json",
        "options": "{\"movableColumns\":true,\"resizableColumns\":true,\"selectable\":1,\"responsiveLayout\":\"collapse\",\"autoResize\":true,\"layout\":\"fitColumns\",\"pagination\":\"local\",\"height\":\"100%\"}",
        "group": "7c3d1ffe5de85af4",
        "name": "File Browser",
        "order": 6,
        "width": 12,
        "height": 8,
        "columns": [],
        "outputs": 1,
        "cts": false,
        "x": 1070,
        "y": 520,
        "wires": [
            [
                "9f0139c9d4cf303c",
                "2fd8e45dcc9f2743",
                "cf09d98db7656238",
                "ab85eb9606fc412a"
            ]
        ]
    },
    {
        "id": "4c3c5231e3d633dd",
        "type": "ui_button",
        "z": "a08ae145f2d5cb38",
        "name": "",
        "group": "7c3d1ffe5de85af4",
        "order": 1,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Refresh",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "refresh",
        "payload": "",
        "payloadType": "str",
        "topic": "refresh",
        "topicType": "str",
        "x": 360,
        "y": 520,
        "wires": [
            [
                "5e18896e060736a2"
            ]
        ]
    },
    {
        "id": "8ee8106b5f5eda72",
        "type": "ui_button",
        "z": "a08ae145f2d5cb38",
        "name": "",
        "group": "b9eaf4515438b94a",
        "order": 3,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Delete",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "delete",
        "payload": "",
        "payloadType": "str",
        "topic": "delete",
        "topicType": "str",
        "x": 1350,
        "y": 700,
        "wires": [
            [
                "ab85eb9606fc412a"
            ]
        ]
    },
    {
        "id": "c79fd4ed4bd87baa",
        "type": "ui_button",
        "z": "a08ae145f2d5cb38",
        "name": "",
        "group": "7c3d1ffe5de85af4",
        "order": 3,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Up",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "arrow_upwards",
        "payload": "",
        "payloadType": "str",
        "topic": "up",
        "topicType": "str",
        "x": 370,
        "y": 600,
        "wires": [
            [
                "5e18896e060736a2"
            ]
        ]
    },
    {
        "id": "630956d807bb897f",
        "type": "ui_button",
        "z": "a08ae145f2d5cb38",
        "name": "",
        "group": "7c3d1ffe5de85af4",
        "order": 2,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Reset",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "autorenew",
        "payload": "filebrowser_default_folder",
        "payloadType": "global",
        "topic": "change",
        "topicType": "str",
        "x": 370,
        "y": 560,
        "wires": [
            [
                "5e18896e060736a2"
            ]
        ]
    },
    {
        "id": "9c81f3c971381924",
        "type": "ui_button",
        "z": "a08ae145f2d5cb38",
        "name": "",
        "group": "b9eaf4515438b94a",
        "order": 2,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Download",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "file_download",
        "payload": "",
        "payloadType": "str",
        "topic": "download",
        "topicType": "str",
        "x": 1360,
        "y": 740,
        "wires": [
            [
                "ab85eb9606fc412a"
            ]
        ]
    },
    {
        "id": "aabb0360fd74425e",
        "type": "ui_button",
        "z": "a08ae145f2d5cb38",
        "name": "",
        "group": "7c3d1ffe5de85af4",
        "order": 7,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Download All",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "file_download",
        "payload": "",
        "payloadType": "str",
        "topic": "download_all",
        "topicType": "str",
        "x": 410,
        "y": 1160,
        "wires": [
            [
                "66bc0f58da04db30"
            ]
        ]
    },
    {
        "id": "58dab00dd15f92fc",
        "type": "ui_switch",
        "z": "a08ae145f2d5cb38",
        "name": "",
        "label": "Hidden",
        "tooltip": "Show hidden files or not",
        "group": "7c3d1ffe5de85af4",
        "order": 4,
        "width": 3,
        "height": 1,
        "passthru": false,
        "decouple": "false",
        "topic": "hidden",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "check_box",
        "oncolor": "#000000",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "check_box_outline_blank",
        "offcolor": "#000000",
        "animate": true,
        "className": "",
        "x": 360,
        "y": 640,
        "wires": [
            [
                "5e18896e060736a2"
            ]
        ]
    },
    {
        "id": "bfc3ef112044fb10",
        "type": "ui_text_input",
        "z": "a08ae145f2d5cb38",
        "name": "",
        "label": "Filter:",
        "tooltip": "",
        "group": "7c3d1ffe5de85af4",
        "order": 8,
        "width": 6,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "quickfilter",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1050,
        "y": 460,
        "wires": [
            [
                "1a853077cd0370f3"
            ]
        ]
    },
    {
        "id": "9f0139c9d4cf303c",
        "type": "ui_text",
        "z": "a08ae145f2d5cb38",
        "group": "b9eaf4515438b94a",
        "order": 1,
        "width": 8,
        "height": 1,
        "name": "Filename",
        "label": "",
        "format": "{{msg.payload.fname}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1460,
        "y": 520,
        "wires": []
    },
    {
        "id": "c9bad6d25a599039",
        "type": "ui_text",
        "z": "a08ae145f2d5cb38",
        "group": "7c3d1ffe5de85af4",
        "order": 5,
        "width": 12,
        "height": 1,
        "name": "",
        "label": "Folder:",
        "format": "{{msg.payload.start}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 760,
        "y": 460,
        "wires": []
    },
    {
        "id": "89dc6deaab1808aa",
        "type": "ui_toast",
        "z": "a08ae145f2d5cb38",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Yes",
        "cancel": "No",
        "raw": false,
        "topic": "",
        "name": "Confirmation",
        "x": 1990,
        "y": 720,
        "wires": [
            [
                "32285273e011031e"
            ]
        ]
    },
    {
        "id": "fe70301f0dba3337",
        "type": "ui_toast",
        "z": "a08ae145f2d5cb38",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Yes",
        "cancel": "No",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Confirmation",
        "x": 750,
        "y": 1160,
        "wires": [
            [
                "1342a37f07b7f60b"
            ]
        ]
    },
    {
        "id": "6c43b2f8441fd24e",
        "type": "ui_toast",
        "z": "a08ae145f2d5cb38",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 2050,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "1ec03f77c131fff2",
        "type": "ui_template",
        "z": "a08ae145f2d5cb38",
        "group": "b9eaf4515438b94a",
        "name": "File Preview",
        "order": 4,
        "width": 12,
        "height": 11,
        "format": "<div ng-bind-html=\"msg.payload\" height=\"100%\" style=\"height: 100%;\"><br/>\n</div>\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1890,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "f27d36356901af0b",
        "type": "ui_template",
        "z": "a08ae145f2d5cb38",
        "group": "b9eaf4515438b94a",
        "name": "",
        "order": 5,
        "width": 0,
        "height": 0,
        "format": "",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1820,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "c5268070.c55a3",
        "type": "ui_template",
        "z": "a08ae145f2d5cb38",
        "group": "7c3d1ffe5de85af4",
        "name": "Upload Btn",
        "order": 11,
        "width": 3,
        "height": 1,
        "format": "\n<body>\n<button id=\"but\" class=\"md-raised md-button md-ink-ripple\" onclick=\"importData()\">Upload</button>    \n\n<script>\nlet restoreScope = scope;\n\nfunction importData() {\n  let input = document.createElement('input');\n  input.type = 'file';\n  input.id = 'restoreBtn';\n  input.multiple = 'multiple';\n\n  input.onchange = () => {\n    const files = Array.from(input.files);\n\n    const uploadPromises = files.map((file) => readAndUploadFile(file));\n\n    Promise.all(uploadPromises)\n      .then(() => {\n        console.log('All files uploaded successfully.');\n      })\n      .catch((error) => {\n        console.error('Error uploading files:', error);\n      });\n  };\n\n  input.click();\n}\n\nfunction readAndUploadFile(file) {\n  return new Promise((resolve, reject) => {\n    const fReader = new FileReader();\n\n    fReader.onload = function (event) {\n      const payload = event.target.result;\n      const filename = file.name;\n\n      restoreScope\n        .send({ payload, filename })\n        .then(() => {\n          console.log(`File \"${filename}\" uploaded successfully.`);\n          resolve();\n        })\n        .catch((error) => {\n          console.error(`Error uploading file \"${filename}\":`, error);\n          reject(error);\n        });\n    };\n\n    fReader.readAsArrayBuffer(file);\n  });\n}\n</script>\n</body>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2090,
        "y": 1080,
        "wires": [
            [
                "af4b1dda0d424b73"
            ]
        ]
    },
    {
        "id": "7940237deb98874d",
        "type": "fs-file-lister",
        "z": "a08ae145f2d5cb38",
        "name": "Files",
        "start": "./projects/",
        "pattern": "*.*",
        "folders": "*",
        "hidden": false,
        "lstype": "both",
        "path": true,
        "single": true,
        "depth": 0,
        "stat": true,
        "showWarnings": false,
        "x": 750,
        "y": 520,
        "wires": [
            [
                "1a853077cd0370f3",
                "4434a55ef1ec1dbc"
            ]
        ]
    },
    {
        "id": "f3a77316a142090b",
        "type": "base64",
        "z": "a08ae145f2d5cb38",
        "name": "",
        "action": "",
        "property": "payload",
        "x": 1360,
        "y": 1000,
        "wires": [
            [
                "ee1728b79fedf48f"
            ]
        ]
    },
    {
        "id": "3d6a530bee70b759",
        "type": "comment",
        "z": "a08ae145f2d5cb38",
        "name": "File Upload",
        "info": "",
        "x": 2250,
        "y": 1320,
        "wires": []
    },
    {
        "id": "af4b1dda0d424b73",
        "type": "function",
        "z": "a08ae145f2d5cb38",
        "name": "function 16",
        "func": "var folder = flow.get(\"folder\");\n//node.warn(folder);\nmsg.filename = folder+'/'+msg.filename;\n//node.warn(msg.filename);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2290,
        "y": 1180,
        "wires": [
            [
                "d1429e220b5dce36"
            ]
        ]
    },
    {
        "id": "05fa03480d3ebf68",
        "type": "ui_button",
        "z": "c5fc9b7a988cec09",
        "name": "",
        "group": "b4e511253bf4fd53",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Calibrate",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 180,
        "y": 640,
        "wires": [
            [
                "f6f5f97a260d6162"
            ]
        ]
    },
    {
        "id": "f6f5f97a260d6162",
        "type": "function",
        "z": "c5fc9b7a988cec09",
        "name": "function 11",
        "func": "let initial_folder = global.get(\"filebrowser_default_folder\");\nlet folder = global.get(\"selected_project\");\nlet full_path = initial_folder + folder;\n\nmsg.payload = \"python ../scripts/calibrate.py --project_name \"+folder +\" --input \" + full_path +\" --output_folder \"+full_path+\" --config_file './config.json' --num_of_images 40\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 640,
        "wires": [
            [
                "e88cabccd7176f6a",
                "d5f7f26bba6ca09d"
            ]
        ]
    },
    {
        "id": "e88cabccd7176f6a",
        "type": "exec",
        "z": "c5fc9b7a988cec09",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Execute calibration",
        "x": 630,
        "y": 680,
        "wires": [
            [
                "d7707fcee02fe1b8"
            ],
            [
                "abfc76e5e92ed93f",
                "d7707fcee02fe1b8"
            ],
            [
                "e0d40c96a3882052"
            ]
        ]
    },
    {
        "id": "e0d40c96a3882052",
        "type": "switch",
        "z": "c5fc9b7a988cec09",
        "name": "Success?",
        "property": "payload.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 920,
        "y": 760,
        "wires": [
            [
                "91b9918325f3b1ed"
            ],
            [
                "9c011f79ee6fc3b6"
            ]
        ]
    },
    {
        "id": "91b9918325f3b1ed",
        "type": "debug",
        "z": "c5fc9b7a988cec09",
        "name": "Calibration cool",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1180,
        "y": 760,
        "wires": []
    },
    {
        "id": "9c011f79ee6fc3b6",
        "type": "debug",
        "z": "c5fc9b7a988cec09",
        "name": "Calibration failed",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 820,
        "wires": []
    },
    {
        "id": "d5f7f26bba6ca09d",
        "type": "debug",
        "z": "c5fc9b7a988cec09",
        "name": "calibration_script",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 780,
        "wires": []
    },
    {
        "id": "abfc76e5e92ed93f",
        "type": "debug",
        "z": "c5fc9b7a988cec09",
        "name": "debug 46",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 940,
        "wires": []
    },
    {
        "id": "4423ed01d98b3c60",
        "type": "ui_button",
        "z": "c5fc9b7a988cec09",
        "name": "Charuco Generate Pose",
        "group": "b4e511253bf4fd53",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Generate Pose",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 180,
        "y": 1060,
        "wires": [
            [
                "eb33b24fae8e05f7"
            ]
        ]
    },
    {
        "id": "edf6e52453a5ebf9",
        "type": "function",
        "z": "c5fc9b7a988cec09",
        "name": "function 12",
        "func": "let initial_folder = global.get(\"filebrowser_default_folder\");\nlet folder = global.get(\"selected_project\");\nlet full_path = initial_folder + folder;\nvar camera_matrix = msg.payload[\"camera_matrix\"];\n\nvar dist_coeff = msg.payload[\"dist_coeff\"];\n\n\nconst flattened_camera_matrix = camera_matrix.flat();\n\n// Convert to a space-separated string\nconst string_camera_matrix = flattened_camera_matrix.join(' ');\n\nconst flattened_dist_coeff = dist_coeff.flat();\n\n// Convert to a space-separated string\nconst string_dist_coeff = flattened_dist_coeff.join(' ');\n\nmsg.payload = \"python ../scripts/charuco_generate_pose.py --project_name \"+ folder+\" --input \"+ full_path+\" --mtx \"+string_camera_matrix+ \" --dist \"+string_dist_coeff;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 1080,
        "wires": [
            [
                "3630aa3ca243ab6f",
                "4cc5362f85732f6b"
            ]
        ]
    },
    {
        "id": "3630aa3ca243ab6f",
        "type": "exec",
        "z": "c5fc9b7a988cec09",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Execute generate_poses",
        "x": 1210,
        "y": 1120,
        "wires": [
            [
                "d7707fcee02fe1b8"
            ],
            [
                "6a0ae4d11b06d733",
                "661ef57fe39af3f8",
                "d7707fcee02fe1b8"
            ],
            [
                "051ab86051a380d4"
            ]
        ]
    },
    {
        "id": "051ab86051a380d4",
        "type": "switch",
        "z": "c5fc9b7a988cec09",
        "name": "Success?",
        "property": "payload.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1500,
        "y": 1180,
        "wires": [
            [
                "e2359c634ac1d62d",
                "700961aee6cd9454"
            ],
            [
                "e65e75d11688a7e5",
                "f5ae4e46faf911ec"
            ]
        ]
    },
    {
        "id": "e2359c634ac1d62d",
        "type": "debug",
        "z": "c5fc9b7a988cec09",
        "name": "Generating cool",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1800,
        "y": 1160,
        "wires": []
    },
    {
        "id": "e65e75d11688a7e5",
        "type": "debug",
        "z": "c5fc9b7a988cec09",
        "name": "Generating failed",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1810,
        "y": 1240,
        "wires": []
    },
    {
        "id": "4cc5362f85732f6b",
        "type": "debug",
        "z": "c5fc9b7a988cec09",
        "name": "Generating_script",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 1220,
        "wires": []
    },
    {
        "id": "6a0ae4d11b06d733",
        "type": "debug",
        "z": "c5fc9b7a988cec09",
        "name": "debug 50",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1440,
        "y": 1360,
        "wires": []
    },
    {
        "id": "eb33b24fae8e05f7",
        "type": "http request",
        "z": "c5fc9b7a988cec09",
        "name": "get_current_work",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://127.0.0.1:5001/config/current_work",
        "tls": "c84c35e6e9992f9a",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 520,
        "y": 1080,
        "wires": [
            [
                "6620c371f8bf918b",
                "edf6e52453a5ebf9"
            ]
        ]
    },
    {
        "id": "6620c371f8bf918b",
        "type": "debug",
        "z": "c5fc9b7a988cec09",
        "name": "debug 51",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 1300,
        "wires": []
    },
    {
        "id": "661ef57fe39af3f8",
        "type": "function",
        "z": "c5fc9b7a988cec09",
        "name": "function 13",
        "func": "node.warn(msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 1600,
        "wires": [
            []
        ]
    },
    {
        "id": "6ec4b344c84f72e8",
        "type": "ui_dropdown",
        "z": "c5fc9b7a988cec09",
        "g": "16e9549a3ea706bc",
        "name": "charuco project dropdown",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "94b2d8d9e77fa636",
        "order": 3,
        "width": 8,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 2710,
        "y": 300,
        "wires": [
            [
                "7b36c9095cf50122"
            ]
        ]
    },
    {
        "id": "5ae3b7b8fe108ddb",
        "type": "function",
        "z": "c5fc9b7a988cec09",
        "g": "16e9549a3ea706bc",
        "name": "Folder handling",
        "func": "let folder = global.get(\"filebrowser_default_folder\");\nlet project_name = global.get(\"selected_project\")\n//console.log(project_name);\n\nif (folder===undefined) {\n    folder=\"./projects/\";\n    context.set(\"folder\", folder);\n}\n\n\nmsg.project_name = project_name;\nmsg.payload = {\"start\":folder};\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "fs",
                "module": "fs"
            }
        ],
        "x": 2120,
        "y": 300,
        "wires": [
            [
                "f0b90c78f5f79e71"
            ]
        ]
    },
    {
        "id": "f0b90c78f5f79e71",
        "type": "fs-file-lister",
        "z": "c5fc9b7a988cec09",
        "g": "16e9549a3ea706bc",
        "name": "Files",
        "start": "./projects/",
        "pattern": "*.*",
        "folders": "*",
        "hidden": false,
        "lstype": "directories",
        "path": true,
        "single": true,
        "depth": 0,
        "stat": true,
        "showWarnings": false,
        "x": 2310,
        "y": 300,
        "wires": [
            [
                "567a4991445ed8e7"
            ]
        ]
    },
    {
        "id": "567a4991445ed8e7",
        "type": "function",
        "z": "c5fc9b7a988cec09",
        "g": "16e9549a3ea706bc",
        "name": "Prep Data",
        "func": "function convertDate(local) {\n    let d = new Date(local);\n    d.setTime(d.getTime()+3600*1000);\n    return d.toISOString().slice(0, 19).replace('T', ' ');\n}\n\nvar newmsg = msg;\nnewmsg.options = [];\n\nfor (var i=0; i<msg.payload.length; i++) {\n\n    msg.payload[i].fname = msg.payload[i].name.replace(/^.*(\\\\|\\/|\\:)/, '');\n    if (msg.payload[i].stat.isDirectory) {\n        msg.payload[i].ext = \"folder\";\n        newmsg.options[i] = msg.payload[i].fname;\n    }\n}\nif (global.get(\"selected_project\") !== \"\") {\n    // Find the index of the selected project\n    var project_name = global.get(\"selected_project\").split(\"/\").filter(Boolean).pop();\n    newmsg.payload = project_name\n}\nflow.set(\"currentfolder\",msg.payload);\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2460,
        "y": 300,
        "wires": [
            [
                "6ec4b344c84f72e8",
                "be3b2ff50c3c00d1"
            ]
        ]
    },
    {
        "id": "be3b2ff50c3c00d1",
        "type": "debug",
        "z": "c5fc9b7a988cec09",
        "g": "16e9549a3ea706bc",
        "name": "debug 41",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2530,
        "y": 400,
        "wires": []
    },
    {
        "id": "ca2e9a4b6955efb0",
        "type": "link in",
        "z": "c5fc9b7a988cec09",
        "g": "16e9549a3ea706bc",
        "name": "Charuco global folder in",
        "links": [
            "9a67d1381a1e6960",
            "fe0e5a3d2e1fe78b",
            "4484b8d6a16e79f1",
            "4819a5fb717ddca6"
        ],
        "x": 1955,
        "y": 400,
        "wires": [
            [
                "5ae3b7b8fe108ddb"
            ]
        ]
    },
    {
        "id": "7b36c9095cf50122",
        "type": "function",
        "z": "c5fc9b7a988cec09",
        "g": "16e9549a3ea706bc",
        "name": "Set global_folder",
        "func": "var folder = global.get('filebrowser_default_folder');\nvar project= msg.payload;\nmsg.payload = folder+project+\"/\";\n\nglobal.set(\"selected_project\",project)\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2930,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "7aa205a7c54fbf27",
        "type": "comment",
        "z": "c5fc9b7a988cec09",
        "name": "Charuco Camera Poses",
        "info": "",
        "x": 560,
        "y": 40,
        "wires": []
    },
    {
        "id": "d7707fcee02fe1b8",
        "type": "ui_template",
        "z": "c5fc9b7a988cec09",
        "group": "40324dcc41601167",
        "name": "Logging template",
        "order": 1,
        "width": 12,
        "height": 16,
        "format": "<div style=\"height: 700px; overflow-y: scroll; border: 1px solid #ccc; padding: 10px;\" id=\"logWindow\"></div>\n\n<script>\n    (function(scope) {\n        scope.$watch('msg.payload', function(payload) {\n            var logWindow = document.getElementById(\"logWindow\");\n            if (payload === \"clear\") {\n                logWindow.innerHTML = \"\";  // Clear the log window\n            } else {\n                logWindow.innerHTML += payload + \"<br/>\";\n                logWindow.scrollTop = logWindow.scrollHeight;  // Auto-scroll to the bottom\n            }\n        });\n    })(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1750,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "4b2ba95767605bad",
        "type": "ui_text",
        "z": "c5fc9b7a988cec09",
        "group": "b4e511253bf4fd53",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "Generate button hint",
        "label": "",
        "format": "If camera is calibrated, you can start generation",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 160,
        "y": 1000,
        "wires": []
    },
    {
        "id": "4de0ac6342d8d836",
        "type": "http request",
        "z": "c5fc9b7a988cec09",
        "name": "get_current_work",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://127.0.0.1:5001/config/current_work",
        "tls": "c84c35e6e9992f9a",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 490,
        "y": 280,
        "wires": [
            [
                "3",
                "4325551d270b89d7"
            ]
        ]
    },
    {
        "id": "1",
        "type": "inject",
        "z": "c5fc9b7a988cec09",
        "name": "Every 5 seconds",
        "props": [],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": "0.2",
        "topic": "",
        "x": 270,
        "y": 340,
        "wires": [
            [
                "4de0ac6342d8d836"
            ]
        ]
    },
    {
        "id": "3",
        "type": "switch",
        "z": "c5fc9b7a988cec09",
        "name": "Check current_work",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 720,
        "y": 220,
        "wires": [
            [
                "ce10213a8e5db4a7"
            ],
            [
                "ac3a1a249bfe8680"
            ]
        ]
    },
    {
        "id": "4325551d270b89d7",
        "type": "debug",
        "z": "c5fc9b7a988cec09",
        "d": true,
        "name": "Check calibration json",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 380,
        "wires": []
    },
    {
        "id": "ce10213a8e5db4a7",
        "type": "change",
        "z": "c5fc9b7a988cec09",
        "name": "Set Green HTML",
        "rules": [
            {
                "t": "set",
                "p": "text",
                "pt": "msg",
                "to": "Camera is calibrated; You can press generate poses on folder with images, that have the same camera setup",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "color",
                "pt": "msg",
                "to": "green",
                "tot": "str"
            }
        ],
        "x": 1050,
        "y": 200,
        "wires": [
            [
                "81810eff6af1ce1b"
            ]
        ]
    },
    {
        "id": "ac3a1a249bfe8680",
        "type": "change",
        "z": "c5fc9b7a988cec09",
        "name": "Set Red HTML",
        "rules": [
            {
                "t": "set",
                "p": "text",
                "pt": "msg",
                "to": "Camera isn't calibrated; You need to first calibrate camera on calibration folder. E.g. board_4x4_freehand",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "color",
                "pt": "msg",
                "to": "red",
                "tot": "str"
            }
        ],
        "x": 1050,
        "y": 240,
        "wires": [
            [
                "81810eff6af1ce1b"
            ]
        ]
    },
    {
        "id": "81810eff6af1ce1b",
        "type": "ui_template",
        "z": "c5fc9b7a988cec09",
        "group": "b4e511253bf4fd53",
        "name": "Dynamic Text",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<div style=\"color:{{msg.color}};font-size:20px;\">{{msg.text}}</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1410,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "efa560f1ac899015",
        "type": "inject",
        "z": "c5fc9b7a988cec09",
        "name": "Clear Log on Startup",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "clear",
        "payloadType": "str",
        "x": 1440,
        "y": 640,
        "wires": [
            [
                "d7707fcee02fe1b8"
            ]
        ]
    },
    {
        "id": "5183bb1827453b30",
        "type": "ui_text",
        "z": "c5fc9b7a988cec09",
        "group": "94b2d8d9e77fa636",
        "order": 1,
        "width": 6,
        "height": 1,
        "name": "Select Project",
        "label": "Select a project where to initialize charuco camera pose extraction",
        "format": "",
        "layout": "row-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2240,
        "y": 200,
        "wires": []
    },
    {
        "id": "12e6460ec3653f11",
        "type": "ui_template",
        "z": "c5fc9b7a988cec09",
        "group": "b4e511253bf4fd53",
        "name": "Generating poses result",
        "order": 5,
        "width": 0,
        "height": 0,
        "format": "<div style=\"color:{{msg.color}};font-size:20px;\">{{msg.text}}</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1990,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "700961aee6cd9454",
        "type": "change",
        "z": "c5fc9b7a988cec09",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "text",
                "pt": "msg",
                "to": "Poses are generated under transforms.json",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "color",
                "pt": "msg",
                "to": "green",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1680,
        "y": 1000,
        "wires": [
            [
                "12e6460ec3653f11"
            ]
        ]
    },
    {
        "id": "f5ae4e46faf911ec",
        "type": "change",
        "z": "c5fc9b7a988cec09",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Error occured poses are not generated",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "color",
                "pt": "msg",
                "to": "red",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1680,
        "y": 1060,
        "wires": [
            [
                "12e6460ec3653f11"
            ]
        ]
    },
    {
        "id": "7700ec9f893a1665",
        "type": "exec",
        "z": "3669868b19b1582f",
        "command": " Run colmap to nerf",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1370,
        "y": 400,
        "wires": [
            [
                "ca970b6fa5aa189b",
                "43095b37af32c13f"
            ],
            [
                "ca970b6fa5aa189b",
                "234412a362a92921"
            ],
            []
        ]
    },
    {
        "id": "7dded95e86225e65",
        "type": "function",
        "z": "3669868b19b1582f",
        "name": "function 3",
        "func": "//construct command\nvar cmd = \"\";\nvar ingp_root = global.get(\"ingp_root\")\ncmd = cmd +\"python \"+ingp_root+\"colmap2nerf.py\"\n\nvar folder = global.get(\"selected_project\");\n\nif(flow.get(\"video\")==true){\n cmd += \"--video_in \";\n cmd += folder +\" \";\n}else{\n    cmd+= \"--images \";\n    cmd+= folder+ \" \";\n}\nif(flow.get(\"run_colmap\")==true){\n    cmd += \"--run_colmap \";\n}\nif(flow.get(\"single_camera\")==true){\n    cmd += \"--single_camera \";\n}\nif(flow.get(\"use_gpu\")==true){\n    cmd += \"--use_gpu 1 \";\n}\nmsg.payload = cmd;\nmsg.errorcode = 0;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 400,
        "wires": [
            [
                "7700ec9f893a1665",
                "a7ced7cab1f31e8f"
            ]
        ]
    },
    {
        "id": "1a538b2b44335da3",
        "type": "change",
        "z": "3669868b19b1582f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "video",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "f0d932968fc0b1db",
        "type": "change",
        "z": "3669868b19b1582f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "run_colmap",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "846a8ef4f8c0069a",
        "type": "change",
        "z": "3669868b19b1582f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "one_camera",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "23f91fea94671140",
        "type": "change",
        "z": "3669868b19b1582f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "use_gpu",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "9d65157ed9d8240e",
        "type": "change",
        "z": "3669868b19b1582f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "f20e40bf75b0069d",
        "type": "change",
        "z": "3669868b19b1582f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "out",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "a772c2fbbb54ca51",
        "type": "comment",
        "z": "3669868b19b1582f",
        "g": "9a065f7de759f344",
        "name": "New File Browser",
        "info": "",
        "x": 440,
        "y": 800,
        "wires": []
    },
    {
        "id": "234412a362a92921",
        "type": "debug",
        "z": "3669868b19b1582f",
        "name": "debug 27",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1760,
        "y": 720,
        "wires": []
    },
    {
        "id": "d266f296d5bff25f",
        "type": "function",
        "z": "3669868b19b1582f",
        "g": "80f0e37eedd4ac4c",
        "name": "Folder handling",
        "func": "let folder = global.get(\"filebrowser_default_folder\");\nlet project_name = global.get(\"selected_project\")\n//console.log(project_name);\n\nif (folder===undefined) {\n    folder=\"./projects/\";\n    context.set(\"folder\", folder);\n}\n\n\nmsg.project_name = project_name;\nmsg.payload = {\"start\":folder};\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "fs",
                "module": "fs"
            }
        ],
        "x": 600,
        "y": 880,
        "wires": [
            [
                "4612c2840bc9045d"
            ]
        ]
    },
    {
        "id": "16bbbc3cfdc4abeb",
        "type": "function",
        "z": "3669868b19b1582f",
        "g": "80f0e37eedd4ac4c",
        "name": "Prep Data",
        "func": "function convertDate(local) {\n    let d = new Date(local);\n    d.setTime(d.getTime()+3600*1000);\n    return d.toISOString().slice(0, 19).replace('T', ' ');\n}\n\nvar newmsg = msg;\nnewmsg.options = [];\n\nfor (var i=0; i<msg.payload.length; i++) {\n\n    msg.payload[i].fname = msg.payload[i].name.replace(/^.*(\\\\|\\/|\\:)/, '');\n    if (msg.payload[i].stat.isDirectory) {\n        msg.payload[i].ext = \"folder\";\n        newmsg.options[i] = msg.payload[i].fname;\n    }\n}\nif (global.get(\"selected_project\") !== \"\") {\n    // Find the index of the selected project\n    var project_name = global.get(\"selected_project\").split(\"/\").filter(Boolean).pop();\n    newmsg.payload = project_name\n}\nflow.set(\"currentfolder\",msg.payload);\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 880,
        "wires": [
            [
                "8c41744e6989238e",
                "f7fedae0681f404d"
            ]
        ]
    },
    {
        "id": "f7fedae0681f404d",
        "type": "debug",
        "z": "3669868b19b1582f",
        "g": "80f0e37eedd4ac4c",
        "name": "debug 40",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 980,
        "wires": []
    },
    {
        "id": "97a9602c25c5b4b1",
        "type": "link in",
        "z": "3669868b19b1582f",
        "g": "80f0e37eedd4ac4c",
        "name": "Colmap global folder in",
        "links": [
            "7bfa38a0f66d68e1"
        ],
        "x": 435,
        "y": 980,
        "wires": [
            [
                "d266f296d5bff25f"
            ]
        ]
    },
    {
        "id": "8c41744e6989238e",
        "type": "ui_dropdown",
        "z": "3669868b19b1582f",
        "g": "80f0e37eedd4ac4c",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "6c2e3428a6c52ed8",
        "order": 4,
        "width": 8,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1140,
        "y": 880,
        "wires": [
            [
                "77d15c886180587e"
            ]
        ]
    },
    {
        "id": "f78bceb4e079a816",
        "type": "ui_numeric",
        "z": "3669868b19b1582f",
        "name": "",
        "label": "gpu number",
        "tooltip": "",
        "group": "53646539ec83fa85",
        "order": 10,
        "width": 4,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "step": 1,
        "className": "",
        "x": 310,
        "y": 660,
        "wires": [
            [
                "9d65157ed9d8240e"
            ]
        ]
    },
    {
        "id": "984435ad09c8523e",
        "type": "ui_button",
        "z": "3669868b19b1582f",
        "name": "",
        "group": "53646539ec83fa85",
        "order": 12,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "run_reconstruction",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 910,
        "y": 400,
        "wires": [
            [
                "7dded95e86225e65"
            ]
        ]
    },
    {
        "id": "4da3863b8fc9706b",
        "type": "ui_switch",
        "z": "3669868b19b1582f",
        "name": "",
        "label": "video",
        "tooltip": "",
        "group": "53646539ec83fa85",
        "order": 2,
        "width": 4,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "video",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 270,
        "y": 400,
        "wires": [
            [
                "1a538b2b44335da3"
            ]
        ]
    },
    {
        "id": "864c2629e018fb05",
        "type": "ui_switch",
        "z": "3669868b19b1582f",
        "name": "",
        "label": "run_colmap",
        "tooltip": "",
        "group": "53646539ec83fa85",
        "order": 4,
        "width": 4,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 290,
        "y": 460,
        "wires": [
            [
                "f0d932968fc0b1db"
            ]
        ]
    },
    {
        "id": "2f6d0c33b5027ea1",
        "type": "ui_switch",
        "z": "3669868b19b1582f",
        "name": "",
        "label": "shared intrinsics",
        "tooltip": "",
        "group": "53646539ec83fa85",
        "order": 6,
        "width": 4,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 300,
        "y": 520,
        "wires": [
            [
                "846a8ef4f8c0069a"
            ]
        ]
    },
    {
        "id": "eeb610666b3bd473",
        "type": "ui_switch",
        "z": "3669868b19b1582f",
        "name": "",
        "label": "use_gpu",
        "tooltip": "",
        "group": "53646539ec83fa85",
        "order": 8,
        "width": 4,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 280,
        "y": 580,
        "wires": [
            [
                "23f91fea94671140"
            ]
        ]
    },
    {
        "id": "e7f4a73a8f886f3f",
        "type": "ui_text_input",
        "z": "3669868b19b1582f",
        "name": "",
        "label": "Save output to",
        "tooltip": "",
        "group": "53646539ec83fa85",
        "order": 1,
        "width": 5,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 340,
        "y": 320,
        "wires": [
            [
                "f20e40bf75b0069d"
            ]
        ]
    },
    {
        "id": "4612c2840bc9045d",
        "type": "fs-file-lister",
        "z": "3669868b19b1582f",
        "g": "80f0e37eedd4ac4c",
        "name": "Files",
        "start": "./projects/",
        "pattern": "*.*",
        "folders": "*",
        "hidden": false,
        "lstype": "directories",
        "path": true,
        "single": true,
        "depth": 0,
        "stat": true,
        "showWarnings": false,
        "x": 790,
        "y": 880,
        "wires": [
            [
                "16bbbc3cfdc4abeb"
            ]
        ]
    },
    {
        "id": "77d15c886180587e",
        "type": "function",
        "z": "3669868b19b1582f",
        "g": "80f0e37eedd4ac4c",
        "name": "Set global_folder",
        "func": "var folder = global.get('filebrowser_default_folder');\nvar project = msg.payload;\nmsg.payload = folder + project + \"/\";\n\nglobal.set(\"selected_project\", msg.payload)\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1370,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "ca970b6fa5aa189b",
        "type": "ui_template",
        "z": "3669868b19b1582f",
        "group": "45c6e5c68f9384b7",
        "name": "Logging template",
        "order": 1,
        "width": 12,
        "height": 16,
        "format": "<div style=\"height: 700px; overflow-y: scroll; border: 1px solid #ccc; padding: 10px;\" id=\"logWindow\"></div>\n\n<script>\n    (function(scope) {\n        scope.$watch('msg.payload', function(payload) {\n            var logWindow = document.getElementById(\"logWindow\");\n            if (payload === \"clear\") {\n                logWindow.innerHTML = \"\";  // Clear the log window\n            } else {\n                logWindow.innerHTML += payload + \"<br/>\";\n                logWindow.scrollTop = logWindow.scrollHeight;  // Auto-scroll to the bottom\n            }\n        });\n    })(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1749.88330078125,
        "y": 441.8833312988281,
        "wires": [
            []
        ]
    },
    {
        "id": "aca9a5a6408f5b30",
        "type": "ui_text",
        "z": "3669868b19b1582f",
        "g": "9a065f7de759f344",
        "group": "6c2e3428a6c52ed8",
        "order": 1,
        "width": 8,
        "height": 1,
        "name": "Select Project",
        "label": "Select a project where to initialize colmap camera pose extraction",
        "format": "",
        "layout": "row-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1160,
        "y": 800,
        "wires": []
    },
    {
        "id": "43095b37af32c13f",
        "type": "debug",
        "z": "3669868b19b1582f",
        "name": "debug 55",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1780,
        "y": 600,
        "wires": []
    },
    {
        "id": "a7ced7cab1f31e8f",
        "type": "debug",
        "z": "3669868b19b1582f",
        "name": "debug 56",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 580,
        "wires": []
    },
    {
        "id": "cf014e60e3ca34d2",
        "type": "inject",
        "z": "3669868b19b1582f",
        "name": "Clear Log on Startup",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "clear",
        "payloadType": "str",
        "x": 1480,
        "y": 220,
        "wires": [
            [
                "ca970b6fa5aa189b"
            ]
        ]
    },
    {
        "id": "cdf08e1fa0f798cf",
        "type": "comment",
        "z": "f11166a80e40d7b6",
        "name": "Instant-NGP",
        "info": "",
        "x": 290,
        "y": 40,
        "wires": []
    },
    {
        "id": "6922f8443327585e",
        "type": "function",
        "z": "f11166a80e40d7b6",
        "name": "function 4",
        "func": "//construct command\n// var cmd = \"\";\n// cmd = cmd +\"python scripts/run.py \"\n// var full_cmd = \"python run.py --scene transforms.json --screenshot_dir rembg_abgabe_img1139/ --width 2048 --height 2048 --n_steps 1000 --save_snapshot ./snap.ingp\";\n// var folder = flow.get(\"folder\");\n// if(flow.get(\"folder\") == null){\n//     msg.errorcode = 1;\n//     msg.errortext = \"Please navigate to folder that contains images\";\n// }\n\n// if(flow.get(\"video\")==true){\n//  cmd += \"--video_in \";\n//  cmd += folder +\" \";\n// }else{\n//     cmd+= \"--images \";\n//     cmd+= folder+ \" \";\n// }\n// if(flow.get(\"run_colmap\")==true){\n//     cmd += \"--run_colmap \";\n// }\n// if(flow.get(\"single_camera\")==true){\n//     cmd += \"--single_camera \";\n// }\n// if(flow.get(\"use_gpu\")==true){\n//     cmd += \"--use_gpu 1 \";\n// }\n// msg.payload = cmd;\n// msg.errorcode = 0;\n// return msg;\n\nvar cmd = \"\";\nvar steps = flow.get(\"steps\")\nconsole.log(flow.get(\"transforms_found\"));\nvar default_folder = global.get(\"filebrowser_default_folder\") \nlet project_path =default_folder+ global.get(\"selected_project\");\nvar ingp_root = global.get(\"ingp_root\")\ncmd = \"python \"+ingp_root+\"run.py\"+\" --scene \" + project_path + \"/transforms_centered.json --save_snapshot \" + project_path + \"/snapshot.ingp --save_mesh \" + project_path +\"/snapshot.obj --n_steps \"+steps;\n\nmsg.payload = cmd;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 680,
        "wires": [
            [
                "cedf14d9a75fd905",
                "144d75efb56e677f"
            ]
        ]
    },
    {
        "id": "90293cf435cb4df4",
        "type": "debug",
        "z": "f11166a80e40d7b6",
        "name": "debug 28",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1480,
        "y": 840,
        "wires": []
    },
    {
        "id": "cedf14d9a75fd905",
        "type": "exec",
        "z": "f11166a80e40d7b6",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "instant-ngp/run.py",
        "x": 1050,
        "y": 700,
        "wires": [
            [
                "60493bb1f6b0cab2",
                "6cc453db05c0eb3e"
            ],
            [
                "e19ae7959c10c9f3"
            ],
            []
        ]
    },
    {
        "id": "b41acdba1bfc801b",
        "type": "change",
        "z": "f11166a80e40d7b6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "video",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "7eaf7291d23775b1",
        "type": "change",
        "z": "f11166a80e40d7b6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "remove_background",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "058a7201fdcec32f",
        "type": "change",
        "z": "f11166a80e40d7b6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "steps",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "fb3bf4b6edab43c7",
        "type": "change",
        "z": "f11166a80e40d7b6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "out",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "0aca359cea3c541b",
        "type": "comment",
        "z": "f11166a80e40d7b6",
        "name": "Instant-NGP File Browser",
        "info": "",
        "x": 870,
        "y": 80,
        "wires": []
    },
    {
        "id": "ea0ee859b4d5977f",
        "type": "comment",
        "z": "f11166a80e40d7b6",
        "name": "Instant-NGP Parameters",
        "info": "",
        "x": 370,
        "y": 580,
        "wires": []
    },
    {
        "id": "ed3316b06c40e79c",
        "type": "function",
        "z": "f11166a80e40d7b6",
        "g": "28c003637500bb58",
        "name": "Folder handling",
        "func": "let folder = global.get(\"filebrowser_default_folder\");\nlet project_name = global.get(\"selected_project\");\nflow.set(\"transforms_found\", false);\nconsole.log(flow.get(\"transforms_found\"));\n\nif (folder===undefined) {\n    folder=\"./projects/\";\n    context.set(\"folder\", folder);\n}\n\n\nmsg.project_name = project_name;\nmsg.payload = {\"start\":folder};\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "fs",
                "module": "fs"
            }
        ],
        "x": 960,
        "y": 220,
        "wires": [
            [
                "79f125292ff3885d"
            ]
        ]
    },
    {
        "id": "0e8b617c0ee560fd",
        "type": "function",
        "z": "f11166a80e40d7b6",
        "g": "28c003637500bb58",
        "name": "Prep Data",
        "func": "function convertDate(local) {\n    let d = new Date(local);\n    d.setTime(d.getTime()+3600*1000);\n    return d.toISOString().slice(0, 19).replace('T', ' ');\n}\n\nvar newmsg = msg;\nnewmsg.options = [];\n\nfor (var i=0; i<msg.payload.length; i++) {\n\n    msg.payload[i].fname = msg.payload[i].name.replace(/^.*(\\\\|\\/|\\:)/, '');\n    if (msg.payload[i].stat.isDirectory) {\n        msg.payload[i].ext = \"folder\";\n        newmsg.options[i] = msg.payload[i].fname;\n    }\n}\nif (global.get(\"selected_project\") !== \"\") {\n    // Find the index of the selected project\n    var project_name = global.get(\"selected_project\").split(\"/\").filter(Boolean).pop();\n    newmsg.payload = project_name\n}\nflow.set(\"currentfolder\",msg.payload);\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 220,
        "wires": [
            [
                "d7c9289e3b43fa08",
                "c2deb24644c45a06"
            ]
        ]
    },
    {
        "id": "c2deb24644c45a06",
        "type": "debug",
        "z": "f11166a80e40d7b6",
        "g": "28c003637500bb58",
        "name": "debug 43",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1370,
        "y": 320,
        "wires": []
    },
    {
        "id": "d7c9289e3b43fa08",
        "type": "ui_dropdown",
        "z": "f11166a80e40d7b6",
        "g": "28c003637500bb58",
        "name": "ingp project dropdown",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "919860c8b411c539",
        "order": 3,
        "width": 4,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1520,
        "y": 180,
        "wires": [
            [
                "8f84de504bd9865d"
            ]
        ]
    },
    {
        "id": "edfa27566d0f37ff",
        "type": "ui_button",
        "z": "f11166a80e40d7b6",
        "name": "",
        "group": "23c5588908fde9b8",
        "order": 7,
        "width": 7,
        "height": 1,
        "passthru": false,
        "label": "run_reconstruction",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 370,
        "y": 660,
        "wires": [
            [
                "6922f8443327585e"
            ]
        ]
    },
    {
        "id": "a4b0507b374cecca",
        "type": "ui_switch",
        "z": "f11166a80e40d7b6",
        "name": "Save ingp model",
        "label": "Save ingp model",
        "tooltip": "",
        "group": "23c5588908fde9b8",
        "order": 3,
        "width": 7,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "video",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 410,
        "y": 920,
        "wires": [
            [
                "b41acdba1bfc801b"
            ]
        ]
    },
    {
        "id": "9420f1f1f78a741f",
        "type": "ui_switch",
        "z": "f11166a80e40d7b6",
        "name": "Remove background",
        "label": "Remove background",
        "tooltip": "",
        "group": "23c5588908fde9b8",
        "order": 6,
        "width": 7,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 420,
        "y": 1000,
        "wires": [
            [
                "7eaf7291d23775b1"
            ]
        ]
    },
    {
        "id": "70b4dca61ac86b02",
        "type": "ui_text_input",
        "z": "f11166a80e40d7b6",
        "name": "Save output as",
        "label": "Save output as",
        "tooltip": "",
        "group": "23c5588908fde9b8",
        "order": 2,
        "width": 7,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 420,
        "y": 840,
        "wires": [
            [
                "fb3bf4b6edab43c7"
            ]
        ]
    },
    {
        "id": "8aaec62f5dc1c9f2",
        "type": "ui_slider",
        "z": "f11166a80e40d7b6",
        "name": "",
        "label": "Steps",
        "tooltip": "",
        "group": "23c5588908fde9b8",
        "order": 4,
        "width": 5,
        "height": 1,
        "passthru": true,
        "outs": "all",
        "topic": "topic",
        "topicType": "msg",
        "min": 0,
        "max": "20000",
        "step": 1,
        "className": "",
        "x": 390,
        "y": 1160,
        "wires": [
            [
                "058a7201fdcec32f",
                "21ec4e07bcb045bd"
            ]
        ]
    },
    {
        "id": "46e5ca4933fd9f42",
        "type": "ui_text",
        "z": "f11166a80e40d7b6",
        "group": "23c5588908fde9b8",
        "order": 1,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "",
        "format": "Guidelines: You need to point to foler that contains transforms.json and then configure and start reconstruction",
        "layout": "row-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 290,
        "y": 120,
        "wires": []
    },
    {
        "id": "21ec4e07bcb045bd",
        "type": "ui_text",
        "z": "f11166a80e40d7b6",
        "group": "23c5588908fde9b8",
        "order": 5,
        "width": 2,
        "height": 1,
        "name": "Show steps",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 690,
        "y": 1180,
        "wires": []
    },
    {
        "id": "ab3d335fc2c980c9",
        "type": "ui_template",
        "z": "f11166a80e40d7b6",
        "group": "a7d09646c3ab18c3",
        "name": "Logging window ingp",
        "order": 1,
        "width": 12,
        "height": 16,
        "format": "<div style=\"height: 700px; overflow-y: scroll; border: 1px solid #ccc; padding: 10px;\" id=\"logWindow\"></div>\n\n<script>\n    (function(scope) {\n        scope.$watch('msg.payload', function(payload) {\n            var logWindow = document.getElementById(\"logWindow\");\n            if (payload === \"clear\") {\n                logWindow.innerHTML = \"\";  // Clear the log window\n            } else {\n                logWindow.innerHTML += payload + \"<br/>\";\n                logWindow.scrollTop = logWindow.scrollHeight;  // Auto-scroll to the bottom\n            }\n        });\n    })(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1620,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "79f125292ff3885d",
        "type": "fs-file-lister",
        "z": "f11166a80e40d7b6",
        "g": "28c003637500bb58",
        "name": "Files",
        "start": "./projects/",
        "pattern": "*.*",
        "folders": "*",
        "hidden": false,
        "lstype": "directories",
        "path": true,
        "single": true,
        "depth": 0,
        "stat": true,
        "showWarnings": false,
        "x": 1150,
        "y": 220,
        "wires": [
            [
                "0e8b617c0ee560fd"
            ]
        ]
    },
    {
        "id": "144d75efb56e677f",
        "type": "debug",
        "z": "f11166a80e40d7b6",
        "name": "debug 47",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 840,
        "wires": []
    },
    {
        "id": "e19ae7959c10c9f3",
        "type": "debug",
        "z": "f11166a80e40d7b6",
        "name": "debug 48",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1460,
        "y": 940,
        "wires": []
    },
    {
        "id": "ad467ef6eb73e5a7",
        "type": "ui_text",
        "z": "f11166a80e40d7b6",
        "g": "28c003637500bb58",
        "group": "919860c8b411c539",
        "order": 1,
        "width": 8,
        "height": 1,
        "name": "Select Project",
        "label": "Select a project where to initialize reconstruction",
        "format": "",
        "layout": "row-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1280,
        "y": 160,
        "wires": []
    },
    {
        "id": "c45f862057b98f28",
        "type": "ui_text",
        "z": "f11166a80e40d7b6",
        "g": "28c003637500bb58",
        "group": "919860c8b411c539",
        "order": 5,
        "width": 7,
        "height": 1,
        "name": "transforms found or not",
        "label": "",
        "format": "{{msg.text}}",
        "layout": "row-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2570,
        "y": 220,
        "wires": []
    },
    {
        "id": "50f6a1a84175c4c1",
        "type": "function",
        "z": "f11166a80e40d7b6",
        "g": "28c003637500bb58",
        "name": "Prep Data",
        "func": "\nvar current_folder = global.get(\"selected_project\");\n\nvar newmsg = msg;\nnewmsg.result = false;\n\nvar transforms_substring = \"transforms_centered.json\";\nnewmsg.text = transforms_substring + \" wasn't found in \" + current_folder+\" . You can't run reconstruction!\";\n//console.log(msg.payload)\nfor (var i=0; i<msg.payload.length; i++) {\n\n    msg.payload[i].fname = msg.payload[i].name.replace(/^.*(\\\\|\\/|\\:)/, '');\n    //console.log(msg.payload[i].fname);\n\n    if(msg.payload[i].fname.includes(transforms_substring)) // true\n    {\n        flow.set(\"transforms_found\", true);\n        newmsg.result = true\n        newmsg.text = transforms_substring + \" is found in \" + current_folder + \" . You can run reconstruction!\";\n    }\n    \n}\n\nreturn newmsg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2340,
        "y": 220,
        "wires": [
            [
                "c45f862057b98f28",
                "8b4531d23690c116"
            ]
        ]
    },
    {
        "id": "be433bed50bb1f35",
        "type": "function",
        "z": "f11166a80e40d7b6",
        "g": "28c003637500bb58",
        "name": "Folder handling",
        "func": "let folder = global.get(\"filebrowser_default_folder\");\nlet project_name = global.get(\"selected_project\");\n//console.log(project_name);\n\nif (folder===undefined) {\n    folder=\"./projects/\";\n    context.set(\"folder\", folder);\n}\n\nmsg.project_path = folder+project_name+\"/\";\nmsg.payload = { \"start\": msg.project_path };\n//console.log(msg.payload)\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "fs",
                "module": "fs"
            }
        ],
        "x": 2020,
        "y": 220,
        "wires": [
            [
                "ae681a65f8ed97a2",
                "8ce95ac3bfcccac5"
            ]
        ]
    },
    {
        "id": "ae681a65f8ed97a2",
        "type": "fs-file-lister",
        "z": "f11166a80e40d7b6",
        "g": "28c003637500bb58",
        "name": "Files",
        "start": "./projects/bfrog_4x4/",
        "pattern": "*.*",
        "folders": "*",
        "hidden": false,
        "lstype": "files",
        "path": true,
        "single": true,
        "depth": 0,
        "stat": true,
        "showWarnings": false,
        "x": 2190,
        "y": 220,
        "wires": [
            [
                "50f6a1a84175c4c1"
            ]
        ]
    },
    {
        "id": "9cd6126067c8d457",
        "type": "link in",
        "z": "f11166a80e40d7b6",
        "g": "28c003637500bb58",
        "name": "INGP global folder in",
        "links": [
            "590c0108c7e5d026",
            "fe0e5a3d2e1fe78b",
            "4484b8d6a16e79f1",
            "3a5cc637ad1c52df"
        ],
        "x": 805,
        "y": 300,
        "wires": [
            [
                "ed3316b06c40e79c"
            ]
        ]
    },
    {
        "id": "7fff52a787654f03",
        "type": "link in",
        "z": "f11166a80e40d7b6",
        "g": "28c003637500bb58",
        "name": "find transforms in",
        "links": [
            "1f21093d7f876a07"
        ],
        "x": 1905,
        "y": 280,
        "wires": [
            [
                "be433bed50bb1f35"
            ]
        ]
    },
    {
        "id": "8b4531d23690c116",
        "type": "debug",
        "z": "f11166a80e40d7b6",
        "g": "28c003637500bb58",
        "name": "debug 52",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "text",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2290,
        "y": 300,
        "wires": []
    },
    {
        "id": "8f84de504bd9865d",
        "type": "function",
        "z": "f11166a80e40d7b6",
        "g": "28c003637500bb58",
        "name": "Set global_folder",
        "func": "var folder = global.get('filebrowser_default_folder');\nvar project= msg.payload;\nmsg.payload = project;\n\nglobal.set(\"selected_project\", msg.payload)\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1710,
        "y": 240,
        "wires": [
            [
                "1f21093d7f876a07"
            ]
        ]
    },
    {
        "id": "1f21093d7f876a07",
        "type": "link out",
        "z": "f11166a80e40d7b6",
        "g": "28c003637500bb58",
        "name": "find transforms ou",
        "mode": "link",
        "links": [
            "7fff52a787654f03"
        ],
        "x": 1605,
        "y": 320,
        "wires": []
    },
    {
        "id": "8ce95ac3bfcccac5",
        "type": "debug",
        "z": "f11166a80e40d7b6",
        "g": "28c003637500bb58",
        "name": "debug 53",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2050,
        "y": 300,
        "wires": []
    },
    {
        "id": "60493bb1f6b0cab2",
        "type": "ui_text",
        "z": "f11166a80e40d7b6",
        "d": true,
        "group": "a7d09646c3ab18c3",
        "order": 2,
        "width": 12,
        "height": 1,
        "name": "",
        "label": "OUTPUT",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1520,
        "y": 700,
        "wires": []
    },
    {
        "id": "74926709c85accd1",
        "type": "debug",
        "z": "f11166a80e40d7b6",
        "name": "debug 54",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1480,
        "y": 760,
        "wires": []
    },
    {
        "id": "6cc453db05c0eb3e",
        "type": "function",
        "z": "f11166a80e40d7b6",
        "name": "function 15",
        "func": "if (Buffer.isBuffer(msg.payload)) {\n    msg.payload = msg.payload.toString('utf8');\n} else if (typeof msg.payload !== 'string') {\n    msg.payload = \"\";\n}\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 660,
        "wires": [
            [
                "ab3d335fc2c980c9",
                "74926709c85accd1"
            ]
        ]
    },
    {
        "id": "13c7112186c0a641",
        "type": "inject",
        "z": "f11166a80e40d7b6",
        "name": "Clear Log on Startup",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "clear",
        "payloadType": "str",
        "x": 1340,
        "y": 500,
        "wires": [
            [
                "ab3d335fc2c980c9"
            ]
        ]
    },
    {
        "id": "586038a5dcac1eac",
        "type": "inject",
        "z": "cd35db7d9440e826",
        "g": "29bf2eccfbb8fe16",
        "name": "Init",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "change",
        "payload": "filebrowser_default_folder",
        "payloadType": "global",
        "x": 650,
        "y": 300,
        "wires": [
            [
                "9ac718281d44165a"
            ]
        ]
    },
    {
        "id": "9ac718281d44165a",
        "type": "function",
        "z": "cd35db7d9440e826",
        "g": "29bf2eccfbb8fe16",
        "name": "Folder handling",
        "func": "let folder = context.get(\"folder\");\nif (folder===undefined) {\n    folder=\"./projects/\";\n    context.set(\"folder\", folder);\n}\n\nlet hidden = context.get(\"hidden\");\nif (hidden===undefined) {\n    hidden=false;\n    context.set(\"hidden\", hidden);\n}\n\nif (msg.topic===\"up\") {\n    var the_arr = folder.split('/');\n    the_arr.pop();\n    folder=the_arr.join('/'); \n    context.set(\"folder\", folder);\n}\nif (msg.topic===\"change\") {\n    folder=msg.payload;    \n    context.set(\"folder\", folder);\n}\nif (msg.topic===\"hidden\") {\n    hidden=msg.payload;    \n    context.set(\"hidden\", hidden);\n}\n\nmsg.payload = {\"start\":folder, \"hidden\": hidden};\nflow.set(\"folder\", folder);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 340,
        "wires": [
            [
                "f0d9e0579a4ed929",
                "e8e972c0b58a4f12"
            ]
        ]
    },
    {
        "id": "804b2434dfa88e92",
        "type": "function",
        "z": "cd35db7d9440e826",
        "g": "29bf2eccfbb8fe16",
        "name": "Prep Data",
        "func": "function convertDate(local) {\n    let d = new Date(local);\n    d.setTime(d.getTime()+3600*1000);\n    return d.toISOString().slice(0, 19).replace('T', ' ');\n}\n\nif (msg.topic === \"quickfilter\") {\n    let filter = msg.payload;\n    msg.payload = flow.get(\"currentfolder\").slice();\n    if (msg.payload !== \"\") {\n        for (var i = msg.payload.length-1; i >= 0; i--) {\n            if (!msg.payload[i].fname.includes(filter)) {\n                msg.payload.splice(i,1);\n            }\n        }\n    }\n    return msg;\n}\n\nfor (var i=0; i<msg.payload.length; i++) {\n   // msg.payload[i].stat.created = convertDate(msg.payload[i].stat.created);\n   // msg.payload[i].stat.changed = convertDate(msg.payload[i].stat.changed);\n   // msg.payload[i].stat.accessed = convertDate(msg.payload[i].stat.accessed);\n   // msg.payload[i].stat.statusChanged = convertDate(msg.payload[i].stat.statusChanged);\n    msg.payload[i].fname = msg.payload[i].name.replace(/^.*(\\\\|\\/|\\:)/, '');\n    if (msg.payload[i].stat.isDirectory) {\n        msg.payload[i].ext = \"folder\";\n        msg.payload[i].icon = \"<i class=\\\"fa fa-folder-o\\\"></i>\";\n    } else {\n        msg.payload[i].ext = msg.payload[i].fname.split('.').pop().toLowerCase();\n        msg.payload[i].downloadlink = \"/download?filename=\"+msg.payload[i].name;\n        switch (msg.payload[i].ext) {\n            case \"csv\":\n            case \"txt\":\n                msg.payload[i].icon = \"<i class=\\\"fa fa-file-text-o\\\"></i>\";\n                break;\n            case \"jpg\":\n            case \"jpeg\":\n            case \"png\":\n            case \"gif\":\n                msg.payload[i].icon = \"<i class=\\\"fa fa-file-image-o\\\"></i>\";\n                break;\n            case \"json\":\n            case \"py\":\n            case \"sh\":\n                msg.payload[i].icon = \"<i class=\\\"fa fa-file-code-o\\\"></i>\";\n                break;\n            default:\n                msg.payload[i].icon = \"<i class=\\\"fa fa-file-o\\\"></i>\";\n        }\n    }\n}\nflow.set(\"currentfolder\",msg.payload);\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 340,
        "wires": [
            [
                "d6716d447139a35c"
            ]
        ]
    },
    {
        "id": "25fce322b6f11e59",
        "type": "function",
        "z": "cd35db7d9440e826",
        "g": "29bf2eccfbb8fe16",
        "name": "Change folder",
        "func": "\nif (msg.payload.stat.isDirectory) {\n\n    msg.topic = \"change\";\n    msg.payload = msg.payload.name;\n\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 420,
        "wires": [
            [
                "9ac718281d44165a"
            ]
        ]
    },
    {
        "id": "419a9f1c1e75891e",
        "type": "change",
        "z": "cd35db7d9440e826",
        "g": "29bf2eccfbb8fe16",
        "name": "Empty",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1190,
        "y": 280,
        "wires": [
            [
                "4de86a1edb0d9a2e"
            ]
        ]
    },
    {
        "id": "d23290c4262f3351",
        "type": "function",
        "z": "cd35db7d9440e826",
        "g": "29bf2eccfbb8fe16",
        "name": "function 6",
        "func": "flow.set(\"lastfile\",msg.payload)\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1720,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "aafc3dbd21459889",
        "type": "function",
        "z": "cd35db7d9440e826",
        "name": "function 7",
        "func": "var filename = flow.get(\"lastfile\");\nvar cmd = \"python ../scripts/viz_test.py \" +filename;\nmsg.payload = cmd;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 820,
        "wires": [
            [
                "a4275741466c473d"
            ]
        ]
    },
    {
        "id": "a4275741466c473d",
        "type": "exec",
        "z": "cd35db7d9440e826",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 670,
        "y": 820,
        "wires": [
            [
                "e625add736e0ea17"
            ],
            [
                "e625add736e0ea17"
            ],
            [
                "e625add736e0ea17"
            ]
        ]
    },
    {
        "id": "e625add736e0ea17",
        "type": "debug",
        "z": "cd35db7d9440e826",
        "name": "debug 30",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 920,
        "y": 820,
        "wires": []
    },
    {
        "id": "4e7f11f86327a4ed",
        "type": "debug",
        "z": "cd35db7d9440e826",
        "name": "debug 31",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 680,
        "wires": []
    },
    {
        "id": "ee615ffba38355d5",
        "type": "delay",
        "z": "cd35db7d9440e826",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 570,
        "y": 720,
        "wires": [
            [
                "860e0f7928c64386"
            ]
        ]
    },
    {
        "id": "e64f7a9d58ae58e6",
        "type": "function",
        "z": "cd35db7d9440e826",
        "name": "function 8",
        "func": "msg.payload = \"stop\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 980,
        "wires": [
            [
                "ddc316ed834ffaf7"
            ]
        ]
    },
    {
        "id": "0ba0e140ce18da90",
        "type": "tcp request",
        "z": "cd35db7d9440e826",
        "name": "",
        "server": "",
        "port": "",
        "out": "time",
        "ret": "buffer",
        "splitc": "0",
        "newline": "",
        "trim": false,
        "tls": "",
        "x": 830,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "ddc316ed834ffaf7",
        "type": "tcp request",
        "z": "cd35db7d9440e826",
        "name": "",
        "server": "127.0.0.1",
        "port": "65432",
        "out": "time",
        "ret": "buffer",
        "splitc": "0",
        "newline": "",
        "trim": false,
        "tls": "",
        "x": 800,
        "y": 1000,
        "wires": [
            [
                "0c02a4e5b944c78d"
            ]
        ]
    },
    {
        "id": "0c02a4e5b944c78d",
        "type": "debug",
        "z": "cd35db7d9440e826",
        "name": "debug 32",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 1020,
        "wires": []
    },
    {
        "id": "d6716d447139a35c",
        "type": "ui_etable",
        "z": "cd35db7d9440e826",
        "g": "29bf2eccfbb8fe16",
        "payload": "[{\"title\":\"Type\",\"field\":\"icon\",\"formatter\":\"html\",\"width\":50},{\"title\":\"Name\",\"field\":\"fname\"},{\"title\":\"Size\",\"field\":\"stat.size\",\"sorter\":\"number\",\"width\":100,\"sorterParams\":{\"thousandSeparator\":\",\",\"decimalSeparator\":\".\",\"alignEmptyValues\":\"top\"}},{\"title\":\"Created\",\"field\":\"stat.created\",\"formatter\":\"datetime\",\"width\":200,\"formatterParams\":{\"outputFormat\":\"yyyy.MM.DD HH:mm:ss\",\"invalidPlaceholder\":\"(invalid date)\",\"timezone\":\"system\"}},{\"title\":\"Changed\",\"field\":\"stat.changed\",\"formatter\":\"datetime\",\"width\":200,\"formatterParams\":{\"outputFormat\":\"yyyy.MM.DD HH:mm:ss\",\"invalidPlaceholder\":\"(invalid date)\",\"timezone\":\"system\"}}]",
        "payloadType": "json",
        "options": "{\"movableColumns\":true,\"resizableColumns\":true,\"selectable\":1,\"responsiveLayout\":\"collapse\",\"autoResize\":true,\"layout\":\"fitColumns\",\"pagination\":\"local\",\"height\":\"100%\"}",
        "group": "3fdc8d9e247e5296",
        "name": "Select folder where files located",
        "order": 13,
        "width": 23,
        "height": 10,
        "columns": [],
        "outputs": 1,
        "cts": false,
        "x": 1410,
        "y": 340,
        "wires": [
            [
                "25fce322b6f11e59",
                "857e073fca509c2e",
                "d23290c4262f3351",
                "f01519fbe4901cea"
            ]
        ]
    },
    {
        "id": "3fc5b673b5fef038",
        "type": "ui_button",
        "z": "cd35db7d9440e826",
        "g": "29bf2eccfbb8fe16",
        "name": "",
        "group": "3fdc8d9e247e5296",
        "order": 3,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Refresh",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "refresh",
        "payload": "",
        "payloadType": "str",
        "topic": "refresh",
        "topicType": "str",
        "x": 640,
        "y": 340,
        "wires": [
            [
                "9ac718281d44165a"
            ]
        ]
    },
    {
        "id": "0c114a1712edbf27",
        "type": "ui_button",
        "z": "cd35db7d9440e826",
        "g": "29bf2eccfbb8fe16",
        "name": "",
        "group": "3fdc8d9e247e5296",
        "order": 6,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Up",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "arrow_upwards",
        "payload": "",
        "payloadType": "str",
        "topic": "up",
        "topicType": "str",
        "x": 650,
        "y": 420,
        "wires": [
            [
                "9ac718281d44165a"
            ]
        ]
    },
    {
        "id": "583d5f7edc4fb63a",
        "type": "ui_button",
        "z": "cd35db7d9440e826",
        "g": "29bf2eccfbb8fe16",
        "name": "",
        "group": "3fdc8d9e247e5296",
        "order": 5,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Reset",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "autorenew",
        "payload": "filebrowser_default_folder",
        "payloadType": "global",
        "topic": "change",
        "topicType": "str",
        "x": 650,
        "y": 380,
        "wires": [
            [
                "9ac718281d44165a"
            ]
        ]
    },
    {
        "id": "30e9dde572fb57fe",
        "type": "ui_button",
        "z": "cd35db7d9440e826",
        "name": "",
        "group": "40495299a6187faf",
        "order": 1,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Run Visualizer",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 260,
        "y": 740,
        "wires": [
            [
                "ee615ffba38355d5",
                "aafc3dbd21459889"
            ]
        ]
    },
    {
        "id": "4ef85168cd2e4805",
        "type": "ui_button",
        "z": "cd35db7d9440e826",
        "name": "",
        "group": "40495299a6187faf",
        "order": 2,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Stop visualizer",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "false",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 260,
        "y": 920,
        "wires": [
            [
                "e64f7a9d58ae58e6",
                "860e0f7928c64386"
            ]
        ]
    },
    {
        "id": "4de86a1edb0d9a2e",
        "type": "ui_text_input",
        "z": "cd35db7d9440e826",
        "g": "29bf2eccfbb8fe16",
        "name": "",
        "label": "Filter:",
        "tooltip": "",
        "group": "3fdc8d9e247e5296",
        "order": 10,
        "width": 6,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "quickfilter",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1330,
        "y": 280,
        "wires": [
            [
                "804b2434dfa88e92"
            ]
        ]
    },
    {
        "id": "6e8839f21d4ad1b1",
        "type": "ui_text",
        "z": "cd35db7d9440e826",
        "group": "3fdc8d9e247e5296",
        "order": 1,
        "width": 23,
        "height": 1,
        "name": "",
        "label": "Guideline:",
        "format": "Select reconstructed point cloud file (.ply)",
        "layout": "row-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 620,
        "y": 180,
        "wires": []
    },
    {
        "id": "e8e972c0b58a4f12",
        "type": "ui_text",
        "z": "cd35db7d9440e826",
        "g": "29bf2eccfbb8fe16",
        "group": "3fdc8d9e247e5296",
        "order": 7,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "Folder:",
        "format": "{{msg.payload.start}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1040,
        "y": 280,
        "wires": []
    },
    {
        "id": "857e073fca509c2e",
        "type": "ui_text",
        "z": "cd35db7d9440e826",
        "g": "29bf2eccfbb8fe16",
        "group": "40495299a6187faf",
        "order": 4,
        "width": 15,
        "height": 1,
        "name": "",
        "label": "Selected file",
        "format": "{{msg.payload.name}}",
        "layout": "row-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1710,
        "y": 320,
        "wires": []
    },
    {
        "id": "860e0f7928c64386",
        "type": "ui_template",
        "z": "cd35db7d9440e826",
        "group": "40495299a6187faf",
        "name": "",
        "order": 6,
        "width": 23,
        "height": 13,
        "format": "<iframe id=\"myIframe\" src=\"http://localhost:6001\" style=\"display: {{msg.payload ? 'block' : 'none'}};width: 100%; height: 800px;\">\n</iframe>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 900,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "f0d9e0579a4ed929",
        "type": "fs-file-lister",
        "z": "cd35db7d9440e826",
        "g": "29bf2eccfbb8fe16",
        "name": "Files",
        "start": "./projects/",
        "pattern": "*.*",
        "folders": "*",
        "hidden": false,
        "lstype": "both",
        "path": true,
        "single": true,
        "depth": 0,
        "stat": true,
        "showWarnings": false,
        "x": 1030,
        "y": 340,
        "wires": [
            [
                "804b2434dfa88e92",
                "419a9f1c1e75891e"
            ]
        ]
    },
    {
        "id": "cb77f7a82b32bf9e",
        "type": "ui_button",
        "z": "cd35db7d9440e826",
        "g": "29bf2eccfbb8fe16",
        "name": "Add file to viz",
        "group": "3fdc8d9e247e5296",
        "order": 14,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Add file to vizualization",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "add",
        "payload": "",
        "payloadType": "str",
        "topic": "refresh",
        "topicType": "str",
        "x": 950,
        "y": 520,
        "wires": [
            [
                "eb6ca6290bc7a968",
                "f01519fbe4901cea"
            ]
        ]
    },
    {
        "id": "eb6ca6290bc7a968",
        "type": "function",
        "z": "cd35db7d9440e826",
        "g": "29bf2eccfbb8fe16",
        "name": "function 17",
        "func": "let file = flow.get(\"lastfile\");\n\nlet viz_files = flow.get(\"viz_files\");\n\nviz_files.push(file.name);\n\nmsg.payload = viz_files;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 540,
        "wires": [
            [
                "6855f6f284c43984"
            ]
        ]
    },
    {
        "id": "6855f6f284c43984",
        "type": "debug",
        "z": "cd35db7d9440e826",
        "g": "29bf2eccfbb8fe16",
        "name": "debug 57",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1380,
        "y": 520,
        "wires": []
    },
    {
        "id": "d1e3f71ea24a8eea",
        "type": "inject",
        "z": "cd35db7d9440e826",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 440,
        "wires": [
            [
                "0dd51f602571afad",
                "f01519fbe4901cea"
            ]
        ]
    },
    {
        "id": "0dd51f602571afad",
        "type": "function",
        "z": "cd35db7d9440e826",
        "name": "function 18",
        "func": "flow.set(\"viz_files\",[]);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "f01519fbe4901cea",
        "type": "function",
        "z": "cd35db7d9440e826",
        "g": "29bf2eccfbb8fe16",
        "name": "function 19",
        "func": "let files = flow.get(\"viz_files\");\nmsg.payload = files\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1690,
        "y": 480,
        "wires": [
            [
                "72ac73d5a30d357d"
            ]
        ]
    },
    {
        "id": "72ac73d5a30d357d",
        "type": "ui_text",
        "z": "cd35db7d9440e826",
        "g": "29bf2eccfbb8fe16",
        "group": "40495299a6187faf",
        "order": 4,
        "width": 15,
        "height": 1,
        "name": "",
        "label": "Files for vizualization",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1940,
        "y": 480,
        "wires": []
    },
    {
        "id": "c12eb424d725ba51",
        "type": "ui_button",
        "z": "cd35db7d9440e826",
        "g": "29bf2eccfbb8fe16",
        "name": "Clear vizualization",
        "group": "3fdc8d9e247e5296",
        "order": 14,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Clear all files from vizualization",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "Delete",
        "payload": "",
        "payloadType": "str",
        "topic": "refresh",
        "topicType": "str",
        "x": 950,
        "y": 600,
        "wires": [
            [
                "bccd7e1f55b8fa84"
            ]
        ]
    },
    {
        "id": "bccd7e1f55b8fa84",
        "type": "function",
        "z": "cd35db7d9440e826",
        "g": "29bf2eccfbb8fe16",
        "name": "function 20",
        "func": "flow.set(\"viz_files\",[]);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 600,
        "wires": [
            [
                "f01519fbe4901cea"
            ]
        ]
    },
    {
        "id": "58f4f425e9b543ca",
        "type": "function",
        "z": "c0273576f864fea6",
        "name": "function 10",
        "func": "\nvar cmd = \".\\\\CloudComPy310\\\\envCloudComPy.bat\"//+filename;\nmsg.payload = cmd;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 780,
        "wires": [
            [
                "a26435bd6401d4fa"
            ]
        ]
    },
    {
        "id": "a26435bd6401d4fa",
        "type": "exec",
        "z": "c0273576f864fea6",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 930,
        "y": 800,
        "wires": [
            [
                "fdabff8dd193ee69"
            ],
            [
                "fdabff8dd193ee69"
            ],
            [
                "fdabff8dd193ee69"
            ]
        ]
    },
    {
        "id": "fdabff8dd193ee69",
        "type": "debug",
        "z": "c0273576f864fea6",
        "name": "debug 44",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1200,
        "y": 780,
        "wires": []
    },
    {
        "id": "a39c20fa82e98f71",
        "type": "delay",
        "z": "c0273576f864fea6",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 890,
        "y": 640,
        "wires": [
            [
                "41d44316103e492c"
            ]
        ]
    },
    {
        "id": "a9270599221108f3",
        "type": "pythonshell in",
        "z": "c0273576f864fea6",
        "name": "compare_surface",
        "pyfile": "C:\\Users\\zlukich\\Desktop\\lehre\\sose23\\Bachelorarbeit\\node-red\\CloudComPy310/compare_surface.py",
        "virtualenv": "C:\\zlukich\\anaconda3\\envs\\CloudComPy310",
        "continuous": false,
        "stdInData": false,
        "x": 930,
        "y": 900,
        "wires": [
            [
                "fdabff8dd193ee69"
            ]
        ]
    },
    {
        "id": "53ef27deb0f14696",
        "type": "ui_button",
        "z": "c0273576f864fea6",
        "name": "",
        "group": "bbcac8f35b0ea650",
        "order": 2,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Run Visualizer",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 480,
        "y": 700,
        "wires": [
            [
                "a39c20fa82e98f71",
                "58f4f425e9b543ca"
            ]
        ]
    },
    {
        "id": "b5409114c7c5149d",
        "type": "ui_text",
        "z": "c0273576f864fea6",
        "group": "bbcac8f35b0ea650",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "text",
        "format": "Code to be implemented",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 510,
        "y": 300,
        "wires": []
    },
    {
        "id": "41d44316103e492c",
        "type": "ui_template",
        "z": "c0273576f864fea6",
        "group": "bbcac8f35b0ea650",
        "name": "",
        "order": 4,
        "width": 22,
        "height": "18",
        "format": "<iframe id=\"myIframe\" src=\"http://localhost:5454\" style=\"display: {{msg.payload ? 'block' : 'none'}};width: 100%; height: 100%;\">\n</iframe>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1180,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "eb5989747efe7bc0",
        "type": "comment",
        "z": "ce11a1573af9dae5",
        "name": "New File Browser",
        "info": "",
        "x": 720,
        "y": 660,
        "wires": []
    },
    {
        "id": "99a1eb025cd521ab",
        "type": "function",
        "z": "ce11a1573af9dae5",
        "g": "a97981e2e8c1f13e",
        "name": "Folder handling",
        "func": "let folder = global.get(\"filebrowser_default_folder\");\nlet project_name = global.get(\"selected_project\")\n//console.log(project_name);\n\nif (folder===undefined) {\n    folder=\"./projects/\";\n    context.set(\"folder\", folder);\n}\n\n\nmsg.project_name = project_name;\nmsg.payload = {\"start\":folder};\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "fs",
                "module": "fs"
            }
        ],
        "x": 880,
        "y": 740,
        "wires": [
            [
                "d84bb53e6f53b33e"
            ]
        ]
    },
    {
        "id": "59087407bde0886a",
        "type": "function",
        "z": "ce11a1573af9dae5",
        "g": "a97981e2e8c1f13e",
        "name": "Prep Data",
        "func": "function convertDate(local) {\n    let d = new Date(local);\n    d.setTime(d.getTime()+3600*1000);\n    return d.toISOString().slice(0, 19).replace('T', ' ');\n}\n\nvar newmsg = msg;\nnewmsg.options = [];\n\nfor (var i=0; i<msg.payload.length; i++) {\n\n    msg.payload[i].fname = msg.payload[i].name.replace(/^.*(\\\\|\\/|\\:)/, '');\n    if (msg.payload[i].stat.isDirectory) {\n        msg.payload[i].ext = \"folder\";\n        newmsg.options[i] = msg.payload[i].fname;\n    }\n}\nif (global.get(\"selected_project\") !== \"\") {\n    // Find the index of the selected project\n    var project_name = global.get(\"selected_project\").split(\"/\").filter(Boolean).pop();\n    newmsg.payload = project_name\n}\nflow.set(\"currentfolder\",msg.payload);\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 740,
        "wires": [
            [
                "529b44651e96af74",
                "a2f6ee2a8fab4c4e"
            ]
        ]
    },
    {
        "id": "a2f6ee2a8fab4c4e",
        "type": "debug",
        "z": "ce11a1573af9dae5",
        "g": "a97981e2e8c1f13e",
        "name": "debug 45",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1290,
        "y": 840,
        "wires": []
    },
    {
        "id": "5eeb4bf58301947d",
        "type": "link in",
        "z": "ce11a1573af9dae5",
        "g": "a97981e2e8c1f13e",
        "name": "Automatic global folder in",
        "links": [
            "92800beeb59494a6",
            "4484b8d6a16e79f1",
            "fe0e5a3d2e1fe78b",
            "067da2f1d49bc5ac"
        ],
        "x": 715,
        "y": 840,
        "wires": [
            [
                "99a1eb025cd521ab"
            ]
        ]
    },
    {
        "id": "529b44651e96af74",
        "type": "ui_dropdown",
        "z": "ce11a1573af9dae5",
        "g": "a97981e2e8c1f13e",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2fdbed4902a7b60d",
        "order": 4,
        "width": "6",
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1380,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "f1e77e66d57a2abc",
        "type": "ui_text",
        "z": "ce11a1573af9dae5",
        "group": "acabc51978b41c5b",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "text",
        "format": "Code to be implemented",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 630,
        "y": 580,
        "wires": []
    },
    {
        "id": "d84bb53e6f53b33e",
        "type": "fs-file-lister",
        "z": "ce11a1573af9dae5",
        "g": "a97981e2e8c1f13e",
        "name": "Files",
        "start": "./projects/",
        "pattern": "*.*",
        "folders": "*",
        "hidden": false,
        "lstype": "directories",
        "path": true,
        "single": true,
        "depth": 0,
        "stat": true,
        "showWarnings": false,
        "x": 1070,
        "y": 740,
        "wires": [
            [
                "59087407bde0886a"
            ]
        ]
    },
    {
        "id": "a1ef382fba55a3a1",
        "type": "http in",
        "z": "dba0e3f78435d0da",
        "name": "",
        "url": "/stream",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 310,
        "y": 420,
        "wires": [
            [
                "dd79c57db9dc1d26"
            ]
        ]
    },
    {
        "id": "dd79c57db9dc1d26",
        "type": "template",
        "z": "dba0e3f78435d0da",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html>\n    <head>\n    <link rel=\"stylesheet\" href=\"//cdn.jsdelivr.net/npm/bootswatch@4.5.2/dist/slate/bootstrap.min.css\" integrity=\"sha384-8iuq0iaMHpnH2vSyvZMSIqQuUnQA7QM+f6srIdlgBrTSEyd//AWNMyEaSF2yPzNQ\" crossorigin=\"anonymous\">        <title>Basic Web Page</title>\n    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN\" crossorigin=\"anonymous\">\n    <script>\n    function showname () {\n        var name = document.getElementById('fileInput'); \n        var ptext = document.getElementById('filetext');\n        ptext.textContent = name.value;\n\n    };\n     function sendPostRequest() {\n        // Define the URL of your Node-RED server\n        const serverUrl = 'http://127.0.0.1:1880/visualize'; // Replace with your actual server URL\n\n        // Create a new XMLHttpRequest object\n        const xhr = new XMLHttpRequest();\n\n        // Define the request method, URL, and asynchronous flag\n        xhr.open('POST', serverUrl, true);\n\n        // Set the request header (optional)\n        xhr.setRequestHeader('Content-Type', 'application/json');\n\n        // Define the data to be sent in the request (if needed)\n        const data = { file: document.getElementById('fileInput').textContent };\n\n        // Convert the data to a JSON string (if sending JSON data)\n        const jsonData = JSON.stringify(data);\n\n        // Define the function to execute when the request is completed\n        xhr.onload = function() {\n            if (xhr.status === 200) {\n                // Request was successful\n                console.log('File upload successful');\n            } else {\n                // Request encountered an error\n                console.error('File upload failed');\n            }\n        };\n\n        // Send the POST request with data (if needed)\n         xhr.send(jsonData); // For JSON data\n        //xhr.send(); // For no data\n    }\n    function uploadFiles(){\n\n        const xhr = new XMLHttpRequest();\n        \n        // xhr.setRequestHeader('Content-Disposition', 'attachment; filename=\"' + fileSelector.value + '\"');\n        const url = 'http://127.0.0.1:1880/upload';\n        const method = 'GET';\n\n        xhr.open(method, url);\n\n        //xhr.setRequestHeader('Content-Type', 'multipart/form-data');\n\n        \n        var myFormData = new FormData();\n        var fileSelector = document.getElementById(\"fileInput\");\n        console.log(fileSelector.files[0]);\n        myFormData.append('body',fileSelector.files[0]);\n        \n        // Define the data to be sent in the request (if needed)\n        const data = document.getElementById('fileInput').value;\n        \n\n\n\n        xhr.send(myFormData);\n    };\n\n    // Attach the function to the button's click event\n</script>\n    </head>\n    <body>\n      <label for=\"myfile\">Select a file:</label>\n        <input id=\"fileInput\" name=\"file\" type=\"file\" onchange=\"uploadFiles()\">\n      <p> </p>\n      <p> </p>\n      <p id=\"filetext\"></p>\n      <button id=\"uploadButton\" type=\"button\" class=\"btn\" onclick=\"sendPostRequest()\">Visualize button</button>\n      <iframe src=\"http://127.0.0.1:8050/\" height=\"600\" width=\"800\" title=\"W3School\">\n      </iframe>\n\n      <form action=\"http://127.0.0.1:1880/uploadtest\" method=\"post\" enctype=\"multipart/form-data\">\n        <input type=\"file\" name=\"fileToUpload\">\n        <input type=\"submit\" value=\"Upload File\">\n    </form>\n    </body>\n</html>\n",
        "output": "str",
        "x": 580,
        "y": 420,
        "wires": [
            [
                "b08af5ec8da03f84",
                "53b40b977762a091"
            ]
        ]
    },
    {
        "id": "b08af5ec8da03f84",
        "type": "http response",
        "z": "dba0e3f78435d0da",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 970,
        "y": 340,
        "wires": []
    },
    {
        "id": "53b40b977762a091",
        "type": "debug",
        "z": "dba0e3f78435d0da",
        "name": "debug 8",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 500,
        "wires": []
    },
    {
        "id": "5cf00b1b9da33434",
        "type": "http in",
        "z": "dba0e3f78435d0da",
        "name": "",
        "url": "/connect",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 330,
        "y": 640,
        "wires": [
            [
                "f7248872545644bc"
            ]
        ]
    },
    {
        "id": "f7248872545644bc",
        "type": "exec",
        "z": "dba0e3f78435d0da",
        "command": "stream.py",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "stream.py",
        "x": 580,
        "y": 640,
        "wires": [
            [
                "ff8870e4cc2b5833"
            ],
            [],
            []
        ]
    },
    {
        "id": "ff8870e4cc2b5833",
        "type": "debug",
        "z": "dba0e3f78435d0da",
        "name": "debug 9",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 640,
        "wires": []
    }
]