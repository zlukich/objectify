Search.setIndex({"docnames": ["CSF", "Canupo", "DistanceComputationTools", "GeometricalAnalysisTools", "HPR", "M3C2", "MeshBoolean", "MinimalBoundingBox", "Neighbourhood", "PCL", "PCV", "PoissonRecon", "RANSAC_SD", "SRA", "ScalarField", "ccFacet", "ccMesh", "ccOctree", "ccPointCloud", "ccPolyline", "ccPrimitives", "ccSensor", "cloudComPy", "cloudSamplingTools", "colors", "index", "introduction", "license", "tables", "userEntities", "userIntro", "userLoad", "userNumpy", "userSave", "userUseCases"], "filenames": ["CSF.rst", "Canupo.rst", "DistanceComputationTools.rst", "GeometricalAnalysisTools.rst", "HPR.rst", "M3C2.rst", "MeshBoolean.rst", "MinimalBoundingBox.rst", "Neighbourhood.rst", "PCL.rst", "PCV.rst", "PoissonRecon.rst", "RANSAC_SD.rst", "SRA.rst", "ScalarField.rst", "ccFacet.rst", "ccMesh.rst", "ccOctree.rst", "ccPointCloud.rst", "ccPolyline.rst", "ccPrimitives.rst", "ccSensor.rst", "cloudComPy.rst", "cloudSamplingTools.rst", "colors.rst", "index.rst", "introduction.rst", "license.rst", "tables.rst", "userEntities.rst", "userIntro.rst", "userLoad.rst", "userNumpy.rst", "userSave.rst", "userUseCases.rst"], "titles": ["<span class=\"section-number\">2. </span>CSF plugin", "<span class=\"section-number\">1. </span>Canupo plugin", "<span class=\"section-number\">10. </span>Distance Computation Tools", "<span class=\"section-number\">11. </span>Geometrical Analysis Tools", "<span class=\"section-number\">3. </span>HPR plugin", "<span class=\"section-number\">4. </span>M3C2 plugin", "<span class=\"section-number\">5. </span>MeshBoolean plugin", "<span class=\"section-number\">11. </span>minimalBoundingBox Python plugin", "<span class=\"section-number\">14. </span>Neighbourhood", "<span class=\"section-number\">6. </span>PCL plugin", "<span class=\"section-number\">7. </span>PCV plugin", "<span class=\"section-number\">8. </span>PoissonRecon plugin", "<span class=\"section-number\">9. </span>RANSAC_SD plugin", "<span class=\"section-number\">10. </span>SRA plugin", "<span class=\"section-number\">9. </span>Scalar Fields", "<span class=\"section-number\">13. </span>2D Polygons", "<span class=\"section-number\">5. </span>Meshes", "<span class=\"section-number\">4. </span>Octrees, descriptors and neighbourhood", "<span class=\"section-number\">2. </span>Points Clouds", "<span class=\"section-number\">3. </span>Polylines", "<span class=\"section-number\">6. </span>ccPrimitives", "<span class=\"section-number\">8. </span>Sensor", "<span class=\"section-number\">1. </span>cloudComPy module, functions", "<span class=\"section-number\">12. </span>Cloud Sampling Tools", "<span class=\"section-number\">15. </span>Colors", "cloudComPy: a Python interface for CloudCompare", "<span class=\"section-number\">1. </span>cloudComPy: a first example", "<span class=\"section-number\">2. </span>license", "<span class=\"section-number\">1. </span>general index", "<span class=\"section-number\">4. </span>Clouds, meshes, scalar fields: introspection, manipulation", "<span class=\"section-number\">1. </span>Introduction", "<span class=\"section-number\">2. </span>Loading clouds and other entities from files", "<span class=\"section-number\">5. </span>operations on coordinates, scalar fields, colors, normals, meshes with Numpy", "<span class=\"section-number\">3. </span>Saving Clouds and other entities to files", "<span class=\"section-number\">1. </span>Create a point cloud with numpy"], "terms": {"i": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34], "standard": [0, 1, 2, 4, 5, 6, 9, 10, 11, 12, 13, 20, 34], "cloudcompi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 29, 31, 33, 34], "The": [0, 1, 2, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 32, 33, 34], "avail": [0, 1, 2, 4, 5, 6, 9, 10, 11, 12, 13, 16, 20, 22, 23, 26, 29, 31, 34], "can": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 31, 32, 33, 34], "test": [0, 1, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 18, 19, 29, 31, 34], "isplugincsf": [0, 34], "function": [0, 1, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 24, 25, 26, 29, 33, 34], "iscsf_avail": 0, "cc": [0, 1, 4, 5, 6, 9, 10, 11, 12, 13, 22, 26, 29, 30, 31, 32, 33, 34], "submodul": [0, 1, 4, 5, 6, 9, 10, 11, 12, 13], "import": [0, 1, 4, 5, 6, 9, 10, 11, 12, 13, 22, 25, 26, 29, 31, 32, 34], "computecsf": [0, 25, 34], "pc": [0, 11, 34], "_cloudcompi": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "ccpointcloud": [0, 1, 2, 4, 5, 7, 9, 10, 11, 12, 13, 15, 16, 19, 21, 22, 23, 24, 25, 29, 32, 34], "csfrigid": [0, 34], "int": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 34], "2": [0, 1, 2, 3, 6, 7, 8, 9, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 29, 32], "maxiter": 0, "500": [0, 12, 22], "clothresolut": [0, 34], "float": [0, 1, 2, 3, 5, 7, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 34], "0": [0, 1, 2, 3, 6, 9, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 29, 31, 32, 33, 34], "classthreshold": [0, 34], "5": [0, 3, 8, 11, 13, 19, 22, 24, 29, 31, 32, 34], "csfpostprocess": 0, "bool": [0, 1, 2, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 34], "fals": [0, 1, 2, 5, 9, 10, 11, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 26, 29, 32, 34], "computemesh": [0, 34], "list": [0, 2, 5, 9, 10, 15, 16, 17, 18, 19, 20, 22, 24, 29, 31, 33, 34], "cchobject": [0, 5, 10, 15, 16, 18, 19, 21, 22, 25], "comput": [0, 1, 3, 4, 5, 6, 9, 10, 13, 16, 17, 18, 19, 21, 22, 23, 25, 26, 29], "cloth": [0, 25], "simul": [0, 25, 29, 31], "filter": [0, 9, 18, 22, 23, 25, 29, 31], "see": [0, 1, 2, 3, 5, 9, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 31, 32, 33, 34], "paramet": [0, 1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 29, 33, 34], "point": [0, 1, 2, 3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 29], "cloud": [0, 1, 2, 3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 25, 26], "which": [0, 2, 4, 11, 15, 17, 18, 21, 22, 23, 24, 29, 31, 34], "appli": [0, 2, 16, 17, 18, 19, 20, 22, 23, 29, 31, 34], "option": [0, 1, 2, 3, 4, 5, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 31, 33, 34], "from": [0, 1, 2, 4, 6, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 30, 33], "1": [0, 1, 2, 3, 6, 7, 8, 9, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 29, 31, 32, 33, 34], "steep": 0, "slope": 0, "relief": 0, "3": [0, 1, 2, 3, 5, 6, 7, 8, 9, 13, 16, 17, 18, 20, 22, 23, 24, 26, 27, 29, 31, 32, 34], "flat": [0, 34], "default": [0, 1, 2, 3, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 31, 33, 34], "maximum": [0, 2, 11, 12, 13, 17, 18, 20, 22, 29], "iter": [0, 16, 18, 19, 22, 25, 29], "doubl": [0, 1, 2, 3, 5, 9, 13, 15, 16, 18, 19, 20, 22, 29, 34], "mesh": [0, 2, 6, 10, 11, 13, 15, 18, 22, 25], "return": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 31, 33, 34], "ground": [0, 21, 22, 29, 34], "offground": 0, "type": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 31, 32, 33, 34], "inittrace_csf": [0, 25], "none": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 34], "debug": [0, 4, 5, 6, 9, 10, 11, 12, 13, 15, 16, 18, 19, 26, 30], "trace": [0, 4, 5, 6, 9, 10, 11, 12, 13, 22, 26, 30], "must": [0, 1, 2, 4, 5, 6, 9, 10, 11, 12, 13, 18, 22, 24, 29, 32, 33, 34], "initi": [0, 4, 5, 6, 9, 10, 11, 12, 13, 14, 17, 18, 19, 22], "each": [0, 2, 4, 5, 6, 7, 9, 10, 11, 12, 13, 17, 18, 19, 20, 22, 23, 24, 32, 34], "python": [0, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 22, 26, 29, 30, 32, 34], "modul": [0, 4, 5, 6, 9, 10, 11, 12, 13, 23, 25, 26, 30], "done": [0, 2, 4, 5, 6, 9, 10, 11, 12, 13, 14, 22, 30, 34], "init": [0, 4, 5, 6, 9, 10, 11, 12, 13, 14, 20, 22], "follow": [0, 4, 5, 6, 9, 10, 11, 12, 13, 19, 22, 24, 29, 31, 32, 34], "valu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32], "environ": [0, 4, 5, 6, 9, 10, 11, 12, 13, 25, 26], "variabl": [0, 4, 5, 6, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 22, 34], "_cctrace_": [0, 4, 5, 6, 9, 10, 11, 12, 13, 26, 30], "ON": [0, 4, 5, 6, 9, 10, 11, 12, 13, 26, 30], "want": [0, 4, 5, 6, 9, 10, 11, 12, 13, 22, 26, 29, 30, 31, 32, 34], "isplugincanupo": [1, 34], "iscanupo_avail": 1, "computecanupo": 1, "classifi": [1, 25], "classifierfilenam": 1, "qstring": [1, 5, 15, 16, 18, 19, 20, 21, 22, 24], "corepointcloud": 1, "coresourc": 1, "_canupo": 1, "core_cloud_sourc": [1, 25], "origin": [1, 6, 7, 9, 11, 15, 16, 18, 19, 20, 22, 25, 29, 34], "mscfilenam": 1, "confidencethreshold": 1, "generateadditionalsf": 1, "generateroughnesssf": 1, "maxthreadcount": [1, 2, 22, 34], "useactivesfforconfid": 1, "samplingdist": 1, "us": [1, 2, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 26, 27, 29, 30, 31, 32, 34], "an": [1, 2, 3, 7, 9, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33], "exist": [1, 2, 9, 14, 18, 22, 29, 31, 34], "string": [1, 5, 13, 14, 18, 20, 21, 22, 24, 31], "path": [1, 5, 22, 29, 30, 31, 32, 34], "file": [1, 5, 13, 16, 18, 19, 21, 22, 25, 26, 29, 30], "core": [1, 5], "pointcloud": [1, 2, 9, 18, 20, 31, 32, 34], "other": [1, 3, 15, 16, 17, 18, 19, 23, 25, 29, 34], "sourc": [1, 14, 18, 19, 20, 22, 34], "subsampl": [1, 23, 25], "msc_file": [1, 25], "msc": 1, "threshold": [1, 18], "classif": [1, 22], "number": [1, 2, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 29, 32, 34], "thread": [1, 2, 11, 18, 19, 22, 34], "parallel": [1, 11, 18, 19], "mean": [1, 2, 9, 14, 15, 17, 22, 23, 24, 26, 29, 31, 34], "automat": [1, 2, 3, 9, 12, 14, 16, 18, 22, 23, 24, 29, 30, 31, 32, 34], "activ": [1, 2, 18, 22, 30], "scalarfield": [1, 2, 10, 13, 14, 15, 16, 18, 19, 22, 25, 29, 34], "confid": [1, 34], "case": [1, 2, 14, 16, 17, 18, 29, 31, 33, 34], "whether": [1, 2, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27], "success": [1, 3, 5, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 33], "class": [1, 2, 3, 6, 8, 9, 11, 12, 13, 15, 17, 20, 21, 22, 23, 25, 29, 34], "member": [1, 3, 6, 8, 11, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24], "__init__": [1, 2, 3, 6, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "self": [1, 2, 3, 6, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "properti": [1, 2, 3, 6, 8, 11, 12, 13, 16, 17, 18, 20, 21, 22, 23, 24], "name": [1, 2, 3, 6, 8, 11, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 31, 34], "distancecomputationtool": [2, 25, 34], "base": [2, 3, 9, 12, 15, 17, 20, 21, 22, 23, 24, 25, 29, 34], "pybind11_object": [2, 3, 14, 16, 17, 18, 20, 23, 24], "sever": [2, 3, 16, 17, 18, 22, 23, 25, 29], "entiti": [2, 15, 16, 18, 19, 22, 25, 29], "algorithm": [2, 3, 4, 11, 12, 17, 19, 22, 23, 24, 25], "etc": [2, 3, 17, 18, 20, 23], "arg": [2, 3, 11, 14, 15, 16, 17, 18, 19, 20, 23, 24], "kwarg": [2, 3, 11, 14, 15, 16, 17, 18, 19, 20, 23, 24], "static": [2, 3, 11, 13, 15, 16, 17, 20, 23, 24, 29, 34], "computeapproxcloud2clouddist": [2, 34], "comparedcloud": 2, "genericindexedcloudpersist": [2, 3, 15, 18, 19, 20, 23, 25], "referencecloud": [2, 17, 18, 19, 23, 25, 29, 34], "octreelevel": [2, 4, 18, 22, 23, 34], "7": [2, 3, 4, 8, 13, 22, 29, 34], "maxsearchdist": [2, 17, 34], "progresscb": [2, 3, 18, 23, 29], "genericprogresscallback": [2, 3, 16, 18, 23], "compoctre": 2, "dgmoctre": [2, 3, 17, 18, 19, 23, 25], "refoctre": 2, "approxim": [2, 22, 23, 34], "between": [2, 3, 7, 13, 14, 17, 18, 19, 20, 21, 22, 25, 29], "two": [2, 5, 6, 7, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 32], "thi": [2, 3, 7, 11, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 34], "method": [2, 3, 9, 11, 13, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 29, 31, 32, 34], "exact": [2, 23, 34], "transform": [2, 9, 18, 21, 22, 25, 26, 34], "real": [2, 18], "therefor": [2, 34], "greater": [2, 17, 18, 24, 34], "octre": [2, 3, 4, 11, 16, 18, 19, 22, 23, 25], "level": [2, 4, 11, 17, 18, 22, 23, 25, 26, 29, 31], "determin": [2, 17, 22, 23, 34], "grid": [2, 17, 22, 34], "step": [2, 9, 13, 20, 22, 23, 34], "finer": 2, "result": [2, 9, 10, 11, 12, 17, 18, 21, 22, 23, 29, 34], "more": [2, 11, 16, 17, 18, 19, 22, 27, 29, 31, 34], "memori": [2, 14, 18, 19, 25, 29, 32], "time": [2, 14, 16, 17, 18, 19, 20, 29, 31, 34], "need": [2, 11, 17, 22, 24, 26, 29, 30, 31, 34], "compar": [2, 5, 17, 23, 34], "refer": [2, 9, 15, 16, 17, 18, 19, 22, 23, 29, 34], "search": [2, 17, 25, 29], "client": [2, 3, 23], "applic": [2, 3, 22, 23], "get": [2, 3, 5, 9, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 29, 34], "some": [2, 3, 9, 18, 22, 23, 26, 29, 34], "notif": [2, 3, 23], "process": [2, 3, 11, 17, 22, 23, 25, 29], "progress": [2, 3, 16, 17, 23], "through": [2, 3, 17, 23, 29], "callback": [2, 3, 23], "mechan": [2, 3, 18, 19, 21, 23], "yet": [2, 17, 18, 19, 22, 23, 26, 33], "pre": [2, 18, 19], "warn": [2, 7, 14, 15, 16, 17, 18, 19, 20, 22, 29, 31, 32], "both": [2, 17], "have": [2, 17, 18, 22, 23, 27, 29, 32, 34], "same": [2, 14, 17, 18, 19, 20, 22, 23, 24, 29, 31, 32, 34], "cubic": [2, 17], "bound": [2, 7, 11, 12, 17, 18, 19, 22, 25, 29], "box": [2, 7, 12, 17, 18, 19, 22, 25], "statist": [2, 16, 22, 23, 25, 29], "min": [2, 3, 14, 17, 18, 20, 22, 29, 32, 34], "max": [2, 14, 15, 16, 17, 18, 20, 22, 29, 32, 34], "varianc": [2, 14, 29, 34], "error": [2, 3, 15, 18, 22, 23, 34], "empti": [2, 5, 17, 18, 19, 22, 31, 34], "problem": [2, 4, 13, 22], "computeapproxcloud2meshdist": [2, 34], "arg0": [2, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24], "arg1": [2, 5, 6, 12, 13, 14, 16, 17, 18, 19, 20, 22, 24], "genericindexedmesh": [2, 16, 25], "computecloud2clouddist": [2, 34], "param": [2, 5, 7, 12, 17, 22, 29, 34], "cloud2clouddistancescomputationparam": [2, 25, 34], "nearest": [2, 17, 18, 22, 29], "neighbour": [2, 7, 17, 22, 23, 29], "formerli": 2, "hausdorff": 2, "main": [2, 7, 16, 18, 20, 34], "its": [2, 14, 16, 17, 18, 19, 20, 21, 22, 24, 29, 34], "differ": [2, 5, 22, 23, 29, 30, 34], "version": [2, 5, 11, 17, 18, 19, 20, 22, 27, 29, 33], "without": [2, 4, 16, 18, 22, 24, 25, 26, 27, 29, 32, 34], "local": [2, 18, 19, 22, 23, 34], "model": [2, 5, 22, 34], "ar": [2, 4, 5, 6, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 29, 30, 31, 32, 33, 34], "describ": [2, 34], "daniel": [2, 18], "girardeau": [2, 18], "montaut": [2, 18], "": [2, 16, 17, 18, 21, 22, 24, 26, 29, 31, 34], "phd": [2, 18], "manuscript": [2, 18], "chapter": [2, 18], "section": [2, 7, 18, 19, 20, 22, 25], "It": [2, 7, 14, 15, 16, 17, 18, 19, 23, 24, 29, 30, 32, 34], "wai": [2, 17, 18, 21, 23, 24, 27, 29, 32, 34], "directli": [2, 17, 29], "dens": 2, "global": [2, 9, 14, 18, 19, 22, 29, 34], "close": [2, 10, 16, 17, 19, 22, 23, 29, 34], "current": [2, 17, 18, 19, 22, 24, 29, 34], "scalar": [2, 3, 5, 13, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26], "field": [2, 3, 5, 13, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26], "should": [2, 9, 11, 12, 14, 17, 18, 19, 20, 22, 23, 27, 29, 30, 32, 34], "enabl": [2, 11, 12, 18, 19, 23, 34], "By": [2, 12, 17, 20, 22, 29, 31, 34], "reset": [2, 17], "nan_valu": [2, 14], "one": [2, 7, 14, 16, 18, 19, 20, 22, 23, 24, 25, 29, 31, 32], "avoid": [2, 22, 23, 25, 31], "defin": [2, 7, 9, 12, 18, 19, 20, 22, 24, 29, 33, 34], "cloud2clouddistancecomputationparam": 2, "resetformerdist": 2, "But": 2, "even": [2, 17, 18, 27], "onli": [2, 3, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 26, 30, 31, 33, 34], "abov": [2, 20, 22, 26, 29, 31, 32, 34], "remain": [2, 18, 34], "untouch": 2, "compat": [2, 18, 19], "closest": [2, 17, 23, 34], "set": [2, 3, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 29, 31, 32, 34], "cpset": 2, "rel": [2, 17, 18, 19, 20, 21, 23, 34], "ok": [2, 15, 16, 18, 19, 22, 26], "neg": [2, 17, 22, 24, 34], "otherwis": [2, 15, 16, 18, 19, 22, 24, 27, 29, 34], "computecloud2meshdist": [2, 34], "cloud2meshdistancescomputationparam": [2, 25, 34], "cloudoctre": 2, "inspir": 2, "metro": 2, "cignoni": 2, "et": [2, 12, 22], "al": [2, 12, 22], "gener": [2, 17, 18, 19, 21, 22, 25, 27, 31, 32], "triangular": [2, 16, 29, 31, 34], "triangl": [2, 16, 22, 25, 29, 34], "equal": [2, 7, 16, 18, 19, 22], "union": [2, 6, 25], "bb": [2, 29], "determinebestoctreelevel": [2, 34], "compcloud": 2, "refmesh": 2, "refcloud": [2, 9, 29, 34], "best": [2, 16, 17, 18, 22, 23, 31, 34], "calcul": [2, 9, 22, 34], "c2m": [2, 25], "c2c": [2, 25], "approx": 2, "present": [2, 5, 9, 16, 34], "remov": [2, 4, 16, 17, 18, 22, 23, 25, 29], "befor": [2, 5, 14, 17, 18, 22, 29, 30, 32], "call": [2, 9, 14, 17, 18, 19, 26, 30, 34], "provid": [2, 7, 10, 11, 18, 20, 21, 22, 24, 26, 27, 29, 30, 34], "contain": [2, 17, 18, 19, 21, 22, 24, 25, 27, 29, 34], "store": [2, 17, 18, 20, 21, 29, 31, 32, 33, 34], "correspond": [2, 5, 7, 11, 12, 16, 17, 18, 20, 22, 23, 29, 32, 34], "Not": [2, 20], "constructor": [2, 9, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 29], "getsplitdist": 2, "split": [2, 22, 25], "per": [2, 16, 17, 19, 22, 29, 31, 32, 34], "dimens": [2, 7, 12, 13, 14, 16, 17, 18, 20, 22, 29, 34], "x": [2, 7, 11, 16, 17, 18, 19, 20, 22, 25, 26, 29, 31, 32, 34], "y": [2, 7, 9, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 29, 31, 32, 34], "z": [2, 7, 10, 16, 17, 18, 19, 20, 21, 22, 25, 26, 29, 31, 32, 34], "knnforlocalmodel": 2, "For": [2, 7, 11, 12, 17, 24, 29, 31, 32, 33, 34], "e": [2, 3, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 34], "ignor": [2, 11, 15, 16, 17, 18, 22, 24], "localmodel": 2, "no_model": [2, 22, 25], "usesphericalsearchforlocalmodel": 2, "true": [2, 5, 9, 12, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 29, 32, 34], "3d": [2, 4, 7, 16, 18, 19, 20, 22, 25, 29, 31], "cc_local_model_typ": 2, "won": 2, "t": [2, 4, 15, 16, 17, 18, 19, 20, 22, 29, 31, 34], "deactiv": [2, 22], "multithread": 2, "multi": [2, 22], "singl": [2, 20, 24, 34], "mode": [2, 20, 22, 26, 31, 34], "If": [2, 5, 11, 16, 18, 19, 20, 22, 24, 27, 29, 30, 31, 32, 34], "forc": [2, 16, 29, 34], "subdivis": [2, 16, 17, 23, 34], "witch": [2, 10], "todo": [2, 7, 18, 19], "try": [2, 22, 34], "guess": [2, 5, 34], "radiusforlocalmodel": 2, "radiu": [2, 9, 12, 17, 18, 20, 22, 23, 25, 29, 34], "keep": [2, 7, 14, 22, 26, 29, 31, 34], "ani": [2, 14, 15, 17, 18, 22, 23, 27, 29, 31], "previou": [2, 17, 22, 25, 29, 31, 34], "them": [2, 5, 18, 22, 29], "again": 2, "reuseexistinglocalmodel": 2, "much": [2, 34], "faster": 2, "less": [2, 22, 23, 24], "control": [2, 7, 14], "setsplitdist": [2, 34], "To": [2, 5, 17, 18, 29, 31, 34], "fill": [2, 13, 14, 17, 18, 29, 32, 34], "size": [2, 9, 14, 16, 17, 18, 19, 22, 29, 32, 34], "creat": [2, 4, 13, 15, 16, 18, 20, 22, 24, 25], "These": [2, 24, 31], "associ": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 29, 32, 34], "explicit": [2, 25, 29, 34], "later": [2, 18, 27], "fix": 2, "neighbor": [2, 9, 12, 18, 22, 23, 34], "sphere": [2, 7, 10, 12, 17, 25, 34], "flipnorm": 2, "normal": [2, 7, 9, 10, 12, 15, 16, 18, 19, 20, 22, 25, 34], "direct": [2, 7, 15, 16, 17, 18, 19, 20, 22, 27, 29, 34], "order": [2, 9, 16, 17, 18, 19, 20, 22, 29, 32, 34], "indirect": [2, 27], "signeddist": 2, "sign": [2, 17, 22, 34], "usedistancemap": 2, "map": [2, 5, 13, 34], "acceler": [2, 10, 17], "incompat": 2, "geometricalanalysistool": [3, 25, 29], "characterist": [3, 22], "curvatur": [3, 9, 22, 26, 34], "densiti": [3, 9, 11, 16, 19, 22, 25, 29, 34], "flagduplicatepoint": [3, 29], "thecloud": 3, "mindistancebetweenpoint": 3, "220446049250313e": 3, "16": [3, 20, 22, 24, 29], "inputoctre": [3, 23], "errorcod": [3, 25, 29], "flag": [3, 11, 15, 16, 18, 19, 32], "duplic": [3, 17, 18, 29], "requir": [3, 4, 5, 12, 18, 22, 29, 30, 34], "output": [3, 5, 11, 16, 17, 18, 22], "distanc": [3, 7, 12, 13, 17, 18, 19, 22, 23, 25], "c": [3, 11, 14, 15, 16, 18, 19, 20, 22, 24, 26, 29, 30, 32, 34], "std": 3, "numeric_limit": 3, "epsilon": [3, 12, 25, 34], "input": [3, 4, 11, 15, 17, 18, 20, 22, 23, 29, 34], "code": [3, 11, 17, 24, 27, 29, 31, 32, 33, 34], "density_knn": [3, 22], "density_2d": 3, "density_3d": 3, "noerror": [3, 29], "invalidinput": 3, "notenoughpoint": 3, "octreecomputationfail": 3, "processfail": 3, "unhandledcharacterist": 3, "notenoughmemori": 3, "processcancelledbyus": 3, "6": [3, 5, 8, 13, 18, 20, 22, 23, 29, 34], "4": [3, 7, 8, 9, 13, 18, 20, 22, 24, 29, 32, 33, 34], "ispluginhpr": [4, 22, 25, 34], "ishpr_avail": 4, "computehpr": [4, 25, 34], "viewpoint": [4, 34], "vector3tpl": [4, 15, 16, 17, 18, 19, 20, 22], "hidden": [4, 25], "new": [4, 6, 12, 13, 14, 16, 18, 20, 21, 22, 23, 24, 29, 32, 34], "coordin": [4, 15, 16, 17, 18, 19, 22, 25, 26, 29, 31, 34], "With": [4, 29, 31, 34], "cloudcompar": [4, 20, 22, 26, 27, 29, 30, 31, 32, 33], "gui": [4, 5, 15, 16, 18, 19, 22, 29, 31, 34], "deduc": [4, 22], "view": [4, 20, 22, 29, 34], "ccvector3d": [4, 22], "chang": [4, 17, 18, 22, 24, 29, 31, 33], "inittrace_hpr": [4, 25], "ispluginm3c2": [5, 22, 25, 34], "ism3c2_avail": 5, "computem3c2": [5, 25, 34], "paramfilenam": [5, 34], "precisionmap": 5, "ccscalarfield": [5, 13, 18, 25], "scale": [5, 16, 18, 19, 21, 22, 29, 34], "multiscal": 5, "comparison": [5, 25], "regroup": [5, 20, 22, 29, 34], "text": [5, 13, 22, 34], "m3c2guessparamstofil": [5, 25, 34], "first": [5, 6, 7, 9, 14, 16, 17, 18, 19, 20, 22, 25, 31, 34], "uncertainti": [5, 21, 29], "precis": [5, 20, 22, 24, 29, 31, 34], "compon": [5, 18, 20, 22, 24, 25, 31, 32], "second": [5, 6, 7, 14, 16, 17, 18, 22, 34], "also": [5, 21, 22, 29, 32, 34], "take": [5, 31, 33, 34], "account": [5, 18, 22, 31], "unit": [5, 19, 20], "when": [5, 15, 16, 17, 18, 19, 22, 24, 27, 29, 31, 34], "given": [5, 11, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 26, 29, 31, 32, 34], "supersed": [5, 34], "three": [5, 24, 31, 34], "3rd": [5, 20], "full": 5, "inittrace_m3c2": [5, 25], "arg2": [5, 6, 13, 14, 16, 17, 18, 19, 20, 22, 24], "compute_m3c2": 5, "save": [5, 12, 15, 16, 18, 19, 22, 25, 26, 29, 32, 34], "fastmod": 5, "dialog": [5, 16, 22, 31], "button": 5, "after": [5, 7, 9, 14, 18, 20, 22, 30, 34], "ispluginmeshboolean": [6, 22, 25, 34], "ismeshboolean_avail": 6, "computemeshboolean": [6, 25, 34], "csg_oper": [6, 25, 34], "intersect": [6, 25, 34], "diff": [6, 25], "sym_diff": [6, 25], "_meshboolean": 6, "ccmesh": [6, 11, 13, 15, 20, 22, 25, 29, 34], "boolean": [6, 16, 18, 22, 25, 29, 32], "oper": [6, 18, 20, 22, 24, 25, 26], "modifi": [6, 14, 16, 18, 25, 27, 29, 34], "built": [6, 7, 22, 29, 30, 34], "mesha": 6, "meshb": 6, "inittrace_meshboolean": [6, 25], "minmimalboundingbox": 7, "pure": [7, 20, 34], "tool": [7, 9, 20, 22, 25, 29, 34], "exampl": [7, 17, 24, 25, 29, 31, 33, 34], "extens": [7, 22, 31, 33, 34], "findrot": [7, 25, 34], "find": [7, 17, 18, 25, 29], "minim": [7, 12, 14, 17, 34], "orient": [7, 18, 22, 25, 29, 34], "along": [7, 13, 17, 18, 19, 20, 22, 27, 29, 34], "ax": [7, 15, 17, 20, 21, 29, 34], "rotat": [7, 13, 21, 22, 25, 29, 34], "proven": [7, 34], "solut": [7, 31, 34], "meet": [7, 34], "minimum": [7, 11, 12, 13, 18, 22, 29, 34], "perform": [7, 17, 18, 23, 34], "robust": [7, 34], "certainli": [7, 34], "improv": [7, 22, 34], "dist2": [7, 25], "b": [7, 15, 17, 18, 20, 22, 23, 24, 29, 32, 34], "euclidian": 7, "squar": [7, 9, 12, 15, 16, 17, 22], "ox": [7, 13, 16, 18, 19, 22, 34], "oi": [7, 13, 16, 18, 19, 22, 34], "oz": [7, 13, 16, 18, 19, 22, 34], "suppos": [7, 30], "center": [7, 15, 17, 18, 20, 21, 22, 23, 29, 34], "add": [7, 14, 15, 16, 18, 19, 21, 22, 29, 32, 34], "accuraci": [7, 29], "invers": [7, 20, 22, 29, 34], "polylin": [7, 15, 16, 18, 20, 22, 25, 33], "optim": [7, 17, 25], "tupl": [7, 12, 14, 15, 16, 17, 18, 19, 20, 22, 24, 29, 31, 34], "object": [7, 14, 15, 16, 18, 19, 21, 22, 23, 24, 29, 31, 34], "isocahedron": [7, 25], "12": [7, 8, 13, 22, 29, 34], "node": [7, 11, 16, 22, 25, 29, 34], "distribut": [7, 27], "we": [7, 11, 13, 17, 24, 29, 30, 31, 32, 34], "normalis": 7, "dictionari": [7, 18, 29], "indic": [7, 14, 17, 18, 29], "index": [7, 14, 15, 16, 17, 18, 19, 20, 22, 25, 29], "cl": [7, 32, 34], "optimis": 7, "minimis": 7, "zinv": [7, 25], "i1": 7, "i2": 7, "i3": 7, "isonod": 7, "maxim": [7, 14, 16, 17], "adjust": [7, 29, 34], "start": [7, 17, 30, 31, 34], "geodes": 7, "opposit": [7, 22], "geomfeatur": [8, 22, 25], "eigenvaluessum": 8, "omnivari": 8, "eigenentropi": 8, "anisotropi": 8, "planar": 8, "linear": [8, 11, 18], "pca1": [8, 22], "pca2": [8, 22], "surfacevari": 8, "spheric": [8, 18, 34], "vertic": [8, 11, 15, 16, 19, 22, 29, 34], "eigenvalue1": 8, "eigenvalue2": 8, "eigenvalue3": 8, "13": [8, 13, 22], "14": [8, 13, 22, 29], "8": [8, 11, 13, 18, 22, 24, 29, 34], "10": [8, 9, 13, 22, 29, 31, 34], "9": [8, 11, 13, 22, 29, 34], "11": [8, 13, 22, 34], "implement": [9, 18, 21, 25], "librari": [9, 22, 30, 34], "http": [9, 11, 27, 29, 31, 34], "org": [9, 27, 34], "ispluginpcl": [9, 34], "ispcl_avail": 9, "fgr": 9, "fastglobalregistrationfilt": [9, 25, 34], "setparamet": [9, 25, 34], "q": 9, "zhou": 9, "j": 9, "park": 9, "v": [9, 18, 24, 29, 34], "koltun": 9, "fast": [9, 18, 29, 34], "registr": [9, 22, 25], "eccv": 9, "2016": [9, 22], "github": [9, 26, 30], "com": 9, "isl": 9, "fastglobalregistr": 9, "_pcl": 9, "move": [9, 29], "copi": [9, 14, 16, 17, 18, 24, 25, 26, 27, 32, 34], "getautoradiu": [9, 25], "propos": [9, 12, 22, 26, 31], "gettransform": [9, 20, 25, 29, 34], "ccglmatrix": [9, 18, 20, 21, 22, 25, 29, 34], "matrix": [9, 21, 25, 29], "aligncloud": 9, "align": [9, 16, 22, 25, 34], "estim": [9, 11, 22, 29], "normalestim": [9, 25], "A": [9, 13, 14, 16, 17, 18, 19, 20, 23, 24, 27, 29, 34], "useknn": [9, 23], "ovewritecurvatur": 9, "knn": [9, 22, 23, 25], "constant": [9, 23, 34], "instead": [9, 17, 18, 19, 23, 34], "overwrit": [9, 14, 22], "mlssmoothingupsampl": [9, 25], "smooth": [9, 16, 19, 29], "polynomi": 9, "reconstruct": [9, 11, 25], "getoutputcloud": [9, 25], "computenorm": [9, 22, 25, 29, 32, 34], "searchradiu": 9, "01": [9, 12, 26, 34], "polyfit": 9, "sqrgauss": 9, "0001": 9, "upsamplemethod": 9, "upsampingradiu": 9, "upsamplingstep": 9, "steppointdens": 9, "dilationvoxels": 9, "dilationiter": 9, "fit": [9, 12, 16, 20, 22, 23, 25, 27, 29], "polynom": 9, "gauss": 9, "sample_local_plan": 9, "random_uniform_dens": 9, "voxel_grid_dil": 9, "upsampl": 9, "dilat": 9, "voxel": 9, "inittrace_pcl": [9, 25], "ispluginpcv": [10, 22, 25, 34], "ispcv_avail": 10, "computeshadevi": [10, 25, 34], "cloudwithnorm": 10, "raycount": 10, "256": [10, 13, 24, 34], "resolut": [10, 12], "1024": 10, "is360": 10, "isclosedmesh": 10, "ambient": 10, "occlus": [10, 25], "shadevi": [10, 25], "either": [10, 15, 16, 20, 22, 24, 27, 29, 34], "sampl": [10, 11, 12, 16, 19, 25, 29], "upper": [10, 11, 18, 22], "hemispher": [10, 34], "render": [10, 18, 22, 25], "context": 10, "whole": [10, 18, 22, 34], "inittrace_pcv": [10, 25], "ispluginpoissonrecon": 11, "ispoissonrecon_avail": 11, "pr": [11, 25, 34], "poissonreconstruct": [11, 25, 34], "depth": [11, 17, 21, 31], "finestcellwidth": 11, "samplespernod": 11, "withcolor": 11, "pointweight": 11, "linearfit": 11, "boundari": [11, 15, 17, 18, 22], "_poissonrecon": 11, "boundarytyp": [11, 25], "neumann": [11, 25], "build": [11, 20, 22, 29, 34], "wrapper": 11, "poisson": [11, 25], "surfac": [11, 13, 15, 16, 20, 22, 23, 25, 29], "m": [11, 20, 24], "kazhdan": 11, "bolitho": 11, "h": [11, 18, 24, 29, 34], "hopp": 11, "symposium": 11, "geometri": [11, 34], "june": 11, "2006": 11, "page": 11, "61": 11, "70": 11, "www": [11, 27, 29, 31, 34], "jhu": 11, "edu": 11, "misha": 11, "tree": [11, 18, 22, 29], "run": 11, "d": [11, 15, 20, 22, 29, 32, 34], "solv": 11, "note": [11, 18, 29, 31], "sinc": [11, 24], "reconstructor": 11, "adapt": [11, 20, 34], "specifi": [11, 17, 18, 22, 23, 24, 34], "target": [11, 29], "width": [11, 20, 22], "finest": 11, "cell": [11, 17, 22, 23, 34], "fall": [11, 16, 17, 18], "within": [11, 22, 29], "construct": [11, 17, 20, 24, 34], "nois": [11, 23, 25], "free": [11, 25, 26, 27, 29], "small": [11, 22, 34], "rang": [11, 18, 19, 24, 29, 34], "noisi": 11, "larger": [11, 20], "15": [11, 22, 34], "20": [11, 16, 29, 34], "mai": [11, 12, 15, 16, 17, 18, 19, 22, 24, 29], "smoother": 11, "reduc": 11, "tell": [11, 34], "read": [11, 25, 26, 29, 30, 31, 34], "color": [11, 12, 15, 16, 18, 19, 22, 25, 34], "extrapol": 11, "those": [11, 18], "written": 11, "out": [11, 17, 18, 22, 27, 34], "interpol": [11, 13, 18, 20, 22, 25, 29], "formul": 11, "screen": 11, "equat": [11, 15, 20, 29, 34], "unscreen": 11, "obtain": [11, 16, 22, 29, 34], "across": 11, "solver": 11, "ha": [11, 15, 16, 17, 18, 19, 23, 24, 31, 32, 34], "posit": [11, 17, 18, 19, 20, 21, 22, 29, 34], "iso": [11, 22], "poissonreconlib": 11, "finit": 11, "element": [11, 14, 18, 19, 20], "fail": [11, 18], "dirichlet": [11, 25], "inittrace_poissonrecon": [11, 25], "ispluginransac_sd": [12, 22, 25, 34], "isransac_sd_avail": 12, "ransacparam": [12, 25, 34], "computeransac_sd": [12, 25, 34], "_ransac_sd": 12, "allowfit": [12, 25], "least": [12, 16, 18, 22], "found": [12, 17, 22, 29, 31, 34], "shape": [12, 16, 18, 32, 34], "allowsimplif": [12, 25], "attempt": 12, "simplifi": [12, 20], "Will": [12, 22], "convert": [12, 18, 20, 21, 24, 29, 32, 34], "toru": [12, 25, 34], "cone": [12, 25, 34], "cylind": [12, 17, 25, 34], "simpler": 12, "instanc": [12, 14, 15, 16, 17, 18, 19, 21, 22, 29, 31, 32, 34], "plane": [12, 15, 16, 18, 22, 23, 25, 34], "bitmapepsilon": [12, 25, 34], "averag": [12, 13, 17, 22, 23, 29, 34], "data": [12, 14, 16, 17, 18, 20, 22, 24, 26, 27, 29, 31, 32, 33, 34], "001": [12, 29], "createcloudfromleftoverpoint": [12, 25], "leftov": 12, "ideal": 12, "005": 12, "getprimen": [12, 25], "ransac_primitive_typ": 12, "check": [12, 14, 15, 16, 18, 19, 22, 29, 32, 34], "primit": [12, 22, 25, 31], "rpt_plane": 12, "rpt_sphere": 12, "rpt_cylind": 12, "rpt_cone": 12, "rpt_toru": 12, "rpt": 12, "maxconeangle_deg": [12, 25], "angl": [12, 13, 18, 20, 21, 29], "infin": 12, "maxconelength": [12, 25], "length": [12, 15, 16, 17, 19, 22], "maxconeradiu": [12, 25], "maxcylinderlength": [12, 25], "maxcylinderradiu": [12, 25], "maxnormaldev_deg": [12, 25], "deviat": 12, "vector": [12, 14, 17, 18, 20, 22, 29], "degre": [12, 13, 18, 21, 29], "25": [12, 29, 34], "maxsphereradiu": [12, 25], "maxtorusmajorradiu": [12, 25], "tore": 12, "major": [12, 20, 29], "maxtorusminorradiu": [12, 25], "minor": 12, "mincylinderradiu": [12, 25], "minsphereradiu": [12, 25], "mintorusmajorradiu": [12, 25], "mintorusminorradiu": [12, 25], "optimizeforcloud": [12, 25, 34], "maxdim": 12, "analyz": 12, "probabl": [12, 25], "better": [12, 22, 29], "candid": [12, 17], "wa": [12, 17, 24, 34], "overlook": 12, "dure": [12, 17, 22, 32], "lower": [12, 17, 18, 22], "randomcolor": [12, 22, 25, 34], "random": [12, 22, 23, 32, 34], "setprimen": [12, 25, 34], "isen": 12, "supportpoint": [12, 25], "ransac": [12, 25], "detect": [12, 22, 31, 34], "simpl": [12, 14, 18, 19, 20, 22, 23, 29, 34], "interfac": [12, 18, 21, 22, 26], "ruwen": 12, "schnabel": 12, "bonn": 12, "univers": 12, "effici": [12, 18, 20, 29], "inittrace_ransac_sd": [12, 25], "ispluginsra": [13, 34], "issra_avail": 13, "loadprofil": [13, 25, 34], "qsra": [13, 25, 34], "docomputeradialdist": [13, 25, 34], "_sra": 13, "ccpolylin": [13, 15, 16, 18, 22, 25, 29, 34], "radial": [13, 34], "revolut": [13, 25], "profil": [13, 22, 25], "ccpoylin": 13, "load": [13, 16, 18, 19, 22, 25, 30, 34], "str": [13, 14, 15, 16, 18, 19, 20, 22], "dedic": 13, "format": [13, 15, 16, 18, 19, 21, 22, 24, 25, 29, 34], "cloudcomparegui": 13, "filenam": [13, 22, 31, 33], "give": [13, 17, 18, 19, 20, 22, 23, 29, 32, 34], "axisdim": 13, "axi": [13, 16, 17, 18, 20, 29, 34], "isabsoluteheightvalu": 13, "exportmapascloud": [13, 25, 34], "sf": [13, 18, 23, 29, 32, 34], "angstep_deg": 13, "ystep": 13, "ymin": [13, 17, 18, 19], "ymax": [13, 17, 18, 19], "iscon": 13, "ccw": 13, "fillst": 13, "fillstrategytyp": [13, 25], "fill_strat_avg_dist": [13, 25], "fillopt": 13, "emptycellfillopt": [13, 22, 25, 34], "fill_interpol": [13, 25], "baseradiu": [13, 34], "export": [13, 18, 22, 29, 32, 34], "axial": 13, "project": [13, 16, 17, 22, 26, 29, 31, 34], "conic": 13, "cylindr": 13, "counter": [13, 15, 16, 18, 19], "clockwis": 13, "strategi": [13, 16, 18, 19], "angular": [13, 20], "pi": [13, 20, 22, 29, 32, 34], "exportmapasmesh": [13, 25, 34], "colscal": [13, 34], "default_scal": [13, 25, 34], "bgyr": [13, 25], "colscalestep": 13, "colorscal": 13, "inittrace_sra": [13, 25], "fill_strat_min_dist": [13, 25], "fill_strat_max_dist": [13, 25], "invalid_strategy_typ": [13, 25], "255": [13, 18, 22, 24, 34], "leave_empti": [13, 22, 25], "fill_with_zero": [13, 25], "grei": [13, 18, 22, 25], "bwr": [13, 25], "ry": [13, 25], "rw": [13, 25], "abs_norm_grei": [13, 25], "hsv_360_deg": [13, 25], "vertex_qu": [13, 25], "dip_bryw": [13, 25], "dip_dir_repeat": [13, 25], "viridi": [13, 25], "brown_yellow": [13, 25], "yellow_brown": [13, 25, 34], "topo_landserf": [13, 25], "high_contrast": [13, 25], "all": [14, 16, 17, 18, 19, 20, 22, 23, 24, 26, 27, 29, 30, 31, 33, 34], "inherit": [14, 16, 18, 19], "here": [14, 16, 17, 18, 19, 22, 26, 29, 30, 31, 34], "conveni": [14, 16, 17, 18, 19, 24, 29], "most": [14, 16, 18, 19, 22, 29, 33], "rather": [14, 16, 18, 19], "than": [14, 16, 17, 18, 19, 22, 23, 24, 29, 34], "displai": [14, 18, 22, 29, 34], "relat": [14, 24], "extend": 14, "cccorelib": [14, 16, 18], "addel": 14, "end": [14, 20, 34], "computemeanandvari": [14, 26, 29], "computeminandmax": [14, 29, 32], "getmin": [14, 29], "getmax": [14, 26, 29, 32, 34], "numpi": [14, 16, 18, 22, 25, 26, 29], "No": [14, 16, 18, 20, 22], "currents": 14, "arrai": [14, 16, 18, 19, 20, 25, 26, 29, 31, 34], "particular": [14, 22, 24, 27, 29], "flagvalueasinvalid": 14, "invalid": [14, 17, 18, 19, 22, 24, 34], "valid": [14, 17, 18, 22, 24, 31], "fromnparraycopi": [14, 26, 32, 34], "ndarrai": [14, 16, 18], "float32": [14, 18, 22, 32, 34], "pyscalartyp": 14, "nparrai": 14, "getglobalshift": [14, 16, 18, 19, 29, 31, 34], "shift": [14, 16, 18, 19, 22, 25, 29, 34], "la": [14, 22, 29, 31, 33], "gp": [14, 21, 29], "you": [14, 22, 26, 27, 29, 30, 31, 32, 34], "modif": [14, 18, 25, 32], "getnam": [14, 15, 16, 18, 19, 26, 29, 31, 34], "getvalu": [14, 29], "overload": [14, 17, 18, 19, 20, 24], "isserializ": 14, "reservesaf": 14, "reserv": [14, 18, 19, 27, 29, 32], "except": [14, 16, 18, 24, 29], "thrown": 14, "count": [14, 17, 19, 34], "resizesaf": 14, "resiz": [14, 18, 32], "setnam": [14, 15, 16, 18, 19, 29, 34], "uniqu": [14, 17, 18, 20], "your": [14, 29, 30, 31], "respons": 14, "ensur": [14, 16, 18], "setvalu": [14, 29], "swap": 14, "index1": 14, "index2": 14, "tonparrai": [14, 18, 26, 29, 32, 34], "wrap": [14, 16, 18, 29, 34], "doe": [14, 16, 18, 20, 24, 26, 33], "own": [14, 16, 18, 32, 34], "action": [14, 16, 18, 22, 34], "side": [14, 15, 16, 18, 19, 22], "referenc": [14, 16, 18, 22, 29, 34], "destruct": [14, 16, 18, 25], "tonparraycopi": [14, 18, 26, 32], "ownership": [14, 16, 18], "transfer": [14, 16, 18], "handl": [14, 15, 16, 18, 19, 20, 21], "garbag": [14, 16, 18, 34], "collector": [14, 16, 18, 34], "monodimension": 14, "repres": [14, 17, 20, 21, 23, 24, 29, 34], "facet": [15, 25, 31, 34], "composit": [15, 29], "2d1": 15, "contour": [15, 22, 25, 29], "maxedgelength": [15, 16, 22, 29, 34], "transferownership": 15, "planeequ": [15, 29], "convex": [15, 22, 29], "hull": 15, "concav": [15, 22, 29], "edg": [15, 16, 22, 29], "possibl": [15, 18, 19, 21, 26, 29, 32, 34], "kept": [15, 22, 23, 34], "custom": [15, 18, 22, 34], "cz": [15, 20, 29, 34], "occur": [15, 18, 31], "addchild": [15, 16, 18, 19, 29, 34], "child": [15, 16, 18, 19, 29], "dependencyflag": [15, 16, 18, 19, 29], "dependency_flag": [15, 16, 18, 19, 25, 29], "dp_none": [15, 16, 18, 19, 29], "insertindex": [15, 16, 18, 19, 29], "dp_parent_of_oth": [15, 16, 18, 19], "replac": [15, 16, 18, 19, 23, 24, 26, 34], "induc": [15, 16, 18, 19], "delet": [15, 16, 18, 19, 22, 29, 34], "correctli": [15, 16, 18, 19], "append": [15, 16, 18, 19, 34], "depend": [15, 16, 17, 18, 19, 22, 31], "insert": [15, 16, 17, 18, 19], "simpli": [15, 16, 18, 19, 23, 34], "children": [15, 16, 18, 19, 22], "clone": [15, 16, 18, 29, 34], "colorsshown": [15, 16, 18, 19, 29], "shown": [15, 16, 18, 19, 22, 29], "prepar": [15, 16, 18, 19], "state": [15, 16, 18, 19, 29], "bin": [15, 16, 18, 19, 22, 26, 29, 30, 31, 32, 33, 34], "reopen": [15, 16, 18, 19, 29], "predefin": [15, 16, 18, 19, 29], "countref": [15, 16, 18, 19], "do": [15, 16, 18, 19, 22, 29, 32, 34], "decref": [15, 16, 18, 19], "decrement": [15, 16, 18, 19], "getcent": [15, 20, 29], "getchild": [15, 16, 18, 19], "getchildrennumb": [15, 16, 18, 19], "getchildcountrecurs": [15, 16, 18, 19], "recurs": [15, 16, 18, 19], "getclassid": [15, 16, 18, 19, 29], "cc_type": [15, 16, 18, 19, 29, 34], "getcontour": [15, 29], "getcontourvertic": [15, 29], "getnorm": [15, 20, 29], "getoriginpoint": 15, "getpar": [15, 16, 18, 19], "parent": [15, 16, 18, 19, 21], "getplaneequ": [15, 29], "getpolygon": 15, "getrm": 15, "rm": [15, 22], "root": 15, "getsurfac": [15, 29], "hascolor": [15, 16, 18, 19, 29], "hasnorm": [15, 16, 18, 19, 29], "hasscalarfield": [15, 16, 18, 19, 29], "incref": [15, 16, 18, 19], "increment": [15, 16, 18, 19], "invertnorm": [15, 22, 25, 29], "invert": [15, 20, 22, 29, 32], "isa": [15, 16, 18, 19, 34], "iskindof": [15, 16, 18, 19], "kind": [15, 16, 17, 18, 19, 29, 34], "normalsshown": [15, 16, 18, 19, 29], "setcontour": 15, "setcontourvertic": 15, "setoriginpoint": 15, "setpolygon": 15, "sfshown": [15, 16, 18, 19, 29], "showcolor": [15, 16, 18, 19, 29, 34], "isshown": [15, 16, 18, 19], "show": [15, 16, 18, 19, 22], "shownorm": [15, 16, 18, 19, 29, 34], "showsf": [15, 16, 18, 19, 29], "ccgenericmesh": [16, 25], "indexestonparrai": [16, 32], "indexestonparray_copi": [16, 32], "cleartrinorm": [16, 29], "clonemesh": [16, 29], "featur": [16, 18, 22, 26, 29], "computemesharea": [16, 29], "area": [16, 20, 29], "sum": [16, 19, 29], "computemeshvolum": [16, 29], "volum": [16, 22, 25, 29], "insid": [16, 17, 18, 20, 23, 29, 34], "hole": 16, "non": [16, 17, 20, 22, 27, 31, 34], "manifold": 16, "issu": [16, 26], "stat": [16, 34], "edgescount": 16, "total": [16, 17, 18, 19, 29, 34], "edgesnotshar": 16, "share": [16, 29, 34], "edgessharedbytwo": 16, "exactli": 16, "edgessharedbymor": 16, "iswarn": 16, "edgeconnectivitystat": [16, 25], "crop2d": [16, 18, 34], "crop": [16, 18], "2d": [16, 18, 19, 25, 34], "poli": [16, 18, 29, 31, 33, 34], "orthodim": [16, 18], "flagverticesbytyp": 16, "border": [16, 17], "vertex": 16, "fliptriangl": [16, 29], "flip": 16, "revers": [16, 29], "getassociatedcloud": [16, 18, 19, 29, 32, 34], "ccgenericpointcloud": [16, 18, 22, 25], "getglobalscal": [16, 18, 19], "ccshiftedobject": [16, 18, 19, 25], "p": [16, 18, 19, 22], "typic": [16, 18, 19, 21], "gettrianglevertindex": [16, 29], "tuple3tpl": [16, 17, 20], "isshift": [16, 18, 19, 31], "laplaciansmooth": [16, 29], "nbiter": [16, 29], "factor": [16, 18, 24, 29], "laplacian": 16, "samplepoint": [16, 19, 29, 34], "densitybas": [16, 19, 29], "samplingparamet": [16, 19, 29], "withnorm": [16, 29], "withrgb": [16, 19], "withtextur": 16, "pdlg": 16, "progdiag": 16, "progressdialog": 16, "setglobalscal": [16, 18, 19], "inform": [16, 17, 18, 19, 21, 22, 29, 31, 34], "storag": [16, 18, 19], "setglobalshift": [16, 18, 19], "Such": [16, 18, 19, 27], "subdivid": [16, 29], "so": [16, 23, 34], "below": [16, 20, 31, 32, 34], "maxarea": 16, "afer": 16, "triangul": [16, 25, 29], "triangulation_typ": [16, 25, 29, 34], "updatenorm": 16, "dim": [16, 20, 29, 34], "delaunai": [16, 34], "5d": [16, 22, 25, 29], "xy": [16, 20], "connect": [16, 22, 25], "howev": [16, 18, 27], "topolog": 16, "aberr": [16, 18], "triangulatetwopolylin": 16, "p1": [16, 29], "p2": [16, 29], "projectiondir": 16, "ccvector3": [16, 20], "delaunay_2d_axis_align": [16, 29, 34], "delaunay_2d_best_ls_plan": [16, 34], "generatetruncatedcellcod": 17, "truncat": 17, "let": [17, 29, 31], "n": [17, 22, 23, 34], "express": [17, 18, 22, 27, 31], "integ": [17, 22, 24, 29, 32], "nth": 17, "cellpo": 17, "computecellcent": 17, "iscodetrunc": 17, "design": 17, "findbestlevelforagivencellnumb": 17, "match": [17, 18, 22, 34], "indicativenumberofcel": 17, "desir": [17, 23], "findbestlevelforagivenneighbourhoodsizeextract": [17, 29], "findbestlevelforagivenpopulationpercel": [17, 29], "popul": [17, 18], "indicativenumberofpointspercel": 17, "findnearestneighborsstartingfromcel": 17, "nearestneighbourssearchstruct": [17, 25], "advanc": 17, "form": [17, 18, 22, 29], "multipl": [17, 18, 34], "around": [17, 20, 22, 34], "queri": 17, "includ": [17, 24, 27], "detail": [17, 27, 31, 33], "nnss": 17, "getonlypointswithvalidscalar": 17, "findneighborsinaspherestartingfromcel": 17, "spatial": [17, 25], "buffer": [17, 21], "pointsinneighbourhood": 17, "actual": [17, 18], "k": [17, 24, 34], "sake": 17, "pack": 17, "sortvalu": 17, "sort": 17, "findpointneighbourhood": 17, "_querypoint": 17, "yk": 17, "maxnumberofneighbor": 17, "simplest": 17, "few": 17, "request": [17, 18, 19, 29, 31, 34], "repetit": 17, "ly": [17, 23, 34], "moreov": 17, "aren": 17, "refefencecloud": 17, "final": [17, 18, 22, 34], "neighborhood": [17, 18, 22, 23], "half": [17, 20], "farthest": [17, 22], "findthenearestneighborstartingfromcel": 17, "reach": [17, 22, 23, 34], "getboundingbox": [17, 18, 19, 29], "limit": [17, 18, 19, 22, 27], "xmin": [17, 18, 19], "zmin": [17, 18, 19], "xmax": [17, 18, 19], "zmax": [17, 18, 19], "getcellcod": 17, "ith": [17, 18, 19], "NOT": [17, 18, 19], "veri": [17, 18, 22, 23, 29, 34], "specif": [17, 18, 19, 23, 29, 34], "tabl": 17, "cellcod": 17, "truncatedcod": 17, "getcellcodesandindex": 17, "indexandcod": [17, 25], "thei": [17, 18, 21, 22, 34], "getcelldistancefrombord": 17, "outsid": [17, 18, 20, 29, 34], "consid": [17, 18, 19, 22, 29], "celldist": 17, "neighbourhoodlength": 17, "getcellindex": 17, "getcellnumb": 17, "getcellpo": 17, "getcells": 17, "As": [17, 18, 22, 26, 32, 34], "up": [17, 18, 20, 22, 29, 34], "max_octree_level": 17, "getmaxfillindex": 17, "highest": 17, "getminfillindex": 17, "lowest": 17, "getnumberofprojectedpoint": [17, 29], "getoctreemax": 17, "higher": [17, 24], "getoctreemin": 17, "getpointsinboxneighbourhood": [17, 29], "boxneighbourhood": [17, 25, 29], "pointdescriptor": [17, 25], "right": [17, 20, 22, 27, 32], "onc": [17, 18, 22, 29], "squaredistd": [17, 29], "getpointsincel": 17, "subset": 17, "clearoutputcloud": 17, "clear": [17, 20, 34], "subest": 17, "lie": 17, "getpointsincellbycellindex": 17, "cellindex": 17, "recogn": 17, "li": [17, 20], "assur": 17, "everi": 17, "next": [17, 18, 19, 34], "m_thepointsandtheircellcod": 17, "practic": 17, "quickest": 17, "access": [17, 22, 25, 26, 29, 34], "hard": 17, "know": [17, 24, 31], "what": [17, 18, 19, 29], "prior": 17, "getpointsincellswithsortedcellcod": 17, "arecodestrunc": 17, "ascend": 17, "getpointsincylindricalneighbourhood": [17, 29], "cylindricalneighbourhood": [17, 25, 29], "neighboursset": 17, "fact": [17, 20, 22, 23, 34], "extract": [17, 22, 25, 29], "getpointsincylindricalneighbourhoodprogress": 17, "progressivecylindricalneighbourhood": [17, 25], "approach": 17, "currenthalflength": 17, "increas": [17, 18, 19], "until": [17, 23, 34], "maxhalflength": [17, 29], "getpointsinsphericalneighbourhood": [17, 29], "spherecent": 17, "getthecellposwhichincludesthepoint": 17, "FOR": [17, 27], "THE": 17, "deepest": 17, "OF": 17, "thepoint": 17, "where": [17, 22, 29, 34], "getthecellposwhichincludesthepointinbbound": 17, "In": [17, 24, 27, 29, 31, 32, 34], "inbound": 17, "made": 17, "persist": [17, 18, 19], "pointindex": [17, 29], "celldescriptor": [17, 25], "could": 17, "would": 17, "thecod": 17, "indexcomp": 17, "smaller": [17, 18, 20, 22, 29, 34], "theindex": 17, "dir": 17, "onlypositivedir": 17, "look": [17, 20, 22, 29, 31, 33], "deriv": [17, 20, 29], "potentialcandid": 17, "potenti": 17, "pass": [17, 22], "enough": [17, 18, 19, 22], "too": [17, 34], "far": [17, 34], "prevmincornerpo": 17, "corner": [17, 20, 22, 34], "prevmaxcornerpo": 17, "particularli": 17, "about": [17, 18, 24], "Then": [17, 34], "updat": [17, 20, 21], "querypoint": 17, "minnumberofneighbor": 17, "guarante": 17, "cellcent": 17, "maxsearchsquaredistd": 17, "neihgbour": 17, "nn": 17, "stop": [17, 22], "hasn": 17, "disabl": [17, 22, 34], "behavior": [17, 18, 19, 22, 23], "someth": 17, "minimalcellssettovisit": 17, "been": [17, 18, 22, 23, 29, 31, 34], "alreadi": [17, 18, 22, 23], "visit": 17, "belong": [17, 29], "begin": [17, 18, 19], "alreadyvisitedneighbourhoods": 17, "27": 17, "neighbourh": 17, "thenearestpointindex": 17, "pointcloudtpl_ccgenericpointcloud_qstr": [18, 25], "compress": [18, 32, 33], "structur": [18, 19, 20, 22, 24, 25, 29, 34], "calibr": 18, "pictur": 18, "uniqueid": [18, 20], "4294967295": [18, 20], "instanti": 18, "ad": [18, 26, 29, 34], "partial": 18, "id": [18, 20, 29], "care": [18, 20, 34], "addpoint": [18, 29], "databas": 18, "noth": 18, "happen": 18, "addscalarfield": [18, 29, 32, 34], "regist": 18, "uniquenam": 18, "applyrigidtransform": [18, 29, 34], "gl": 18, "rotmat": 18, "rotcent": 18, "tran": [18, 21, 29], "ccglmatrixtpl": [18, 20], "changecolorlevel": [18, 29], "arg3": [18, 20, 24], "arg4": 18, "arg5": 18, "arg6": 18, "similarli": 18, "red": [18, 22, 24], "green": [18, 22, 24], "blue": [18, 22, 24], "in0": 18, "in1": 18, "out0": 18, "out1": 18, "onr": 18, "ongreen": 18, "onblu": 18, "clonethi": [18, 29, 34], "destcloud": [18, 22], "ignorechildren": 18, "visibl": 18, "destin": [18, 20, 22], "well": [18, 19], "r": [18, 20, 22, 24, 29, 31, 32, 34], "g": [18, 21, 22, 24, 29, 32], "multipli": [18, 24], "coeffici": [18, 20, 34], "white": 18, "alloc": [18, 19], "alpha": [18, 22, 24, 29, 32], "colorsfromnparray_copi": 18, "uint8": [18, 32], "nbpoint": [18, 29], "row": [18, 32], "unsign": [18, 24], "char": [18, 24], "colorstonparrai": [18, 32], "np": [18, 29, 32, 34], "dtype": [18, 32], "colorstonparraycopi": [18, 32], "computegravitycent": [18, 29], "graviti": [18, 23, 34], "computeoctre": [18, 29], "autoaddchild": [18, 29], "smallest": 18, "cube": 18, "enclos": 18, "previous": 18, "attach": 18, "ccoctre": [18, 29], "computescalarfieldgradi": [18, 29], "sfindex": [18, 22, 34], "euclideandist": 18, "theoctre": 18, "geometr": [18, 20, 22, 25, 29], "gradient": [18, 22, 29], "explain": 18, "euclidean": 18, "anoth": [18, 20, 25, 29], "convertcurrentscalarfieldtocolor": [18, 29], "mixwithexistingcolor": [18, 29], "rgb": [18, 22, 24, 29], "setcurrentdisplayedscalarfield": [18, 29, 34], "mix": [18, 22], "convertnormaltodipdirsf": [18, 29], "dip": [18, 29], "strike": [18, 29], "convertnormaltorgb": [18, 29], "hsv": [18, 24, 29], "convertrgbtogreyscal": [18, 29], "coordsfromnparray_copi": [18, 29, 32, 34], "Be": [18, 32], "sure": [18, 29, 32, 34], "style": [18, 32], "contigu": [18, 32], "transpos": [18, 20, 29, 32], "reorder": [18, 32], "c_contigu": [18, 32], "deleteallscalarfield": [18, 29], "deleteoctre": 18, "eras": 18, "deletescalarfield": [18, 29], "especi": 18, "last": [18, 19, 20, 31, 34], "IN": 18, "stai": [18, 34], "date": 18, "while": [18, 29, 31], "enhancergbwithintensitysf": [18, 29], "sfidx": [18, 29], "usecustomintensityrang": 18, "mini": 18, "maxi": 18, "enhanc": 18, "assum": 18, "intens": 18, "statu": [18, 29, 34], "exportcoordtosf": [18, 26, 29, 34], "isxexport": 18, "isyexport": 18, "iszexport": 18, "exportnormaltosf": [18, 29, 32], "filterpointsbyscalarvalu": [18, 29], "minval": 18, "maxval": 18, "whose": [18, 22, 34], "interv": [18, 29, 34], "select": [18, 22, 23, 25, 29, 34], "fuse": [18, 34], "place": [18, 20, 29, 32, 34], "getcurrentdisplayedscalarfield": [18, 29], "getcurrentdisplayedscalarfieldindex": [18, 29], "getcurrentinscalarfield": [18, 29], "getcurrentoutscalarfield": [18, 29], "getnumberofscalarfield": [18, 26, 29, 34], "getoctre": [18, 29], "getownbb": [18, 29, 34], "ccbbox": [18, 22, 25, 34], "getpoint": [18, 19, 29], "getscalarfield": [18, 26, 29, 32, 34], "getscalarfieldd": [18, 29, 32, 34], "dict": 18, "dic": [18, 29, 32, 34], "getscalarfieldnam": 18, "getsensor": [18, 29], "ccsensor": [18, 25, 29], "sensor": [18, 22, 25, 31], "interpolatecolorsfrom": [18, 29], "othercloud": 18, "normalsfromnparraycopi": [18, 32], "rewrit": 18, "normalstonparraycopi": [18, 32], "becaus": 18, "decompress": [18, 32], "orientnormalswithfm": [18, 29], "march": [18, 29], "orientnormalswithmst": [18, 29], "span": [18, 22, 29], "partialclon": [18, 29, 34], "cclib": 18, "document": [18, 24, 26, 34], "clone_warn": [18, 25], "renamescalarfield": [18, 34], "renam": [18, 34], "meant": 18, "re": [18, 26, 29, 31, 32, 34], "nbpt": 18, "instert": 18, "blank": 18, "fx": 18, "fy": 18, "fz": 18, "separ": [18, 21, 22, 29, 34], "xc": 18, "yc": 18, "zc": 18, "setcolor": [18, 29], "qcolor": [18, 25, 29], "rgba": [18, 24], "necessari": [18, 30], "taken": [18, 22, 31], "setcolorgradi": [18, 29], "assign": 18, "proportion": 18, "height": [18, 20, 22, 34], "regard": 18, "heightdim": 18, "ramp": 18, "setcolorgradientband": [18, 29], "band": 18, "freq": 18, "frequenc": 18, "setcolorgradientdefault": [18, 29], "setcurrentinscalarfield": [18, 29], "setcurrentoutscalarfield": [18, 22, 26, 29, 34], "setcurrentscalarfield": [18, 29, 34], "sffromcolor": [18, 29], "exportr": 18, "exportg": 18, "exportb": 18, "exportalpha": 18, "exportcomposit": 18, "shiftpointsalongnorm": [18, 29], "showsfcolorsscal": [18, 22, 34], "shrinktofit": [18, 29], "unus": 18, "capac": [18, 19], "translat": [18, 22, 25, 29, 34], "unallocatecolor": [18, 29], "unallocatenorm": 18, "manipul": [18, 24, 25], "tri": [18, 22, 25, 34], "newnumberofpoint": [18, 23, 34], "succe": [18, 20], "overflood": 18, "ones": 18, "generic3dpoint": 18, "safeti": 18, "reli": [18, 21, 29, 34], "seen": [18, 29, 34], "associatedcloud": [18, 19], "addpointindex": [18, 19, 29, 34], "safe": [18, 19], "firstindex": [18, 19], "lastindex": [18, 19], "exclud": [18, 19, 29, 31], "addpointindexglob": [18, 19], "globalindex": [18, 19], "enablescalarfield": [18, 19], "signal": [18, 19], "creation": [18, 19, 20, 29, 34], "forwarditer": [18, 19], "forward": [18, 19, 20, 22], "getcurrentpointcoordin": [18, 19], "getcurrentpointglobalindex": [18, 19], "getcurrentpointscalarvalu": [18, 19], "getnextpoint": [18, 19], "virtual": [18, 19], "BE": [18, 19], "WITH": [18, 19], "executefunctionforallcellsatlevel_mt": [18, 19], "executefunctionforallcellsatstartinglevel_mt": [18, 19], "minu": [18, 19], "undefin": [18, 19, 22, 25], "getpointglobalindex": [18, 19], "localindex": [18, 19], "intern": [18, 19, 20, 22, 29, 31], "getpointscalarvalu": [18, 19], "isscalarfielden": [18, 19], "placeiteratoratbegin": [18, 19], "setcurrentpointscalarvalu": [18, 19], "setpointscalarvalu": [18, 19], "dp_notify_other_on_delet": 18, "dp_notify_other_on_upd": 18, "dp_delete_oth": 18, "24": [18, 20], "wrn_out_of_mem_for_color": 18, "wrn_out_of_mem_for_norm": 18, "wrn_out_of_mem_for_sf": 18, "wrn_out_of_mem_for_fwf": 18, "open": [19, 29, 31, 34], "vector2tpl": [19, 20], "isclos": [19, 29, 34], "computelength": 19, "segment": [19, 22, 34], "generateorthosect": [19, 34], "orthosectionstep": 19, "orthosectionwidth": 19, "vertdim": [19, 22, 34], "orthogon": [19, 20, 29, 34], "line": [19, 29, 34], "o": [19, 22, 26, 29, 30, 31, 32, 34], "is2dmod": [19, 29], "segmentcount": [19, 29], "set2dmod": [19, 29], "setclos": [19, 29, 34], "smoothchaikin": [19, 29], "chaikin": 19, "ratio": [19, 22], "ccbox": [20, 25, 29], "cccone": [20, 25, 29], "cccylind": [20, 25, 29, 34], "ccplane": [20, 25, 29], "ccquadric": [20, 25, 29], "ccsphere": [20, 25, 29, 34], "cctoru": [20, 25, 29], "ccdish": [20, 25, 29, 34], "ccgenericprimit": [20, 25, 29], "compos": 20, "null": [20, 29, 31], "usag": [20, 22, 34], "transmat": [20, 22, 25, 29, 34], "afterward": [20, 29], "ccdrawableobject": 20, "setgltransform": 20, "getdimens": 20, "setdimens": 20, "bottomradiu": 20, "topradiu": 20, "xoff": 20, "bottom": [20, 22, 29], "top": [20, 22, 29, 30, 34], "displac": 20, "snout": 20, "yoff": 20, "draw": [20, 22, 29, 34], "360": 20, "getbottomcent": [20, 29], "getbottomradiu": [20, 29], "getheight": [20, 29], "getlargecent": [20, 29], "whichev": 20, "radii": 20, "getlargeradiu": [20, 29], "getsmallcent": [20, 29], "getsmallradiu": [20, 29], "gettopcent": [20, 29], "gettopradiu": [20, 29], "setbottomradiu": 20, "setheight": 20, "settopradiu": 20, "setradiu": 20, "xwidth": 20, "ywidth": 20, "getequ": [20, 29, 34], "setxwidth": 20, "setywidth": 20, "mincorn": [20, 22, 25, 29, 34], "maxcorn": [20, 22, 25, 29, 34], "eqv": 20, "represent": [20, 21], "eq": 20, "f": [20, 26, 29, 31, 34], "mainli": [20, 30, 31], "getradiu": [20, 29], "Its": 20, "rectangular": 20, "round": 20, "insideradiu": 20, "outsideradiu": 20, "angle_rad": 20, "283185307179586": 20, "rectangularsect": 20, "rectsectionheight": 20, "rad": 20, "subtend": 20, "radian": [20, 21], "loop": 20, "circular": 20, "ellipsoid": [20, 29, 34], "centr": 20, "radius2": 20, "zero": [20, 34], "drawn": 20, "gettypenam": [20, 29], "ccglmatrixtpl_float": 20, "4x4": [20, 29], "column": [20, 26, 29], "opengl": 20, "fromtorot": [20, 29], "One": [20, 34], "toma": 20, "m\u00f6ller": 20, "john": 20, "hugh": 20, "journal": 20, "graphic": [20, 21, 29, 34], "1999": 20, "fromviewdirandupdir": [20, 29], "matric": 20, "coef": 20, "glmat1": 20, "left": [20, 22, 24], "glmat2": 20, "ident": [20, 22], "altern": 20, "1st": 20, "2nd": 20, "tr": [20, 29], "cleartransl": 20, "col": [20, 29], "fromdoubl": [20, 34], "ccglmatrixd": [20, 25, 29], "dblmat": 20, "ccglmatrix_doubl": 20, "fromstr": [20, 29], "mattext": 20, "getcolumn": 20, "getparameters1": [20, 29], "ccglmatrixparams1_float": [20, 25], "equival": [20, 23, 24, 26, 34], "ccglmatrixparams1_doubl": [20, 25], "getparameters2": [20, 29], "ccglmatrixparams2_float": [20, 25], "ccglmatrixparams2_doubl": [20, 25], "initfromparamet": [20, 29, 34], "alpha_rad": [20, 29], "axis3d": [20, 29], "t3d": [20, 29], "euler": [20, 29], "tait": 20, "bryan": 20, "z1y2x3": 20, "phi_rad": [20, 29], "phi": [20, 29, 32, 34], "theta_rad": [20, 29], "theta": [20, 29, 32, 34], "psi_rad": [20, 29], "psi": [20, 29], "tostr": [20, 29], "xrotat": 20, "yrotat": 20, "zrotat": 20, "ccglmatrixtpl_doubl": 20, "laser": 21, "perpendicular": 21, "scanner": 21, "rotation_ord": [21, 25], "rotord": 21, "yaw_then_pitch": 21, "gettyp": [21, 29], "cc_sensor_typ": [21, 25, 29], "unknown_sensor": 21, "ground_based_lidar": [21, 29], "getuncertainti": [21, 29], "numer": 21, "inaccuraci": 21, "pitch_then_yaw": 21, "acquisit": [21, 29], "e57": [21, 22, 25, 29, 33, 34], "framework": 21, "now": [21, 31], "imu": 21, "intrins": 21, "rigid": 21, "link": 21, "optic": 21, "computescatteringangl": [21, 29], "todegreeflag": 21, "scatter": [21, 29], "leav": [21, 29], "addposit": 21, "getgraphicscal": [21, 29], "getrigidtransform": [21, 29], "setgraphicscal": 21, "setrigidtransform": 21, "goe": 21, "mat": [21, 29], "python3": [22, 25], "like": [22, 31], "initcc": [22, 25, 30], "plugin": [22, 27, 30], "loadpointcloud": [22, 25, 26, 29, 31, 32, 34], "home": [22, 31], "paul": [22, 27], "boul": [22, 32, 34], "computeapproxlocaldens": [22, 25], "old": 22, "divid": [22, 24], "r2": [22, 29], "r3": 22, "enum": 22, "getpointcloudradiu": [22, 25, 29], "els": 22, "computecurvatur": [22, 25, 26, 34], "curvaturetyp": [22, 25, 26, 34], "quadric": [22, 25], "nan": [22, 34], "appear": 22, "uncheck": 22, "cvt": 22, "gaussian_curv": [22, 25, 26, 34], "mean_curv": [22, 25], "normal_change_r": [22, 25], "computefeatur": [22, 25], "eigen": 22, "unstructur": 22, "hackel": 22, "terrestri": 22, "lidar": [22, 29], "complex": [22, 29], "natur": 22, "scene": [22, 25], "dimension": 22, "criterion": 22, "geomorphologi": 22, "brodu": [22, 34], "lagu": 22, "2012": 22, "computelocaldens": [22, 25], "computemomentorder1": [22, 25], "moment": 22, "selectedent": 22, "local_model_typ": [22, 25], "l": [22, 24, 25], "usescangridsforcomput": 22, "defaultradiu": 22, "mingridangle_deg": 22, "orientnorm": 22, "usescangridsfororient": 22, "usesensorsfororient": 22, "preferredorient": 22, "orientnormalsmst": 22, "mstneighbor": 22, "computepervertexnorm": [22, 29, 34], "scangrid": 22, "computerough": [22, 25], "roughnessupdir": 22, "rough": 22, "allow": [22, 29, 31, 34], "down": 22, "computevolume25d": [22, 25, 34], "reportinfo": 22, "reportinfovol": [22, 25, 34], "ceil": [22, 34], "gridstep": [22, 34], "groundheight": [22, 34], "ceilheight": [22, 34], "projectiontyp": [22, 25, 34], "proj_average_valu": [22, 25], "groundemptycellfillstrategi": [22, 34], "groundmaxedgelength": [22, 34], "ceilemptycellfillstrategi": [22, 34], "ceilmaxedgelength": [22, 34], "complet": [22, 34], "altitud": [22, 34], "deleteent": [22, 25, 29, 34], "anent": 22, "extractconnectedcompon": [22, 25, 34], "mincomponents": 22, "100": [22, 24, 34], "maxnumbercompon": 22, "part": [22, 34], "how": [22, 24, 29], "gap": [22, 34], "roughli": 22, "constitut": [22, 29], "residu": [22, 34], "accept": [22, 31], "randomli": [22, 25], "extractpointsalongsect": [22, 25, 34], "defaultsectionthick": 22, "envelopemaxedgelength": 22, "extractsectionsascloud": [22, 34], "extractsectionsasenvelop": [22, 34], "multipass": 22, "splitenvelop": 22, "s_extractsectionstyp": 22, "envelopetyp": [22, 34], "env_low": 22, "slice": [22, 25], "envelop": [22, 34], "fcloudcompi": 22, "extractslicesandcontour": [22, 25, 34], "bbox": [22, 34], "bboxtran": [22, 34], "0x000001285fb15130": 22, "singleslicemod": [22, 34], "processrepeatx": 22, "processrepeati": 22, "processrepeatz": 22, "extractenvelop": [22, 34], "extractlevelset": [22, 34], "levelsetgridstep": [22, 34], "levelsetminvertcount": [22, 34], "projectonbestfitplan": 22, "generaterandomcolor": [22, 34], "cross": [22, 34], "cut": [22, 25, 29], "repeat": [22, 23, 34], "extern": 22, "via": 22, "rasteris": [22, 34], "just": 22, "longer": [22, 30, 34], "temporarili": 22, "worst": 22, "optionalgeneraterandomcolor": 22, "filterbysfvalu": [22, 25, 26, 34], "getscalartyp": [22, 25], "under": [22, 23, 27], "float64": 22, "icp": [22, 25], "minrmsdecreas": [22, 34], "maxiterationcount": [22, 34], "randomsamplinglimit": [22, 34], "removefarthestpoint": [22, 34], "convergence_typ": [22, 25, 34], "adjustscal": [22, 34], "finaloverlapratio": [22, 34], "usedatasfasweight": 22, "usemodelsfasweight": 22, "transformationfilt": 22, "transformation_filt": [22, 25], "skip_non": [22, 25], "icpr": [22, 25], "reduct": 22, "consecut": 22, "continu": 22, "max_error_converg": [22, 25], "max_iter_converg": [22, 25, 34], "resampl": [22, 23, 25], "trick": 22, "slightli": [22, 29], "converg": 22, "releas": 22, "procedur": 22, "theoret": [22, 34], "overlap": [22, 34], "percentag": [22, 34], "weight": 22, "skip_rxi": [22, 25], "skip_ryz": [22, 25], "skip_rxz": [22, 25], "skip_rot": [22, 25], "skip_tx": [22, 25], "skip_ti": [22, 25], "skip_tz": [22, 25], "32": [22, 24, 29], "skip_transl": [22, 25], "56": [22, 29], "importfil": [22, 25, 29, 31, 34], "cc_shift_mod": [22, 25, 31, 34], "auto": [22, 25], "extradata": [22, 31], "content": [22, 29, 31, 34], "alwai": [22, 29, 31], "rule": [22, 31], "ply": [22, 29, 31, 33], "extra": 22, "regular": [22, 31, 34], "work": [22, 23, 24, 29, 31, 34], "uppercas": 22, "scan": [22, 25], "xyz": [22, 25, 26, 29, 31, 33, 34], "first_global_shift": [22, 25], "no_global_shift": [22, 25], "initcloudcompar": [22, 25], "interpolatescalarfieldsfrom": [22, 25, 34], "srccloud": 22, "interpolatorparamet": [22, 25, 34], "receiv": [22, 27], "interpolat": 22, "isplugindraco": [22, 25], "draco": 22, "ispluginfbx": [22, 25], "fbx": [22, 27, 31, 33], "hpr": [22, 25], "m3c2": [22, 25], "meshboolean": [22, 25], "pcv": [22, 25], "ransac_sd": [22, 25, 34], "labelconnectedcompon": [22, 25], "label": [22, 34], "loadmesh": [22, 25, 29, 31], "skip": 22, "shiftmod": 22, "encount": 22, "doc": [22, 30], "loadpolylin": [22, 25, 31, 34], "mergeent": [22, 25, 34], "deleteoriginalcloud": [22, 34], "createsfcloudindex": [22, 34], "createsubmesh": [22, 34], "merg": [22, 25], "submesh": 22, "rasterizegeotiffonli": [22, 25, 34], "vertdir": 22, "cc_direct": [22, 25], "outputrasterz": [22, 34], "outputrastersf": [22, 34], "outputrasterrgb": 22, "pathtoimag": [22, 34], "sfprojectiontyp": 22, "emptycellfillstrategi": [22, 34], "delaunaymaxedgelength": 22, "krigingparamsknn": 22, "customheight": [22, 34], "gridbbox": 22, "0x000001285fb75970": 22, "percentil": 22, "50": [22, 24, 29], "export_percellcount": [22, 34], "export_percellminheight": 22, "export_percellmaxheight": 22, "export_percellavgheight": [22, 34], "export_percellheightstddev": 22, "export_percellheightrang": 22, "export_percellmedian": [22, 34], "export_percellpercentil": [22, 34], "export_percelluniquecount": 22, "geotiff": [22, 34], "gdal": 22, "raster": [22, 25], "tiff": 22, "grb": 22, "choos": [22, 23, 34], "directori": [22, 30, 31], "basesd": 22, "plu": [22, 29, 34], "suffix": 22, "interpolate_delaunai": [22, 25, 34], "krige": [22, 25], "rasterizetocloud": [22, 25, 34], "0x000001285fb75270": 22, "rasterizetomesh": [22, 25, 34], "0x000001285fb116f0": 22, "saveent": [22, 25, 33, 34], "cc_file_error": [22, 25], "savemesh": [22, 25, 33], "ma": 22, "dxf": [22, 31, 33], "off": [22, 31, 33, 34], "stl": [22, 31, 33], "vtk": [22, 31, 33], "obj": [22, 31, 33], "savepointcloud": [22, 25, 26, 32, 33, 34], "pointformat": 22, "asc": [22, 31, 33], "sbf": [22, 31, 33], "pcd": [22, 31, 33], "pn": 22, "pv": [22, 31, 33], "laz": [22, 31, 33], "settrac": [22, 25], "system": 22, "isact": 22, "unfoldpointsalongpolylin": [22, 25, 34], "thick": [22, 34], "unfold": [22, 34], "addtorenderscen": [22, 25, 34], "showscalar": 22, "renderviewtofil": 22, "removefromrenderscen": [22, 25, 34], "usabl": [22, 34], "1500": [22, 34], "1000": [22, 34], "isinteract": [22, 34], "write": [22, 26, 29, 31, 33, 34], "imag": [22, 25], "png": [22, 34], "jpg": 22, "pixel": 22, "ihm": 22, "viewer": 22, "suspend": [22, 34], "script": [22, 26, 30, 34], "setorthoview": [22, 25, 34], "ortho": 22, "perspect": [22, 34], "setcenteredperspectiveview": [22, 25, 34], "setviewerperspectiveview": [22, 25, 34], "setglobalzoom": [22, 25, 34], "zoom": [22, 34], "zoomonselectedent": [22, 25, 34], "setfrontview": [22, 25, 34], "front": 22, "setbottomview": [22, 25, 34], "settopview": [22, 25, 34], "setbackview": [22, 25, 34], "back": [22, 24], "setleftview": [22, 25, 34], "setrightview": [22, 25, 34], "setisoview1": [22, 25, 34], "setisoview2": [22, 25, 34], "setcustomview": [22, 25, 34], "setcamerapo": [22, 25, 34], "camera": [22, 34], "setbackgroundcolor": [22, 25, 34], "background": [22, 34], "foreground": 22, "settextdefaultcol": [22, 25, 34], "setcolorscaleshowhistogram": [22, 25, 34], "showhist": 22, "histogram": [22, 25], "itself": 22, "boundingbox": [22, 34], "cc_ferr_no_error": [22, 25], "cc_ferr_bad_argu": [22, 25], "cc_ferr_unknown_fil": [22, 25], "cc_ferr_wrong_file_typ": [22, 25], "cc_ferr_writ": [22, 25], "cc_ferr_read": [22, 25], "cc_ferr_no_sav": [22, 25], "cc_ferr_no_load": [22, 25], "cc_ferr_bad_entity_typ": [22, 25], "cc_ferr_canceled_by_us": [22, 25], "cc_ferr_not_enough_memori": [22, 25], "cc_ferr_malformed_fil": [22, 25], "cc_ferr_console_error": [22, 25], "cc_ferr_broken_dependency_error": [22, 25], "cc_ferr_file_was_written_by_unknown_plugin": [22, 25], "cc_ferr_third_party_lib_failur": [22, 25], "cc_ferr_third_party_lib_except": [22, 25], "cc_ferr_not_impl": [22, 25], "17": [22, 34], "fill_minimum_height": [22, 25], "fill_maximum_height": [22, 25, 34], "fill_custom_height": [22, 25, 34], "fill_average_height": [22, 25], "exportablefield": [22, 25], "per_cell_height": [22, 25], "per_cell_count": [22, 25], "per_cell_min_height": [22, 25], "per_cell_max_height": [22, 25], "per_cell_avg_height": [22, 25], "per_cell_height_std_dev": [22, 25], "per_cell_height_rang": [22, 25], "per_cell_invalid": [22, 25], "finalscal": [22, 25], "rescal": [22, 29], "finalrm": [22, 25], "finalpointcount": [22, 25], "interpol_method": [22, 34], "nearest_neighbor": 22, "k_nearest_neighbor": 22, "algo": [22, 25, 34], "interpol_algo": [22, 34], "median": 22, "normal_dist": [22, 34], "sigma": [22, 23, 25, 34], "plus_x": [22, 25], "minus_x": [22, 25], "plus_i": [22, 25], "minus_i": [22, 25], "plus_z": [22, 25], "minus_z": [22, 25], "plus_barycent": [22, 25], "minus_barycent": [22, 25], "plus_origin": [22, 25], "minus_origin": [22, 25], "plus_sensor_origin": [22, 25], "minus_sensor_origin": [22, 25], "proj_minimum_valu": [22, 25, 34], "proj_maximum_valu": [22, 25], "proj_median_valu": [22, 25], "proj_inverse_var_valu": [22, 25], "invalid_projection_typ": [22, 25], "addedvolum": [22, 25, 34], "floor": [22, 34], "removedvolum": [22, 25, 34], "matchingperc": [22, 25, 34], "ceilnonmatchingperc": [22, 25, 34], "groundnonmatchingperc": [22, 25, 34], "averageneighborspercel": [22, 25, 34], "py": [22, 24, 29, 31, 32, 33, 34], "meth": [22, 24, 29], "cloudsamplingtool": [23, 25, 29, 34], "noisefilt": [23, 29, 34], "kernelradiu": 23, "nsigma": 23, "removeisolatedpoint": 23, "useabsoluteerror": 23, "absoluteerror": 23, "isol": 23, "absolut": [23, 34], "resamplecloudspati": [23, 34], "mindist": 23, "modparam": 23, "sfmodulationparam": [23, 25], "0x000001285fb39430": 23, "inter": [23, 34], "nearer": [23, 34], "pick": [23, 34], "cannot": [23, 24], "resamplecloudwithoctre": [23, 34], "resamplingmethod": [23, 34], "resampling_cell_method": [23, 25, 34], "resamplecloudwithoctreeatlevel": [23, 34], "apart": [23, 34], "cell_cent": [23, 34], "cell_gravity_cent": 23, "recomput": 23, "enumer": [23, 34], "consist": [23, 34], "sorfilt": [23, 34], "outlier": [23, 25], "sor": [23, 25], "pcl": [23, 25], "statisticaloutlierremov": [23, 34], "subsamplecloudrandomli": [23, 34], "subsamplecloudwithoctre": [23, 34], "subsamplingmethod": 23, "subsampling_cell_method": [23, 25, 34], "subsamplecloudwithoctreeatlevel": [23, 34], "random_point": [23, 34], "nearest_point_to_cell_cent": [23, 34], "scheme": 23, "bind": 24, "cmyk": [24, 29], "channel": 24, "transpar": [24, 31], "solid": [24, 34], "argb": 24, "quadruplet": 24, "aarrggbb": 24, "qrgba64": [24, 25], "rgba64": 24, "setnamedcolor": 24, "pars": 24, "colornam": 24, "syntax": [24, 34], "alphaf": 24, "black": 24, "blackf": 24, "bluef": 24, "convertto": 24, "qcolorspec": [24, 25], "colorspec": 24, "spec": 24, "cyan": 24, "cyanf": 24, "darker": 24, "200": 24, "lighter": 24, "300": 24, "third": [24, 27, 34], "bright": 24, "recommend": 24, "purpos": [24, 27, 34], "unspecifi": 24, "fromcmyk": 24, "magenta": 24, "yellow": 24, "fromcmykf": 24, "fromhsl": 24, "hsl": 24, "hue": 24, "satur": 24, "light": [24, 29, 34], "359": 24, "fromhslf": 24, "fromhsv": 24, "fromhsvf": 24, "fromrgb": [24, 29], "fromrgbf": [24, 29], "fromrgbuint": 24, "fromrgba": 24, "qrgb": 24, "unlik": 24, "fromrgba64": 24, "65535": 24, "short": [24, 29], "16bit": 24, "fromrgba64q": 24, "getcmyk": 24, "getcmykf": 24, "gethsl": 24, "gethslf": 24, "gethsv": 24, "gethsvf": 24, "getrgb": 24, "getrgbf": 24, "greenf": 24, "hslhue": 24, "achromat": 24, "hslhuef": 24, "hslsatur": 24, "hslsaturationf": 24, "hsvhue": 24, "hsvhuef": 24, "hsvsatur": 24, "hsvsaturationf": 24, "implicitli": 24, "huef": 24, "isvalid": 24, "isvalidcolor": 24, "150": 24, "brighter": 24, "lightnessf": 24, "magentaf": 24, "rrggbb": 24, "charact": [24, 31], "digit": 24, "hexadecim": 24, "nameargb": 24, "four": [24, 32, 34], "redf": 24, "opaqu": 24, "rgb64": 24, "saturationf": 24, "setalpha": 24, "setalphaf": 24, "setblu": 24, "setbluef": 24, "setcmyk": 24, "retriev": 24, "individu": 24, "setcmykf": 24, "setgreen": 24, "setgreenf": 24, "sethsl": 24, "sethslf": 24, "sethsv": 24, "sethsvf": 24, "hex": 24, "rrrgggbbb": 24, "rrrrggggbbbb": 24, "svg": 24, "keyword": 24, "world": 24, "wide": 24, "web": 24, "consortium": 24, "steelblu": 24, "gainsboro": 24, "platform": 24, "absenc": 24, "setr": 24, "setredf": 24, "setrgb": 24, "setrgbf": 24, "setrgbuint": 24, "setrgba64": 24, "64": [24, 29], "bit": 24, "tocmyk": 24, "tohsl": 24, "tohsv": 24, "torgb": 24, "valuef": 24, "yellowf": 24, "64bit": 24, "struct": [24, 34], "premultipli": 24, "unpremultipli": 24, "loss": [24, 27, 29, 31], "alpha8": 24, "blue8": 24, "fromargb32": 24, "32bit": 24, "fromquint64": 24, "8bit": [24, 32], "green8": 24, "isopaqu": 24, "fulli": 24, "istranspar": 24, "red8": 24, "toargb32": 24, "toquint64": 24, "torgb16": 24, "licens": 25, "window": [25, 31], "linux": [25, 31], "maco": 25, "known": [25, 29], "introspect": 25, "dish": [25, 34], "polygon": [25, 34], "neighbourhood": [25, 29], "figur": 25, "csv": 25, "ambiant": 25, "sd": [25, 29], "csf": 25, "canupo": 25, "train": 25, "sra": 25, "sclice": 25, "leak": 25, "descriptor": 25, "ccprimit": 25, "ccgblsensor": [25, 29], "analysi": 25, "ccfacet": [25, 29], "qt": [25, 31], "poissonrecon": [25, 34], "minimalboundingbox": [25, 34], "command": 26, "cover": 26, "accord": [26, 34], "report": [26, 34], "user": [26, 31, 34], "feel": 26, "post": 26, "mycloud": 26, "print": [26, 29, 31, 34], "05": [26, 29, 34], "nsf": [26, 34], "sfcurv": 26, "filteredcloud": 26, "sf1": [26, 29, 32, 34], "var": [26, 29], "elementwis": 26, "asf1": [26, 29, 32], "mymodifiedcloud": 26, "interpret": 26, "docstr": 26, "argument": [26, 29, 34], "program": 27, "softwar": 27, "redistribut": 27, "term": 27, "gnu": 27, "public": 27, "publish": 27, "foundat": 27, "hope": 27, "warranti": 27, "impli": 27, "merchant": 27, "copyright": 27, "2020": 27, "2021": 27, "rascl": 27, "openfield": [27, 29, 31, 34], "fr": [27, 29, 31, 34], "instal": [27, 30], "autodesk": 27, "develop": 27, "inc": 27, "2019": 27, "disclaim": 27, "infring": 27, "parti": 27, "event": 27, "shall": 27, "liabl": 27, "incident": 27, "special": [27, 29], "exemplari": 27, "consequenti": 27, "damag": 27, "procur": 27, "substitut": 27, "good": [27, 29, 34], "servic": 27, "profit": 27, "busi": 27, "interrupt": 27, "caus": 27, "theori": 27, "liabil": 27, "contract": 27, "strict": 27, "tort": 27, "neglig": 27, "aris": 27, "datasample_5": [29, 31], "samplecloud": 29, "1000000": [29, 32, 34], "pt": 29, "12345": 29, "880000114440918": 29, "5499999523162842": 29, "08818499743938446": 29, "0861680507659912": 29, "989999771118164": 29, "neighbourood": 29, "often": 29, "lot": [29, 31, 33, 34], "speed": [29, 34], "sometim": 29, "nbsf": 29, "coord": [29, 32, 34], "sfx": [29, 32], "sfmin": 29, "sfmax": 29, "There": [29, 32, 34], "vice": 29, "versa": 29, "basic": 29, "test001": 29, "gravitycent": 29, "7e": 29, "iscoordequ": 29, "9999999e": 29, "03": [29, 34], "6193114e": 29, "rais": [29, 32, 34], "runtimeerror": [29, 32, 34], "9238623e": 29, "02": 29, "0050000e": 29, "00": 29, "0050001e": 29, "9903808e": 29, "test026": [29, 34], "tr1": [29, 34], "47": 29, "retreiv": 29, "m_data_str": 29, "m_data": 29, "tr1b": 29, "m_datab": 29, "tr2": [29, 34], "100000": [29, 34], "And": [29, 34], "transform1": [29, 34], "matrixparams1": 29, "math": [29, 34], "rel_tol": [29, 34], "211393": 29, "408694": 29, "887852": 29, "matrixparams2": 29, "225260": 29, "0639141": 29, "0954226": 29, "product": 29, "mpx": 29, "rotinv": [29, 34], "mpi": 29, "plai": 29, "rotphi": 29, "a1": 29, "rotpsi": 29, "a2": 29, "rottheta": 29, "a3": 29, "rottaitbryan": 29, "mat1": 29, "pt1": 29, "angle1": 29, "angle2": 29, "d2": [29, 32], "inner": 29, "1e": [29, 34], "rot1": 29, "rot2": 29, "sqrt": [29, 32, 34], "snippet": [29, 31, 32, 34], "getsamplecloud": [29, 32, 34], "04": [29, 34], "origcloud": [29, 34], "noisecloud": [29, 34], "__class__": [29, 34], "7470": [29, 34], "7570": [29, 34], "test019": [29, 34], "nz": [29, 32], "definit": 29, "dicsf": 29, "sfdip": 29, "sfdipd": 29, "reorient": 29, "test014": 29, "cloud2": [29, 31, 33, 34], "test055": 29, "qt5": 29, "test028": 29, "48": 29, "c1": [29, 34], "c2": [29, 34], "60": 29, "180": 29, "220": 29, "n1": 29, "n2": 29, "don": [29, 31], "region": 29, "cloud1": [29, 31, 32, 33, 34], "test029": [29, 32], "reinitialis": 29, "max1": [29, 32], "sfname": 29, "val": 29, "23": 29, "test002": [29, 32], "prevent": 29, "join": [29, 31, 32, 34], "dataextdir": [29, 31, 34], "pts_lamb93_ign69_extract": 29, "timeshift": 29, "test020": [29, 31, 33], "uniform": 29, "anewnam": 29, "appropri": 29, "test003": [29, 34], "dupsfindex": 29, "duplicateflag": 29, "ret": [29, 33, 34], "identifi": [29, 34], "noduplcloud": 29, "captur": 29, "introduct": [29, 34], "wiki": [29, 31, 33, 34], "download": [29, 31], "sourceforg": [29, 31], "net": [29, 31, 34], "imgfmt": [29, 31], "e57exampl": [29, 31], "manitounoinvalidpoint": [29, 31], "isfil": [29, 31, 34], "makedir": [29, 31, 34], "url": [29, 31, 34], "phocadownload": [29, 31, 34], "wb": [29, 31, 34], "gbl": 29, "len": 29, "gbl_sensor": 29, "grscale": 29, "ret1": 29, "test041": [29, 31], "elev": [29, 34], "getsamplecloud2": [29, 34], "mesh1": [29, 32, 34], "test011": [29, 32, 34], "meshpli": 29, "datadir": [29, 32, 34], "distinct": 29, "453": 29, "p0": 29, "necessarili": 29, "128": 29, "vol": 29, "spherearea": 29, "spherevolum": 29, "refin": 29, "mesh3": 29, "mesh2": [29, 34], "over": 29, "test015": 29, "thu": [29, 34], "96": 29, "abox": 29, "acon": 29, "offer": [29, 33, 34], "tr3": [29, 34], "acylind": 29, "192": 29, "tr4": 29, "aplan": 29, "test012": [29, 34], "tr7": 29, "aquadr": 29, "6962": 29, "tr5": 29, "aspher": [29, 34], "72": 29, "10224": 29, "tr6": 29, "atoru": 29, "964": 29, "tr8": 29, "adish": 29, "2520": 29, "unless": [29, 31], "test009": [29, 34], "boundingbox1": [29, 34], "poly1": [29, 31, 34], "boundingbox2": 29, "poly2": 29, "tor": 29, "poly2d": 29, "poly3d": 29, "cloud2d": 29, "cloud3d": 29, "ascii": 29, "test007": [29, 34], "similar": [29, 30, 34], "extent": 29, "respect": 29, "polygon3": 29, "cloudcropz": [29, 34], "center3": 29, "normal3": 29, "eq3": 29, "contour3": 29, "vert3": 29, "surface3": 29, "2e": 29, "polygon4": 29, "center4": 29, "normal4": 29, "eq4": 29, "contour4": 29, "vert4": 29, "surface4": 29, "test021": 29, "throughout": 29, "illustr": 29, "firstli": [29, 34], "level12": 29, "026529": 29, "37": 29, "neighbourscyl": 29, "81": 29, "500000": 29, "000000": 29, "neighboursbox": 29, "test016": 29, "configur": [30, 34], "pythonpath": 30, "execut": [30, 34], "instruct": 30, "conda": 30, "packag": 30, "batch": 30, "prompt": 30, "cd": 30, "cloudcompy310": 30, "envcloudcompi": 30, "bat": 30, "linuxconda": 30, "shell": 30, "condacloud": 30, "sh": 30, "zsh": 30, "sequenc": 30, "discov": 30, "binari": [31, 33], "nativ": [31, 33], "support": [31, 33], "drc": [31, 33], "shp": [31, 33], "sx": [31, 33], "recent": 31, "autotest": 31, "subdirectori": 31, "chdir": 31, "expandus": 31, "datasample_1": 31, "meshcloud": 31, "regexp": 31, "sp2_1": 31, "sp2_2": 31, "sp26_1": 31, "sp25_2": 31, "sp26_2": 31, "sp2": 31, "_1": 31, "pattern": 31, "item": [31, 34], "rich": 31, "prefer": 32, "test004": 32, "numberofpoint": 32, "npt": [32, 34], "10000000": [32, 34], "sin": [32, 34], "co": [32, 34], "column_stack": [32, 34], "dr": [32, 34], "delta": [32, 34], "test017": [32, 34], "19602": 32, "uint32": 32, "cola": 32, "colacopi": 32, "nx": 32, "sfy": 32, "ny": 32, "sfz": 32, "asfx": 32, "asfi": 32, "asfz": 32, "dx": 32, "dy": 32, "dz": 32, "whe": 32, "denorm": 32, "test054": 32, "flexibl": 33, "datasampl": 33, "datasample_v14": 33, "put": 33, "mixedent": 33, "expos": 34, "sinusoid": 34, "fluctuat": 34, "wavelet": 34, "wave_": 34, "test025": 34, "cmin": 34, "cmax": 34, "interact": 34, "plan": 34, "cardin": 34, "getsamplepoli": 34, "meshcropz": 34, "test039": 34, "idea": 34, "long": 34, "help": 34, "ref": 34, "cloud_comparison_m3c2": 34, "cpu": 34, "accur": 34, "greatli": 34, "nbcpu": 34, "psutil": 34, "cpu_count": 34, "bestoctreelevel": 34, "cloud2ref": 34, "cloud3": 34, "test010": 34, "closestpoint": 34, "cloud2_refer": 34, "cloud2_transform": 34, "clouds2": 34, "50000": 34, "cloud2_transformed_aftericp": 34, "cloud2bi": 34, "fpcl": 34, "test038": 34, "mesh4": 34, "delimit": 34, "mandatori": 34, "spatialcloud": 34, "55465": 34, "randomcloud": 34, "resoctralcloud": 34, "2050": 34, "2100": 34, "resoctrcloud": 34, "5000": 34, "1900": 34, "8000": 34, "sorcloud": 34, "43000": 34, "45000": 34, "suboctlevcloud": 34, "2262": 34, "25000": 34, "suboctreecloud": 34, "36777": 34, "sfc": 34, "gaussian": 34, "fcloud": 34, "filtereds": 34, "plot": 34, "matplotlib": 34, "asf": 34, "pyplot": 34, "plt": 34, "agg": 34, "patch": 34, "hist": 34, "frac": 34, "norm": 34, "thisfrac": 34, "thispatch": 34, "zip": 34, "cm": 34, "rainbow": 34, "set_facecolor": 34, "savefig": 34, "test022": 34, "w": 34, "writer": 34, "writerow": 34, "cartesian": 34, "isok": 34, "995": 34, "101": 34, "002": 34, "726": 34, "731": 34, "abs_tol": 34, "299": 34, "07": 34, "133": 34, "152": 34, "301": 34, "305": 34, "237": 34, "test023": 34, "concept": 34, "introduc": 34, "produc": 34, "understand": 34, "wave": 34, "rcloud": 34, "raster_0": 34, "rcloud1": 34, "raster_1": 34, "iterpol": 34, "rcloud2": 34, "raster_2": 34, "wave_g2": 34, "distinguish": 34, "rmesh": 34, "06": 34, "test044": 34, "cloudbeforerot": 34, "go": 34, "clbbox": 34, "axisobj": 34, "clb": 34, "axispoli": 34, "optimalboundingbox": 34, "test027": 34, "larg": 34, "group": 34, "job": 34, "m3c2_param": 34, "txt": 34, "scratch": 34, "edit": 34, "multiprocess": 34, "m3c2_params_d": 34, "exportdensityatprojscal": 34, "exportstddevinfo": 34, "m3c2ver": 34, "minpoints4stat": 34, "normalmaxscal": 34, "283607": 34, "normalminscal": 34, "070902": 34, "normalmod": 34, "normalpreferedori": 34, "normalscal": 34, "141803": 34, "normalstep": 34, "normalusecorepoint": 34, "pm1scale": 34, "pm2scale": 34, "positivesearchonli": 34, "projdestindex": 34, "registrationerror": 34, "registrationerroren": 34, "searchdepth": 34, "709017": 34, "searchscal": 34, "subsampleen": 34, "subsampleradiu": 34, "usemedian": 34, "useminpoints4stat": 34, "useoriginalcloud": 34, "useprecisionmap": 34, "usesinglepass4depth": 34, "paramfilename1": 34, "m3c2_params1": 34, "six": 34, "ux": 34, "ui": 34, "uz": 34, "dic1": 34, "m3c2_params2": 34, "test030": 34, "illumin": 34, "come": 34, "unrealist": 34, "sharp": 34, "shadow": 34, "cln": 34, "illuminancedish": 34, "test032": 34, "wouldn": 34, "viewport": 34, "cloudcut": 34, "test033": 34, "mesh_bolean": 34, "csg": 34, "test034": 34, "consensu": 34, "correct": 34, "tr0": 34, "c0": 34, "sphere1": 34, "sphere2": 34, "sphere3": 34, "c3": 34, "test035": 34, "test043": 34, "nicola": 34, "common": 34, "recherch": 34, "benchmark": 34, "tar": 34, "gz": 34, "forum": 34, "viewtop": 34, "php": 34, "808": 34, "90": 34, "p11588": 34, "recombi_10": 34, "urllib": 34, "urlopen": 34, "vegettid": 34, "prm": 34, "sf2": 34, "cloudcanupo": 34, "test046": 34, "descritpion": 34, "clmap": 34, "meshmap": 34, "test045": 34, "test053": 34, "toslic": 34, "test036": 34, "poylin": 34, "altimetri": 34, "river": 34, "garonne_l93": 34, "ligne_eau": 34, "orthopoli": 34, "600": 34, "orthosect": 34, "cloudsect": 34, "unfoldedcloud": 34, "test052": 34, "res2": 34, "comp": 34, "pumparowcolumnindexnoinvalidpoint": 34, "cloud01": 34, "pump_extract_compon": 34, "cloud02": 34, "pump_residual_compon": 34, "pump_extract_residual_compon": 34, "test037": 34, "test048": 34, "word": 34, "convers": 34, "getpid": 34, "mem_start": 34, "memory_full_info": 34, "rss": 34, "forev": 34, "addedmemori": 34, "test042": 34, "jpeg": 34, "manit": 34, "rendera": 34, "2000": 34, "becom": 34, "func": 34, "bar": 34, "render0": 34, "renderref": 34, "renderrefcenterp": 34, "dist": 34, "alpharad": 34, "renderangle_": 34, "immedi": 34, "vue": 34, "resum": 34, "menu": 34, "test051": 34}, "objects": {"": [[22, 0, 0, "-", "cloudComPy"]], "cloudComPy": [[17, 1, 1, "", "BoxNeighbourhood"], [22, 1, 1, "", "CC_DIRECTION"], [22, 1, 1, "", "CC_FILE_ERROR"], [21, 1, 1, "", "CC_SENSOR_TYPE"], [22, 1, 1, "", "CC_SHIFT_MODE"], [18, 1, 1, "", "CLONE_WARNINGS"], [22, 1, 1, "", "CONVERGENCE_TYPE"], [0, 0, 0, "-", "CSF"], [1, 0, 0, "-", "Canupo"], [17, 1, 1, "", "CellDescriptor"], [2, 1, 1, "", "Cloud2CloudDistancesComputationParams"], [2, 1, 1, "", "Cloud2MeshDistancesComputationParams"], [23, 1, 1, "", "CloudSamplingTools"], [22, 5, 1, "", "ComputeVolume25D"], [22, 1, 1, "", "CurvatureType"], [17, 1, 1, "", "CylindricalNeighbourhood"], [18, 1, 1, "", "DEPENDENCY_FLAGS"], [3, 1, 1, "", "Density"], [17, 1, 1, "", "DgmOctree"], [2, 1, 1, "", "DistanceComputationTools"], [16, 1, 1, "", "EdgeConnectivityStats"], [22, 1, 1, "", "EmptyCellFillOption"], [3, 1, 1, "", "ErrorCode"], [22, 1, 1, "", "ExportableFields"], [22, 5, 1, "", "ExtractConnectedComponents"], [22, 5, 1, "", "ExtractSlicesAndContours"], [18, 1, 1, "", "GenericIndexedCloudPersist"], [16, 1, 1, "", "GenericIndexedMesh"], [8, 1, 1, "", "GeomFeature"], [3, 1, 1, "", "GeometricalAnalysisTools"], [22, 5, 1, "", "GetPointCloudRadius"], [4, 0, 0, "-", "HPR"], [22, 5, 1, "", "ICP"], [22, 1, 1, "", "ICPres"], [17, 1, 1, "", "IndexAndCode"], [22, 1, 1, "", "LOCAL_MODEL_TYPES"], [22, 5, 1, "", "LabelConnectedComponents"], [5, 0, 0, "-", "M3C2"], [22, 5, 1, "", "MergeEntities"], [6, 0, 0, "-", "MeshBoolean"], [17, 1, 1, "", "NearestNeighboursSearchStruct"], [22, 1, 1, "", "Orientation"], [9, 0, 0, "-", "PCL"], [10, 0, 0, "-", "PCV"], [18, 1, 1, "", "PointCloudTpl_ccGenericPointCloud_QString"], [17, 1, 1, "", "PointDescriptor"], [11, 0, 0, "-", "PoissonRecon"], [19, 1, 1, "", "Polyline"], [17, 1, 1, "", "ProgressiveCylindricalNeighbourhood"], [22, 1, 1, "", "ProjectionType"], [24, 1, 1, "", "QColor"], [24, 1, 1, "", "QColorSpec"], [24, 1, 1, "", "QRgba64"], [12, 0, 0, "-", "RANSAC_SD"], [23, 1, 1, "", "RESAMPLING_CELL_METHOD"], [21, 1, 1, "", "ROTATION_ORDER"], [22, 5, 1, "", "RasterizeGeoTiffOnly"], [22, 5, 1, "", "RasterizeToCloud"], [22, 5, 1, "", "RasterizeToMesh"], [18, 1, 1, "", "ReferenceCloud"], [22, 1, 1, "", "ReportInfoVol"], [23, 1, 1, "", "SFModulationParams"], [13, 0, 0, "-", "SRA"], [23, 1, 1, "", "SUBSAMPLING_CELL_METHOD"], [22, 5, 1, "", "SaveEntities"], [22, 5, 1, "", "SaveMesh"], [22, 5, 1, "", "SavePointCloud"], [14, 1, 1, "", "ScalarField"], [22, 1, 1, "", "TRANSFORMATION_FILTERS"], [16, 1, 1, "", "TRIANGULATION_TYPES"], [22, 5, 1, "", "addToRenderScene"], [22, 1, 1, "", "ccBBox"], [20, 1, 1, "", "ccBox"], [20, 1, 1, "", "ccCone"], [20, 1, 1, "", "ccCylinder"], [20, 1, 1, "", "ccDish"], [15, 1, 1, "", "ccFacet"], [21, 1, 1, "", "ccGBLSensor"], [20, 1, 1, "", "ccGLMatrix"], [20, 1, 1, "", "ccGLMatrixParams1_double"], [20, 1, 1, "", "ccGLMatrixParams1_float"], [20, 1, 1, "", "ccGLMatrixParams2_double"], [20, 1, 1, "", "ccGLMatrixParams2_float"], [20, 1, 1, "", "ccGLMatrixd"], [16, 1, 1, "", "ccGenericMesh"], [18, 1, 1, "", "ccGenericPointCloud"], [20, 1, 1, "", "ccGenericPrimitive"], [18, 1, 1, "", "ccHObject"], [16, 1, 1, "", "ccMesh"], [20, 1, 1, "", "ccPlane"], [18, 1, 1, "", "ccPointCloud"], [19, 1, 1, "", "ccPolyline"], [20, 1, 1, "", "ccQuadric"], [14, 1, 1, "", "ccScalarField"], [21, 1, 1, "", "ccSensor"], [18, 1, 1, "", "ccShiftedObject"], [20, 1, 1, "", "ccSphere"], [20, 1, 1, "", "ccTorus"], [22, 5, 1, "", "computeApproxLocalDensity"], [22, 5, 1, "", "computeCurvature"], [22, 5, 1, "", "computeFeature"], [22, 5, 1, "", "computeLocalDensity"], [22, 5, 1, "", "computeMomentOrder1"], [22, 5, 1, "", "computeNormals"], [22, 5, 1, "", "computeRoughness"], [22, 5, 1, "", "deleteEntity"], [22, 5, 1, "", "extractPointsAlongSections"], [22, 5, 1, "", "filterBySFValue"], [22, 5, 1, "", "getScalarType"], [22, 5, 1, "", "importFile"], [22, 5, 1, "", "initCC"], [22, 5, 1, "", "initCloudCompare"], [22, 5, 1, "", "interpolateScalarFieldsFrom"], [22, 1, 1, "", "interpolatorParameters"], [22, 5, 1, "", "invertNormals"], [22, 5, 1, "", "isPluginDraco"], [22, 5, 1, "", "isPluginFbx"], [22, 5, 1, "", "isPluginHPR"], [22, 5, 1, "", "isPluginM3C2"], [22, 5, 1, "", "isPluginMeshBoolean"], [22, 5, 1, "", "isPluginPCV"], [22, 5, 1, "", "isPluginRANSAC_SD"], [22, 5, 1, "", "loadMesh"], [22, 5, 1, "", "loadPointCloud"], [22, 5, 1, "", "loadPolyline"], [22, 5, 1, "", "removeFromRenderScene"], [22, 5, 1, "", "render"], [22, 5, 1, "", "setBackView"], [22, 5, 1, "", "setBackgroundColor"], [22, 5, 1, "", "setBottomView"], [22, 5, 1, "", "setCameraPos"], [22, 5, 1, "", "setCenteredPerspectiveView"], [22, 5, 1, "", "setColorScaleShowHistogram"], [22, 5, 1, "", "setCustomView"], [22, 5, 1, "", "setFrontView"], [22, 5, 1, "", "setGlobalZoom"], [22, 5, 1, "", "setIsoView1"], [22, 5, 1, "", "setIsoView2"], [22, 5, 1, "", "setLeftView"], [22, 5, 1, "", "setOrthoView"], [22, 5, 1, "", "setRightView"], [22, 5, 1, "", "setTextDefaultCol"], [22, 5, 1, "", "setTopView"], [22, 5, 1, "", "setTraces"], [22, 5, 1, "", "setViewerPerspectiveView"], [22, 5, 1, "", "unfoldPointsAlongPolylines"], [22, 5, 1, "", "zoomOnSelectedEntity"]], "cloudComPy.BoxNeighbourhood": [[17, 2, 1, "", "__init__"], [17, 3, 1, "", "axes"], [17, 3, 1, "", "center"], [17, 3, 1, "", "dimensions"], [17, 3, 1, "", "level"]], "cloudComPy.CC_DIRECTION": [[22, 4, 1, "", "X"], [22, 4, 1, "", "Y"], [22, 4, 1, "", "Z"], [22, 2, 1, "", "__init__"], [22, 3, 1, "", "name"], [22, 3, 1, "", "value"]], "cloudComPy.CC_FILE_ERROR": [[22, 4, 1, "", "CC_FERR_BAD_ARGUMENT"], [22, 4, 1, "", "CC_FERR_BAD_ENTITY_TYPE"], [22, 4, 1, "", "CC_FERR_BROKEN_DEPENDENCY_ERROR"], [22, 4, 1, "", "CC_FERR_CANCELED_BY_USER"], [22, 4, 1, "", "CC_FERR_CONSOLE_ERROR"], [22, 4, 1, "", "CC_FERR_FILE_WAS_WRITTEN_BY_UNKNOWN_PLUGIN"], [22, 4, 1, "", "CC_FERR_MALFORMED_FILE"], [22, 4, 1, "", "CC_FERR_NOT_ENOUGH_MEMORY"], [22, 4, 1, "", "CC_FERR_NOT_IMPLEMENTED"], [22, 4, 1, "", "CC_FERR_NO_ERROR"], [22, 4, 1, "", "CC_FERR_NO_LOAD"], [22, 4, 1, "", "CC_FERR_NO_SAVE"], [22, 4, 1, "", "CC_FERR_READING"], [22, 4, 1, "", "CC_FERR_THIRD_PARTY_LIB_EXCEPTION"], [22, 4, 1, "", "CC_FERR_THIRD_PARTY_LIB_FAILURE"], [22, 4, 1, "", "CC_FERR_UNKNOWN_FILE"], [22, 4, 1, "", "CC_FERR_WRITING"], [22, 4, 1, "", "CC_FERR_WRONG_FILE_TYPE"], [22, 2, 1, "", "__init__"], [22, 3, 1, "", "name"], [22, 3, 1, "", "value"]], "cloudComPy.CC_SENSOR_TYPE": [[21, 4, 1, "", "GROUND_BASED_LIDAR"], [21, 4, 1, "", "UNKNOWN_SENSOR"], [21, 2, 1, "", "__init__"], [21, 3, 1, "", "name"], [21, 3, 1, "", "value"]], "cloudComPy.CC_SHIFT_MODE": [[22, 4, 1, "", "AUTO"], [22, 4, 1, "", "FIRST_GLOBAL_SHIFT"], [22, 4, 1, "", "NO_GLOBAL_SHIFT"], [22, 4, 1, "", "XYZ"], [22, 2, 1, "", "__init__"], [22, 3, 1, "", "name"], [22, 3, 1, "", "value"]], "cloudComPy.CLONE_WARNINGS": [[18, 4, 1, "", "WRN_OUT_OF_MEM_FOR_COLORS"], [18, 4, 1, "", "WRN_OUT_OF_MEM_FOR_FWF"], [18, 4, 1, "", "WRN_OUT_OF_MEM_FOR_NORMALS"], [18, 4, 1, "", "WRN_OUT_OF_MEM_FOR_SFS"], [18, 2, 1, "", "__init__"], [18, 3, 1, "", "name"], [18, 3, 1, "", "value"]], "cloudComPy.CONVERGENCE_TYPE": [[22, 4, 1, "", "MAX_ERROR_CONVERGENCE"], [22, 4, 1, "", "MAX_ITER_CONVERGENCE"], [22, 2, 1, "", "__init__"], [22, 3, 1, "", "name"], [22, 3, 1, "", "value"]], "cloudComPy.CSF": [[0, 5, 1, "", "computeCSF"], [0, 5, 1, "", "initTrace_CSF"]], "cloudComPy.Canupo": [[1, 1, 1, "", "CORE_CLOUD_SOURCES"], [1, 5, 1, "", "Classify"]], "cloudComPy.Canupo.CORE_CLOUD_SOURCES": [[1, 4, 1, "", "MSC_FILE"], [1, 4, 1, "", "ORIGINAL"], [1, 4, 1, "", "OTHER"], [1, 4, 1, "", "SUBSAMPLED"], [1, 2, 1, "", "__init__"], [1, 3, 1, "", "name"], [1, 3, 1, "", "value"]], "cloudComPy.CellDescriptor": [[17, 2, 1, "", "__init__"], [17, 3, 1, "", "center"], [17, 3, 1, "", "index"]], "cloudComPy.Cloud2CloudDistancesComputationParams": [[2, 3, 1, "", "CPSet"], [2, 2, 1, "", "__init__"], [2, 2, 1, "", "getSplitDistance"], [2, 3, 1, "", "kNNForLocalModel"], [2, 3, 1, "", "localModel"], [2, 3, 1, "", "maxSearchDist"], [2, 3, 1, "", "maxThreadCount"], [2, 3, 1, "", "multiThread"], [2, 3, 1, "", "octreeLevel"], [2, 3, 1, "", "radiusForLocalModel"], [2, 3, 1, "", "resetFormerDistances"], [2, 3, 1, "", "reuseExistingLocalModels"], [2, 2, 1, "", "setSplitDistances"], [2, 3, 1, "", "useSphericalSearchForLocalModel"]], "cloudComPy.Cloud2MeshDistancesComputationParams": [[2, 3, 1, "", "CPSet"], [2, 2, 1, "", "__init__"], [2, 3, 1, "", "flipNormals"], [2, 3, 1, "", "maxSearchDist"], [2, 3, 1, "", "maxThreadCount"], [2, 3, 1, "", "multiThread"], [2, 3, 1, "", "octreeLevel"], [2, 3, 1, "", "signedDistances"], [2, 3, 1, "", "useDistanceMap"]], "cloudComPy.CloudSamplingTools": [[23, 2, 1, "", "__init__"], [23, 2, 1, "", "noiseFilter"], [23, 2, 1, "", "resampleCloudSpatially"], [23, 2, 1, "", "resampleCloudWithOctree"], [23, 2, 1, "", "resampleCloudWithOctreeAtLevel"], [23, 2, 1, "", "sorFilter"], [23, 2, 1, "", "subsampleCloudRandomly"], [23, 2, 1, "", "subsampleCloudWithOctree"], [23, 2, 1, "", "subsampleCloudWithOctreeAtLevel"]], "cloudComPy.CurvatureType": [[22, 4, 1, "", "GAUSSIAN_CURV"], [22, 4, 1, "", "MEAN_CURV"], [22, 4, 1, "", "NORMAL_CHANGE_RATE"], [22, 2, 1, "", "__init__"], [22, 3, 1, "", "name"], [22, 3, 1, "", "value"]], "cloudComPy.CylindricalNeighbourhood": [[17, 2, 1, "", "__init__"], [17, 3, 1, "", "center"], [17, 3, 1, "", "dir"], [17, 3, 1, "", "level"], [17, 3, 1, "", "maxHalfLength"], [17, 3, 1, "", "onlyPositiveDir"], [17, 3, 1, "", "radius"]], "cloudComPy.DEPENDENCY_FLAGS": [[18, 4, 1, "", "DP_DELETE_OTHER"], [18, 4, 1, "", "DP_NONE"], [18, 4, 1, "", "DP_NOTIFY_OTHER_ON_DELETE"], [18, 4, 1, "", "DP_NOTIFY_OTHER_ON_UPDATE"], [18, 4, 1, "", "DP_PARENT_OF_OTHER"], [18, 2, 1, "", "__init__"], [18, 3, 1, "", "name"], [18, 3, 1, "", "value"]], "cloudComPy.Density": [[3, 4, 1, "", "DENSITY_2D"], [3, 4, 1, "", "DENSITY_3D"], [3, 4, 1, "", "DENSITY_KNN"], [3, 2, 1, "", "__init__"], [3, 3, 1, "", "name"], [3, 3, 1, "", "value"]], "cloudComPy.DgmOctree": [[17, 2, 1, "", "GenerateTruncatedCellCode"], [17, 2, 1, "", "__init__"], [17, 2, 1, "", "computeCellCenter"], [17, 2, 1, "", "findBestLevelForAGivenCellNumber"], [17, 2, 1, "", "findBestLevelForAGivenNeighbourhoodSizeExtraction"], [17, 2, 1, "", "findBestLevelForAGivenPopulationPerCell"], [17, 2, 1, "", "findNearestNeighborsStartingFromCell"], [17, 2, 1, "", "findNeighborsInASphereStartingFromCell"], [17, 2, 1, "", "findPointNeighbourhood"], [17, 2, 1, "", "findTheNearestNeighborStartingFromCell"], [17, 2, 1, "", "getBoundingBox"], [17, 2, 1, "", "getCellCode"], [17, 2, 1, "", "getCellCodes"], [17, 2, 1, "", "getCellCodesAndIndexes"], [17, 2, 1, "", "getCellDistanceFromBorders"], [17, 2, 1, "", "getCellIndexes"], [17, 2, 1, "", "getCellNumber"], [17, 2, 1, "", "getCellPos"], [17, 2, 1, "", "getCellSize"], [17, 2, 1, "", "getMaxFillIndexes"], [17, 2, 1, "", "getMinFillIndexes"], [17, 2, 1, "", "getNumberOfProjectedPoints"], [17, 2, 1, "", "getOctreeMaxs"], [17, 2, 1, "", "getOctreeMins"], [17, 2, 1, "", "getPointsInBoxNeighbourhood"], [17, 2, 1, "", "getPointsInCell"], [17, 2, 1, "", "getPointsInCellByCellIndex"], [17, 2, 1, "", "getPointsInCellsWithSortedCellCodes"], [17, 2, 1, "", "getPointsInCylindricalNeighbourhood"], [17, 2, 1, "", "getPointsInCylindricalNeighbourhoodProgressive"], [17, 2, 1, "", "getPointsInSphericalNeighbourhood"], [17, 2, 1, "", "getTheCellPosWhichIncludesThePoint"], [17, 2, 1, "", "getTheCellPosWhichIncludesThePointInbBounds"]], "cloudComPy.DistanceComputationTools": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "computeApproxCloud2CloudDistance"], [2, 2, 1, "", "computeApproxCloud2MeshDistance"], [2, 2, 1, "", "computeCloud2CloudDistances"], [2, 2, 1, "", "computeCloud2MeshDistances"], [2, 2, 1, "", "determineBestOctreeLevel"]], "cloudComPy.EdgeConnectivityStats": [[16, 2, 1, "", "__init__"], [16, 3, 1, "", "edgesCount"], [16, 3, 1, "", "edgesNotShared"], [16, 3, 1, "", "edgesSharedByMore"], [16, 3, 1, "", "edgesSharedByTwo"]], "cloudComPy.EmptyCellFillOption": [[22, 4, 1, "", "FILL_AVERAGE_HEIGHT"], [22, 4, 1, "", "FILL_CUSTOM_HEIGHT"], [22, 4, 1, "", "FILL_MAXIMUM_HEIGHT"], [22, 4, 1, "", "FILL_MINIMUM_HEIGHT"], [22, 4, 1, "", "INTERPOLATE_DELAUNAY"], [22, 4, 1, "", "KRIGING"], [22, 4, 1, "", "LEAVE_EMPTY"], [22, 2, 1, "", "__init__"], [22, 3, 1, "", "name"], [22, 3, 1, "", "value"]], "cloudComPy.ErrorCode": [[3, 4, 1, "", "InvalidInput"], [3, 4, 1, "", "NoError"], [3, 4, 1, "", "NotEnoughMemory"], [3, 4, 1, "", "NotEnoughPoints"], [3, 4, 1, "", "OctreeComputationFailed"], [3, 4, 1, "", "ProcessCancelledByUser"], [3, 4, 1, "", "ProcessFailed"], [3, 4, 1, "", "UnhandledCharacteristic"], [3, 2, 1, "", "__init__"], [3, 3, 1, "", "name"], [3, 3, 1, "", "value"]], "cloudComPy.ExportableFields": [[22, 4, 1, "", "PER_CELL_AVG_HEIGHT"], [22, 4, 1, "", "PER_CELL_COUNT"], [22, 4, 1, "", "PER_CELL_HEIGHT"], [22, 4, 1, "", "PER_CELL_HEIGHT_RANGE"], [22, 4, 1, "", "PER_CELL_HEIGHT_STD_DEV"], [22, 4, 1, "", "PER_CELL_INVALID"], [22, 4, 1, "", "PER_CELL_MAX_HEIGHT"], [22, 4, 1, "", "PER_CELL_MIN_HEIGHT"], [22, 2, 1, "", "__init__"], [22, 3, 1, "", "name"], [22, 3, 1, "", "value"]], "cloudComPy.GenericIndexedCloudPersist": [[18, 2, 1, "", "__init__"]], "cloudComPy.GenericIndexedMesh": [[16, 2, 1, "", "__init__"]], "cloudComPy.GeomFeature": [[8, 4, 1, "", "Anisotropy"], [8, 4, 1, "", "EigenEntropy"], [8, 4, 1, "", "EigenValue1"], [8, 4, 1, "", "EigenValue2"], [8, 4, 1, "", "EigenValue3"], [8, 4, 1, "", "EigenValuesSum"], [8, 4, 1, "", "Linearity"], [8, 4, 1, "", "Omnivariance"], [8, 4, 1, "", "PCA1"], [8, 4, 1, "", "PCA2"], [8, 4, 1, "", "Planarity"], [8, 4, 1, "", "Sphericity"], [8, 4, 1, "", "SurfaceVariation"], [8, 4, 1, "", "Verticality"], [8, 2, 1, "", "__init__"], [8, 3, 1, "", "name"], [8, 3, 1, "", "value"]], "cloudComPy.GeometricalAnalysisTools": [[3, 2, 1, "", "FlagDuplicatePoints"], [3, 2, 1, "", "__init__"]], "cloudComPy.HPR": [[4, 5, 1, "", "computeHPR"], [4, 5, 1, "", "initTrace_HPR"]], "cloudComPy.ICPres": [[22, 2, 1, "", "__init__"], [22, 3, 1, "", "aligned"], [22, 3, 1, "", "finalPointCount"], [22, 3, 1, "", "finalRMS"], [22, 3, 1, "", "finalScale"], [22, 3, 1, "", "transMat"]], "cloudComPy.IndexAndCode": [[17, 2, 1, "", "__init__"], [17, 2, 1, "", "indexComp"], [17, 3, 1, "", "theCode"], [17, 3, 1, "", "theIndex"]], "cloudComPy.LOCAL_MODEL_TYPES": [[22, 4, 1, "", "LS"], [22, 4, 1, "", "NO_MODEL"], [22, 4, 1, "", "QUADRIC"], [22, 4, 1, "", "TRI"], [22, 2, 1, "", "__init__"], [22, 3, 1, "", "name"], [22, 3, 1, "", "value"]], "cloudComPy.M3C2": [[5, 5, 1, "", "M3C2guessParamsToFile"], [5, 5, 1, "", "computeM3C2"], [5, 5, 1, "", "initTrace_M3C2"]], "cloudComPy.MeshBoolean": [[6, 1, 1, "", "CSG_OPERATION"], [6, 5, 1, "", "computeMeshBoolean"], [6, 5, 1, "", "initTrace_MeshBoolean"]], "cloudComPy.MeshBoolean.CSG_OPERATION": [[6, 4, 1, "", "DIFF"], [6, 4, 1, "", "INTERSECT"], [6, 4, 1, "", "SYM_DIFF"], [6, 4, 1, "", "UNION"], [6, 2, 1, "", "__init__"], [6, 3, 1, "", "name"], [6, 3, 1, "", "value"]], "cloudComPy.NearestNeighboursSearchStruct": [[17, 2, 1, "", "__init__"], [17, 3, 1, "", "alreadyVisitedNeighbourhoodSize"], [17, 3, 1, "", "cellCenter"], [17, 3, 1, "", "cellPos"], [17, 3, 1, "", "level"], [17, 3, 1, "", "maxSearchSquareDistd"], [17, 3, 1, "", "minNumberOfNeighbors"], [17, 3, 1, "", "minimalCellsSetToVisit"], [17, 3, 1, "", "pointsInNeighbourhood"], [17, 3, 1, "", "queryPoint"], [17, 3, 1, "", "theNearestPointIndex"]], "cloudComPy.Orientation": [[22, 4, 1, "", "MINUS_BARYCENTER"], [22, 4, 1, "", "MINUS_ORIGIN"], [22, 4, 1, "", "MINUS_SENSOR_ORIGIN"], [22, 4, 1, "", "MINUS_X"], [22, 4, 1, "", "MINUS_Y"], [22, 4, 1, "", "MINUS_Z"], [22, 4, 1, "", "PLUS_BARYCENTER"], [22, 4, 1, "", "PLUS_ORIGIN"], [22, 4, 1, "", "PLUS_SENSOR_ORIGIN"], [22, 4, 1, "", "PLUS_X"], [22, 4, 1, "", "PLUS_Y"], [22, 4, 1, "", "PLUS_Z"], [22, 4, 1, "", "PREVIOUS"], [22, 4, 1, "", "UNDEFINED"], [22, 2, 1, "", "__init__"], [22, 3, 1, "", "name"], [22, 3, 1, "", "value"]], "cloudComPy.PCL": [[9, 1, 1, "", "FastGlobalRegistrationFilter"], [9, 1, 1, "", "MLSSmoothingUpsampling"], [9, 1, 1, "", "NormalEstimation"], [9, 5, 1, "", "initTrace_PCL"]], "cloudComPy.PCL.FastGlobalRegistrationFilter": [[9, 2, 1, "", "__init__"], [9, 2, 1, "", "compute"], [9, 2, 1, "", "getAutoRadius"], [9, 2, 1, "", "getTransformation"], [9, 2, 1, "", "setParameters"]], "cloudComPy.PCL.MLSSmoothingUpsampling": [[9, 2, 1, "", "__init__"], [9, 2, 1, "", "compute"], [9, 2, 1, "", "getOutputCloud"], [9, 2, 1, "", "setParameters"]], "cloudComPy.PCL.NormalEstimation": [[9, 2, 1, "", "__init__"], [9, 2, 1, "", "compute"], [9, 2, 1, "", "setParameters"]], "cloudComPy.PCV": [[10, 5, 1, "", "computeShadeVIS"], [10, 5, 1, "", "initTrace_PCV"]], "cloudComPy.PointCloudTpl_ccGenericPointCloud_QString": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "addPoint"], [18, 2, 1, "", "getPoint"], [18, 2, 1, "", "reserve"], [18, 2, 1, "", "resize"]], "cloudComPy.PointDescriptor": [[17, 2, 1, "", "__init__"], [17, 3, 1, "", "point"], [17, 3, 1, "", "pointIndex"], [17, 3, 1, "", "squareDistd"]], "cloudComPy.PoissonRecon": [[11, 1, 1, "", "BoundaryType"], [11, 1, 1, "", "PR"], [11, 5, 1, "", "initTrace_PoissonRecon"]], "cloudComPy.PoissonRecon.BoundaryType": [[11, 4, 1, "", "DIRICHLET"], [11, 4, 1, "", "FREE"], [11, 4, 1, "", "NEUMANN"], [11, 2, 1, "", "__init__"], [11, 3, 1, "", "name"], [11, 3, 1, "", "value"]], "cloudComPy.PoissonRecon.PR": [[11, 2, 1, "", "PoissonReconstruction"], [11, 2, 1, "", "__init__"]], "cloudComPy.Polyline": [[19, 2, 1, "", "__init__"], [19, 2, 1, "", "isClosed"], [19, 2, 1, "", "setClosed"]], "cloudComPy.ProgressiveCylindricalNeighbourhood": [[17, 2, 1, "", "__init__"], [17, 3, 1, "", "currentHalfLength"], [17, 3, 1, "", "potentialCandidates"], [17, 3, 1, "", "prevMaxCornerPos"], [17, 3, 1, "", "prevMinCornerPos"]], "cloudComPy.ProjectionType": [[22, 4, 1, "", "INVALID_PROJECTION_TYPE"], [22, 4, 1, "", "PROJ_AVERAGE_VALUE"], [22, 4, 1, "", "PROJ_INVERSE_VAR_VALUE"], [22, 4, 1, "", "PROJ_MAXIMUM_VALUE"], [22, 4, 1, "", "PROJ_MEDIAN_VALUE"], [22, 4, 1, "", "PROJ_MINIMUM_VALUE"], [22, 2, 1, "", "__init__"], [22, 3, 1, "", "name"], [22, 3, 1, "", "value"]], "cloudComPy.QColor": [[24, 2, 1, "", "__init__"], [24, 2, 1, "", "alpha"], [24, 2, 1, "", "alphaF"], [24, 2, 1, "", "black"], [24, 2, 1, "", "blackF"], [24, 2, 1, "", "blue"], [24, 2, 1, "", "blueF"], [24, 2, 1, "", "colorNames"], [24, 2, 1, "", "convertTo"], [24, 2, 1, "", "cyan"], [24, 2, 1, "", "cyanF"], [24, 2, 1, "", "darker"], [24, 2, 1, "", "fromCmyk"], [24, 2, 1, "", "fromCmykF"], [24, 2, 1, "", "fromHsl"], [24, 2, 1, "", "fromHslF"], [24, 2, 1, "", "fromHsv"], [24, 2, 1, "", "fromHsvF"], [24, 2, 1, "", "fromRgbF"], [24, 2, 1, "", "fromRgbUInt"], [24, 2, 1, "", "fromRgba"], [24, 2, 1, "", "fromRgba64Q"], [24, 2, 1, "", "getCmyk"], [24, 2, 1, "", "getCmykF"], [24, 2, 1, "", "getHsl"], [24, 2, 1, "", "getHslF"], [24, 2, 1, "", "getHsv"], [24, 2, 1, "", "getHsvF"], [24, 2, 1, "", "getRgb"], [24, 2, 1, "", "getRgbF"], [24, 2, 1, "", "green"], [24, 2, 1, "", "greenF"], [24, 2, 1, "", "hslHue"], [24, 2, 1, "", "hslHueF"], [24, 2, 1, "", "hslSaturation"], [24, 2, 1, "", "hslSaturationF"], [24, 2, 1, "", "hsvHue"], [24, 2, 1, "", "hsvHueF"], [24, 2, 1, "", "hsvSaturation"], [24, 2, 1, "", "hsvSaturationF"], [24, 2, 1, "", "hue"], [24, 2, 1, "", "hueF"], [24, 2, 1, "", "isValid"], [24, 2, 1, "", "isValidColor"], [24, 2, 1, "", "lighter"], [24, 2, 1, "", "lightness"], [24, 2, 1, "", "lightnessF"], [24, 2, 1, "", "magenta"], [24, 2, 1, "", "magentaF"], [24, 2, 1, "", "name"], [24, 2, 1, "", "nameARGB"], [24, 2, 1, "", "red"], [24, 2, 1, "", "redF"], [24, 2, 1, "", "rgb"], [24, 2, 1, "", "rgba"], [24, 2, 1, "", "rgba64"], [24, 2, 1, "", "saturation"], [24, 2, 1, "", "saturationF"], [24, 2, 1, "", "setAlpha"], [24, 2, 1, "", "setAlphaF"], [24, 2, 1, "", "setBlue"], [24, 2, 1, "", "setBlueF"], [24, 2, 1, "", "setCmyk"], [24, 2, 1, "", "setCmykF"], [24, 2, 1, "", "setGreen"], [24, 2, 1, "", "setGreenF"], [24, 2, 1, "", "setHsl"], [24, 2, 1, "", "setHslF"], [24, 2, 1, "", "setHsv"], [24, 2, 1, "", "setHsvF"], [24, 2, 1, "", "setNamedColor"], [24, 2, 1, "", "setRed"], [24, 2, 1, "", "setRedF"], [24, 2, 1, "", "setRgb"], [24, 2, 1, "", "setRgbUInt"], [24, 2, 1, "", "setRgba64"], [24, 2, 1, "", "spec"], [24, 2, 1, "", "toCmyk"], [24, 2, 1, "", "toHsl"], [24, 2, 1, "", "toHsv"], [24, 2, 1, "", "toRgb"], [24, 2, 1, "", "value"], [24, 2, 1, "", "valueF"], [24, 2, 1, "", "yellow"], [24, 2, 1, "", "yellowF"]], "cloudComPy.QColorSpec": [[24, 4, 1, "", "Cmyk"], [24, 4, 1, "", "Hsl"], [24, 4, 1, "", "Hsv"], [24, 4, 1, "", "Invalid"], [24, 4, 1, "", "Rgb"], [24, 2, 1, "", "__init__"], [24, 3, 1, "", "name"], [24, 3, 1, "", "value"]], "cloudComPy.QRgba64": [[24, 2, 1, "", "__init__"], [24, 2, 1, "", "alpha"], [24, 2, 1, "", "alpha8"], [24, 2, 1, "", "blue"], [24, 2, 1, "", "blue8"], [24, 2, 1, "", "fromArgb32"], [24, 2, 1, "", "fromQuint64"], [24, 2, 1, "", "fromRgba"], [24, 2, 1, "", "fromRgba64"], [24, 2, 1, "", "fromRgba64Q"], [24, 2, 1, "", "green"], [24, 2, 1, "", "green8"], [24, 2, 1, "", "isOpaque"], [24, 2, 1, "", "isTransparent"], [24, 2, 1, "", "premultiplied"], [24, 2, 1, "", "red"], [24, 2, 1, "", "red8"], [24, 2, 1, "", "setAlpha"], [24, 2, 1, "", "setBlue"], [24, 2, 1, "", "setGreen"], [24, 2, 1, "", "setRed"], [24, 2, 1, "", "toArgb32"], [24, 2, 1, "", "toQuint64"], [24, 2, 1, "", "toRgb16"], [24, 2, 1, "", "unpremultiplied"]], "cloudComPy.RANSAC_SD": [[12, 1, 1, "", "RansacParams"], [12, 5, 1, "", "computeRANSAC_SD"], [12, 5, 1, "", "initTrace_RANSAC_SD"]], "cloudComPy.RANSAC_SD.RansacParams": [[12, 2, 1, "", "__init__"], [12, 3, 1, "", "allowFitting"], [12, 3, 1, "", "allowSimplification"], [12, 3, 1, "", "bitmapEpsilon"], [12, 3, 1, "", "createCloudFromLeftOverPoints"], [12, 3, 1, "", "epsilon"], [12, 2, 1, "", "getPrimEnabled"], [12, 3, 1, "", "maxConeAngle_deg"], [12, 3, 1, "", "maxConeLength"], [12, 3, 1, "", "maxConeRadius"], [12, 3, 1, "", "maxCylinderLength"], [12, 3, 1, "", "maxCylinderRadius"], [12, 3, 1, "", "maxNormalDev_deg"], [12, 3, 1, "", "maxSphereRadius"], [12, 3, 1, "", "maxTorusMajorRadius"], [12, 3, 1, "", "maxTorusMinorRadius"], [12, 3, 1, "", "minCylinderRadius"], [12, 3, 1, "", "minSphereRadius"], [12, 3, 1, "", "minTorusMajorRadius"], [12, 3, 1, "", "minTorusMinorRadius"], [12, 2, 1, "", "optimizeForCloud"], [12, 3, 1, "", "probability"], [12, 3, 1, "", "randomColor"], [12, 2, 1, "", "setPrimEnabled"], [12, 3, 1, "", "supportPoints"]], "cloudComPy.RESAMPLING_CELL_METHOD": [[23, 4, 1, "", "CELL_CENTER"], [23, 4, 1, "", "CELL_GRAVITY_CENTER"], [23, 2, 1, "", "__init__"], [23, 3, 1, "", "name"], [23, 3, 1, "", "value"]], "cloudComPy.ROTATION_ORDER": [[21, 4, 1, "", "PITCH_THEN_YAW"], [21, 4, 1, "", "YAW_THEN_PITCH"], [21, 2, 1, "", "__init__"], [21, 3, 1, "", "name"], [21, 3, 1, "", "value"]], "cloudComPy.ReferenceCloud": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "addPointIndex"], [18, 2, 1, "", "addPointIndexGlobal"], [18, 2, 1, "", "enableScalarField"], [18, 2, 1, "", "forwardIterator"], [18, 2, 1, "", "getAssociatedCloud"], [18, 2, 1, "", "getBoundingBox"], [18, 2, 1, "", "getCurrentPointCoordinates"], [18, 2, 1, "", "getCurrentPointGlobalIndex"], [18, 2, 1, "", "getCurrentPointScalarValue"], [18, 2, 1, "", "getNextPoint"], [18, 2, 1, "", "getPoint"], [18, 2, 1, "", "getPointGlobalIndex"], [18, 2, 1, "", "getPointScalarValue"], [18, 2, 1, "", "isScalarFieldEnabled"], [18, 2, 1, "", "placeIteratorAtBeginning"], [18, 2, 1, "", "setCurrentPointScalarValue"], [18, 2, 1, "", "setPointScalarValue"], [18, 2, 1, "", "size"]], "cloudComPy.ReportInfoVol": [[22, 2, 1, "", "__init__"], [22, 3, 1, "", "addedVolume"], [22, 3, 1, "", "averageNeighborsPerCell"], [22, 3, 1, "", "ceilNonMatchingPercent"], [22, 3, 1, "", "groundNonMatchingPercent"], [22, 3, 1, "", "matchingPercent"], [22, 3, 1, "", "removedVolume"], [22, 3, 1, "", "surface"], [22, 3, 1, "", "volume"]], "cloudComPy.SFModulationParams": [[23, 2, 1, "", "__init__"], [23, 3, 1, "", "a"], [23, 3, 1, "", "b"], [23, 3, 1, "", "enabled"]], "cloudComPy.SRA": [[13, 1, 1, "", "DEFAULT_SCALES"], [13, 1, 1, "", "EmptyCellFillOption"], [13, 1, 1, "", "FillStrategyType"], [13, 5, 1, "", "exportMapAsCloud"], [13, 5, 1, "", "exportMapAsMesh"], [13, 5, 1, "", "initTrace_SRA"], [13, 5, 1, "", "loadProfile"], [13, 1, 1, "", "qSRA"]], "cloudComPy.SRA.DEFAULT_SCALES": [[13, 4, 1, "", "ABS_NORM_GREY"], [13, 4, 1, "", "BGYR"], [13, 4, 1, "", "BROWN_YELLOW"], [13, 4, 1, "", "BWR"], [13, 4, 1, "", "DIP_BRYW"], [13, 4, 1, "", "DIP_DIR_REPEAT"], [13, 4, 1, "", "GREY"], [13, 4, 1, "", "HIGH_CONTRAST"], [13, 4, 1, "", "HSV_360_DEG"], [13, 4, 1, "", "RW"], [13, 4, 1, "", "RY"], [13, 4, 1, "", "TOPO_LANDSERF"], [13, 4, 1, "", "VERTEX_QUALITY"], [13, 4, 1, "", "VIRIDIS"], [13, 4, 1, "", "YELLOW_BROWN"], [13, 2, 1, "", "__init__"], [13, 3, 1, "", "name"], [13, 3, 1, "", "value"]], "cloudComPy.SRA.EmptyCellFillOption": [[13, 4, 1, "", "FILL_INTERPOLATE"], [13, 4, 1, "", "FILL_WITH_ZERO"], [13, 4, 1, "", "LEAVE_EMPTY"], [13, 2, 1, "", "__init__"], [13, 3, 1, "", "name"], [13, 3, 1, "", "value"]], "cloudComPy.SRA.FillStrategyType": [[13, 4, 1, "", "FILL_STRAT_AVG_DIST"], [13, 4, 1, "", "FILL_STRAT_MAX_DIST"], [13, 4, 1, "", "FILL_STRAT_MIN_DIST"], [13, 4, 1, "", "INVALID_STRATEGY_TYPE"], [13, 2, 1, "", "__init__"], [13, 3, 1, "", "name"], [13, 3, 1, "", "value"]], "cloudComPy.SRA.qSRA": [[13, 2, 1, "", "__init__"], [13, 2, 1, "", "doComputeRadialDists"]], "cloudComPy.SUBSAMPLING_CELL_METHOD": [[23, 4, 1, "", "NEAREST_POINT_TO_CELL_CENTER"], [23, 4, 1, "", "RANDOM_POINT"], [23, 2, 1, "", "__init__"], [23, 3, 1, "", "name"], [23, 3, 1, "", "value"]], "cloudComPy.ScalarField": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "addElement"], [14, 2, 1, "", "computeMeanAndVariance"], [14, 2, 1, "", "computeMinAndMax"], [14, 2, 1, "", "currentSize"], [14, 2, 1, "", "fill"], [14, 2, 1, "", "flagValueAsInvalid"], [14, 2, 1, "", "fromNpArrayCopy"], [14, 2, 1, "", "getMax"], [14, 2, 1, "", "getMin"], [14, 2, 1, "", "getName"], [14, 2, 1, "", "getValue"], [14, 2, 1, "", "reserveSafe"], [14, 2, 1, "", "resizeSafe"], [14, 2, 1, "", "setName"], [14, 2, 1, "", "setValue"], [14, 2, 1, "", "swap"], [14, 2, 1, "", "toNpArray"], [14, 2, 1, "", "toNpArrayCopy"]], "cloudComPy.TRANSFORMATION_FILTERS": [[22, 4, 1, "", "SKIP_NONE"], [22, 4, 1, "", "SKIP_ROTATION"], [22, 4, 1, "", "SKIP_RXY"], [22, 4, 1, "", "SKIP_RXZ"], [22, 4, 1, "", "SKIP_RYZ"], [22, 4, 1, "", "SKIP_TRANSLATION"], [22, 4, 1, "", "SKIP_TX"], [22, 4, 1, "", "SKIP_TY"], [22, 4, 1, "", "SKIP_TZ"], [22, 2, 1, "", "__init__"], [22, 3, 1, "", "name"], [22, 3, 1, "", "value"]], "cloudComPy.TRIANGULATION_TYPES": [[16, 4, 1, "", "DELAUNAY_2D_AXIS_ALIGNED"], [16, 4, 1, "", "DELAUNAY_2D_BEST_LS_PLANE"], [16, 2, 1, "", "__init__"], [16, 3, 1, "", "name"], [16, 3, 1, "", "value"]], "cloudComPy.ccBBox": [[22, 2, 1, "", "__init__"], [22, 2, 1, "", "maxCorner"], [22, 2, 1, "", "minCorner"]], "cloudComPy.ccBox": [[20, 2, 1, "", "__init__"], [20, 2, 1, "", "getDimensions"], [20, 2, 1, "", "setDimensions"]], "cloudComPy.ccCone": [[20, 2, 1, "", "__init__"], [20, 2, 1, "", "getBottomCenter"], [20, 2, 1, "", "getBottomRadius"], [20, 2, 1, "", "getHeight"], [20, 2, 1, "", "getLargeCenter"], [20, 2, 1, "", "getLargeRadius"], [20, 2, 1, "", "getSmallCenter"], [20, 2, 1, "", "getSmallRadius"], [20, 2, 1, "", "getTopCenter"], [20, 2, 1, "", "getTopRadius"], [20, 2, 1, "", "setBottomRadius"], [20, 2, 1, "", "setHeight"], [20, 2, 1, "", "setTopRadius"]], "cloudComPy.ccCylinder": [[20, 2, 1, "", "__init__"], [20, 2, 1, "", "setRadius"]], "cloudComPy.ccDish": [[20, 2, 1, "", "__init__"]], "cloudComPy.ccFacet": [[15, 2, 1, "", "Create"], [15, 2, 1, "", "__init__"], [15, 2, 1, "", "addChild"], [15, 2, 1, "", "clone"], [15, 2, 1, "", "colorsShown"], [15, 2, 1, "", "countRef"], [15, 2, 1, "", "decRef"], [15, 2, 1, "", "getCenter"], [15, 2, 1, "", "getChild"], [15, 2, 1, "", "getChildCountRecursive"], [15, 2, 1, "", "getChildrenNumber"], [15, 2, 1, "", "getClassID"], [15, 2, 1, "", "getContour"], [15, 2, 1, "", "getContourVertices"], [15, 2, 1, "", "getName"], [15, 2, 1, "", "getNormal"], [15, 2, 1, "", "getOriginPoints"], [15, 2, 1, "", "getParent"], [15, 2, 1, "", "getPlaneEquation"], [15, 2, 1, "", "getPolygon"], [15, 2, 1, "", "getRMS"], [15, 2, 1, "", "getSurface"], [15, 2, 1, "", "hasColors"], [15, 2, 1, "", "hasNormals"], [15, 2, 1, "", "hasScalarFields"], [15, 2, 1, "", "incRef"], [15, 2, 1, "", "invertNormal"], [15, 2, 1, "", "isA"], [15, 2, 1, "", "isKindOf"], [15, 2, 1, "", "normalsShown"], [15, 2, 1, "", "setContour"], [15, 2, 1, "", "setContourVertices"], [15, 2, 1, "", "setName"], [15, 2, 1, "", "setOriginPoints"], [15, 2, 1, "", "setPolygon"], [15, 2, 1, "", "sfShown"], [15, 2, 1, "", "showColors"], [15, 2, 1, "", "showNormals"], [15, 2, 1, "", "showSF"]], "cloudComPy.ccGBLSensor": [[21, 2, 1, "", "__init__"], [21, 2, 1, "", "getType"], [21, 2, 1, "", "getUncertainty"]], "cloudComPy.ccGLMatrix": [[20, 2, 1, "", "FromToRotation"], [20, 2, 1, "", "FromViewDirAndUpDir"], [20, 2, 1, "", "Interpolate"], [20, 2, 1, "", "__init__"], [20, 2, 1, "", "clearTranslation"], [20, 2, 1, "", "data"], [20, 2, 1, "", "fromDouble"], [20, 2, 1, "", "fromString"], [20, 2, 1, "", "getColumn"], [20, 2, 1, "", "getParameters1"], [20, 2, 1, "", "getParameters2"], [20, 2, 1, "", "initFromParameters"], [20, 2, 1, "", "inverse"], [20, 2, 1, "", "invert"], [20, 2, 1, "", "toString"], [20, 2, 1, "", "transpose"], [20, 2, 1, "", "transposed"], [20, 2, 1, "", "xRotation"], [20, 2, 1, "", "yRotation"], [20, 2, 1, "", "zRotation"]], "cloudComPy.ccGLMatrixParams1_double": [[20, 2, 1, "", "__init__"], [20, 3, 1, "", "alpha_rad"], [20, 3, 1, "", "axis3D"], [20, 3, 1, "", "t3D"]], "cloudComPy.ccGLMatrixParams1_float": [[20, 2, 1, "", "__init__"], [20, 3, 1, "", "alpha_rad"], [20, 3, 1, "", "axis3D"], [20, 3, 1, "", "t3D"]], "cloudComPy.ccGLMatrixParams2_double": [[20, 2, 1, "", "__init__"], [20, 3, 1, "", "phi_rad"], [20, 3, 1, "", "psi_rad"], [20, 3, 1, "", "t3D"], [20, 3, 1, "", "theta_rad"]], "cloudComPy.ccGLMatrixParams2_float": [[20, 2, 1, "", "__init__"], [20, 3, 1, "", "phi_rad"], [20, 3, 1, "", "psi_rad"], [20, 3, 1, "", "t3D"], [20, 3, 1, "", "theta_rad"]], "cloudComPy.ccGLMatrixd": [[20, 2, 1, "", "FromToRotation"], [20, 2, 1, "", "FromViewDirAndUpDir"], [20, 2, 1, "", "Interpolate"], [20, 2, 1, "", "__init__"], [20, 2, 1, "", "clearTranslation"], [20, 2, 1, "", "data"], [20, 2, 1, "", "fromString"], [20, 2, 1, "", "getColumn"], [20, 2, 1, "", "getParameters1"], [20, 2, 1, "", "getParameters2"], [20, 2, 1, "", "initFromParameters"], [20, 2, 1, "", "inverse"], [20, 2, 1, "", "invert"], [20, 2, 1, "", "toString"], [20, 2, 1, "", "transpose"], [20, 2, 1, "", "transposed"], [20, 2, 1, "", "xRotation"], [20, 2, 1, "", "yRotation"], [20, 2, 1, "", "zRotation"]], "cloudComPy.ccGenericMesh": [[16, 2, 1, "", "__init__"], [16, 2, 1, "", "addChild"], [16, 2, 1, "", "colorsShown"], [16, 2, 1, "", "computeMeshArea"], [16, 2, 1, "", "countRef"], [16, 2, 1, "", "decRef"], [16, 2, 1, "", "flagVerticesByType"], [16, 2, 1, "", "getChild"], [16, 2, 1, "", "getChildCountRecursive"], [16, 2, 1, "", "getChildrenNumber"], [16, 2, 1, "", "getClassID"], [16, 2, 1, "", "getGlobalScale"], [16, 2, 1, "", "getGlobalShift"], [16, 2, 1, "", "getName"], [16, 2, 1, "", "getParent"], [16, 2, 1, "", "hasColors"], [16, 2, 1, "", "hasNormals"], [16, 2, 1, "", "hasScalarFields"], [16, 2, 1, "", "incRef"], [16, 2, 1, "", "isA"], [16, 2, 1, "", "isKindOf"], [16, 2, 1, "", "isShifted"], [16, 2, 1, "", "normalsShown"], [16, 2, 1, "", "samplePoints"], [16, 2, 1, "", "setGlobalScale"], [16, 2, 1, "", "setGlobalShift"], [16, 2, 1, "", "setName"], [16, 2, 1, "", "sfShown"], [16, 2, 1, "", "showColors"], [16, 2, 1, "", "showNormals"], [16, 2, 1, "", "showSF"]], "cloudComPy.ccGenericPointCloud": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "computeOctree"], [18, 2, 1, "", "deleteOctree"], [18, 2, 1, "", "getOctree"], [18, 2, 1, "", "getOwnBB"]], "cloudComPy.ccGenericPrimitive": [[20, 2, 1, "", "__init__"], [20, 2, 1, "", "getTransformation"], [20, 2, 1, "", "getTypeName"]], "cloudComPy.ccHObject": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "addChild"], [18, 2, 1, "", "colorsShown"], [18, 2, 1, "", "countRef"], [18, 2, 1, "", "decRef"], [18, 2, 1, "", "getChild"], [18, 2, 1, "", "getChildCountRecursive"], [18, 2, 1, "", "getChildrenNumber"], [18, 2, 1, "", "getClassID"], [18, 2, 1, "", "getName"], [18, 2, 1, "", "getParent"], [18, 2, 1, "", "hasColors"], [18, 2, 1, "", "hasNormals"], [18, 2, 1, "", "hasScalarFields"], [18, 2, 1, "", "incRef"], [18, 2, 1, "", "isA"], [18, 2, 1, "", "isKindOf"], [18, 2, 1, "", "normalsShown"], [18, 2, 1, "", "setName"], [18, 2, 1, "", "sfShown"], [18, 2, 1, "", "showColors"], [18, 2, 1, "", "showNormals"], [18, 2, 1, "", "showSF"]], "cloudComPy.ccMesh": [[16, 2, 1, "", "IndexesToNpArray"], [16, 2, 1, "", "IndexesToNpArray_copy"], [16, 2, 1, "", "__init__"], [16, 2, 1, "", "addChild"], [16, 2, 1, "", "clearTriNormals"], [16, 2, 1, "", "cloneMesh"], [16, 2, 1, "", "colorsShown"], [16, 2, 1, "", "computeMeshArea"], [16, 2, 1, "", "computeMeshVolume"], [16, 2, 1, "", "countRef"], [16, 2, 1, "", "crop2D"], [16, 2, 1, "", "decRef"], [16, 2, 1, "", "flagVerticesByType"], [16, 2, 1, "", "flipTriangles"], [16, 2, 1, "", "getAssociatedCloud"], [16, 2, 1, "", "getChild"], [16, 2, 1, "", "getChildCountRecursive"], [16, 2, 1, "", "getChildrenNumber"], [16, 2, 1, "", "getClassID"], [16, 2, 1, "", "getGlobalScale"], [16, 2, 1, "", "getGlobalShift"], [16, 2, 1, "", "getName"], [16, 2, 1, "", "getParent"], [16, 2, 1, "", "getTriangleVertIndexes"], [16, 2, 1, "", "hasColors"], [16, 2, 1, "", "hasNormals"], [16, 2, 1, "", "hasScalarFields"], [16, 2, 1, "", "incRef"], [16, 2, 1, "", "isA"], [16, 2, 1, "", "isKindOf"], [16, 2, 1, "", "isShifted"], [16, 2, 1, "", "laplacianSmooth"], [16, 2, 1, "", "normalsShown"], [16, 2, 1, "", "samplePoints"], [16, 2, 1, "", "setGlobalScale"], [16, 2, 1, "", "setGlobalShift"], [16, 2, 1, "", "setName"], [16, 2, 1, "", "sfShown"], [16, 2, 1, "", "showColors"], [16, 2, 1, "", "showNormals"], [16, 2, 1, "", "showSF"], [16, 2, 1, "", "size"], [16, 2, 1, "", "subdivide"], [16, 2, 1, "", "triangulate"], [16, 2, 1, "", "triangulateTwoPolylines"]], "cloudComPy.ccPlane": [[20, 2, 1, "", "Fit"], [20, 2, 1, "", "__init__"], [20, 2, 1, "", "getCenter"], [20, 2, 1, "", "getEquation"], [20, 2, 1, "", "getNormal"], [20, 2, 1, "", "setXWidth"], [20, 2, 1, "", "setYWidth"]], "cloudComPy.ccPointCloud": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "addChild"], [18, 2, 1, "", "addPoint"], [18, 2, 1, "", "addScalarField"], [18, 2, 1, "", "applyRigidTransformation"], [18, 2, 1, "", "changeColorLevels"], [18, 2, 1, "", "cloneThis"], [18, 2, 1, "", "colorize"], [18, 2, 1, "", "colorsFromNPArray_copy"], [18, 2, 1, "", "colorsShown"], [18, 2, 1, "", "colorsToNpArray"], [18, 2, 1, "", "colorsToNpArrayCopy"], [18, 2, 1, "", "computeGravityCenter"], [18, 2, 1, "", "computeOctree"], [18, 2, 1, "", "computeScalarFieldGradient"], [18, 2, 1, "", "convertCurrentScalarFieldToColors"], [18, 2, 1, "", "convertNormalToDipDirSFs"], [18, 2, 1, "", "convertNormalToRGB"], [18, 2, 1, "", "convertRGBToGreyScale"], [18, 2, 1, "", "coordsFromNPArray_copy"], [18, 2, 1, "", "countRef"], [18, 2, 1, "", "crop2D"], [18, 2, 1, "", "decRef"], [18, 2, 1, "", "deleteAllScalarFields"], [18, 2, 1, "", "deleteOctree"], [18, 2, 1, "", "deleteScalarField"], [18, 2, 1, "", "enhanceRGBWithIntensitySF"], [18, 2, 1, "", "exportCoordToSF"], [18, 2, 1, "", "exportNormalToSF"], [18, 2, 1, "", "filterPointsByScalarValue"], [18, 2, 1, "", "fuse"], [18, 2, 1, "", "getChild"], [18, 2, 1, "", "getChildCountRecursive"], [18, 2, 1, "", "getChildrenNumber"], [18, 2, 1, "", "getClassID"], [18, 2, 1, "", "getCurrentDisplayedScalarField"], [18, 2, 1, "", "getCurrentDisplayedScalarFieldIndex"], [18, 2, 1, "", "getCurrentInScalarField"], [18, 2, 1, "", "getCurrentOutScalarField"], [18, 2, 1, "", "getGlobalScale"], [18, 2, 1, "", "getGlobalShift"], [18, 2, 1, "", "getName"], [18, 2, 1, "", "getNumberOfScalarFields"], [18, 2, 1, "", "getOctree"], [18, 2, 1, "", "getOwnBB"], [18, 2, 1, "", "getParent"], [18, 2, 1, "", "getPoint"], [18, 2, 1, "", "getScalarField"], [18, 2, 1, "", "getScalarFieldDic"], [18, 2, 1, "", "getScalarFieldName"], [18, 2, 1, "", "getSensors"], [18, 2, 1, "", "hasColors"], [18, 2, 1, "", "hasNormals"], [18, 2, 1, "", "hasScalarFields"], [18, 2, 1, "", "incRef"], [18, 2, 1, "", "interpolateColorsFrom"], [18, 2, 1, "", "isA"], [18, 2, 1, "", "isKindOf"], [18, 2, 1, "", "isShifted"], [18, 2, 1, "", "normalsFromNpArrayCopy"], [18, 2, 1, "", "normalsShown"], [18, 2, 1, "", "normalsToNpArrayCopy"], [18, 2, 1, "", "orientNormalsWithFM"], [18, 2, 1, "", "orientNormalsWithMST"], [18, 2, 1, "", "partialClone"], [18, 2, 1, "", "renameScalarField"], [18, 2, 1, "", "reserve"], [18, 2, 1, "", "resize"], [18, 2, 1, "", "scale"], [18, 2, 1, "", "setColor"], [18, 2, 1, "", "setColorGradient"], [18, 2, 1, "", "setColorGradientBanded"], [18, 2, 1, "", "setColorGradientDefault"], [18, 2, 1, "", "setCurrentDisplayedScalarField"], [18, 2, 1, "", "setCurrentInScalarField"], [18, 2, 1, "", "setCurrentOutScalarField"], [18, 2, 1, "", "setCurrentScalarField"], [18, 2, 1, "", "setGlobalScale"], [18, 2, 1, "", "setGlobalShift"], [18, 2, 1, "", "setName"], [18, 2, 1, "", "sfFromColor"], [18, 2, 1, "", "sfShown"], [18, 2, 1, "", "shiftPointsAlongNormals"], [18, 2, 1, "", "showColors"], [18, 2, 1, "", "showNormals"], [18, 2, 1, "", "showSF"], [18, 2, 1, "", "showSFColorsScale"], [18, 2, 1, "", "shrinkToFit"], [18, 2, 1, "", "size"], [18, 2, 1, "", "toNpArray"], [18, 2, 1, "", "toNpArrayCopy"], [18, 2, 1, "", "translate"], [18, 2, 1, "", "unallocateColors"], [18, 2, 1, "", "unallocateNorms"]], "cloudComPy.ccPolyline": [[19, 2, 1, "", "__init__"], [19, 2, 1, "", "addChild"], [19, 2, 1, "", "addPointIndex"], [19, 2, 1, "", "addPointIndexGlobal"], [19, 2, 1, "", "colorsShown"], [19, 2, 1, "", "computeLength"], [19, 2, 1, "", "countRef"], [19, 2, 1, "", "decRef"], [19, 2, 1, "", "enableScalarField"], [19, 2, 1, "", "forwardIterator"], [19, 2, 1, "", "generateOrthoSections"], [19, 2, 1, "", "getAssociatedCloud"], [19, 2, 1, "", "getBoundingBox"], [19, 2, 1, "", "getChild"], [19, 2, 1, "", "getChildCountRecursive"], [19, 2, 1, "", "getChildrenNumber"], [19, 2, 1, "", "getClassID"], [19, 2, 1, "", "getCurrentPointCoordinates"], [19, 2, 1, "", "getCurrentPointGlobalIndex"], [19, 2, 1, "", "getCurrentPointScalarValue"], [19, 2, 1, "", "getGlobalScale"], [19, 2, 1, "", "getGlobalShift"], [19, 2, 1, "", "getName"], [19, 2, 1, "", "getNextPoint"], [19, 2, 1, "", "getParent"], [19, 2, 1, "", "getPoint"], [19, 2, 1, "", "getPointGlobalIndex"], [19, 2, 1, "", "getPointScalarValue"], [19, 2, 1, "", "hasColors"], [19, 2, 1, "", "hasNormals"], [19, 2, 1, "", "hasScalarFields"], [19, 2, 1, "", "incRef"], [19, 2, 1, "", "is2DMode"], [19, 2, 1, "", "isA"], [19, 2, 1, "", "isClosed"], [19, 2, 1, "", "isKindOf"], [19, 2, 1, "", "isScalarFieldEnabled"], [19, 2, 1, "", "isShifted"], [19, 2, 1, "", "normalsShown"], [19, 2, 1, "", "placeIteratorAtBeginning"], [19, 2, 1, "", "samplePoints"], [19, 2, 1, "", "segmentCount"], [19, 2, 1, "", "set2DMode"], [19, 2, 1, "", "setClosed"], [19, 2, 1, "", "setCurrentPointScalarValue"], [19, 2, 1, "", "setGlobalScale"], [19, 2, 1, "", "setGlobalShift"], [19, 2, 1, "", "setName"], [19, 2, 1, "", "setPointScalarValue"], [19, 2, 1, "", "sfShown"], [19, 2, 1, "", "showColors"], [19, 2, 1, "", "showNormals"], [19, 2, 1, "", "showSF"], [19, 2, 1, "", "size"], [19, 2, 1, "", "smoothChaikin"]], "cloudComPy.ccQuadric": [[20, 2, 1, "", "__init__"]], "cloudComPy.ccScalarField": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "addElement"], [14, 2, 1, "", "computeMeanAndVariance"], [14, 2, 1, "", "computeMinAndMax"], [14, 2, 1, "", "currentSize"], [14, 2, 1, "", "fill"], [14, 2, 1, "", "flagValueAsInvalid"], [14, 2, 1, "", "fromNpArrayCopy"], [14, 2, 1, "", "getGlobalShift"], [14, 2, 1, "", "getMax"], [14, 2, 1, "", "getMin"], [14, 2, 1, "", "getName"], [14, 2, 1, "", "getValue"], [14, 2, 1, "", "isSerializable"], [14, 2, 1, "", "reserveSafe"], [14, 2, 1, "", "resizeSafe"], [14, 2, 1, "", "setName"], [14, 2, 1, "", "setValue"], [14, 2, 1, "", "swap"], [14, 2, 1, "", "toNpArray"], [14, 2, 1, "", "toNpArrayCopy"]], "cloudComPy.ccSensor": [[21, 2, 1, "", "ComputeScatteringAngles"], [21, 2, 1, "", "__init__"], [21, 2, 1, "", "addPosition"], [21, 2, 1, "", "getGraphicScale"], [21, 2, 1, "", "getRigidTransformation"], [21, 2, 1, "", "getType"], [21, 2, 1, "", "setGraphicScale"], [21, 2, 1, "", "setRigidTransformation"]], "cloudComPy.ccShiftedObject": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "getGlobalScale"], [18, 2, 1, "", "getGlobalShift"], [18, 2, 1, "", "isShifted"], [18, 2, 1, "", "setGlobalScale"], [18, 2, 1, "", "setGlobalShift"]], "cloudComPy.ccSphere": [[20, 2, 1, "", "__init__"], [20, 2, 1, "", "getRadius"], [20, 2, 1, "", "setRadius"]], "cloudComPy.ccTorus": [[20, 2, 1, "", "__init__"]], "cloudComPy.interpolatorParameters": [[22, 2, 1, "", "__init__"], [22, 3, 1, "", "algos"], [22, 3, 1, "", "knn"], [22, 3, 1, "", "method"], [22, 3, 1, "", "radius"], [22, 3, 1, "", "sigma"]], "cloudComPy.minimalBoundingBox": [[7, 5, 1, "", "dist2"], [7, 5, 1, "", "findRotation"], [7, 5, 1, "", "isocahedron"], [7, 5, 1, "", "section"], [7, 5, 1, "", "zinv"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:attribute", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"]}, "titleterms": {"csf": [0, 34], "plugin": [0, 1, 4, 5, 6, 7, 9, 10, 11, 12, 13, 25, 34], "canupo": [1, 34], "distanc": [2, 34], "comput": [2, 34], "tool": [2, 3, 23], "paramet": [2, 23, 31], "geometr": 3, "analysi": 3, "hpr": [4, 34], "m3c2": [5, 34], "meshboolean": [6, 34], "minimalboundingbox": 7, "python": [7, 25], "neighbourhood": [8, 17, 34], "pcl": [9, 34], "pcv": [10, 34], "poissonrecon": 11, "ransac_sd": 12, "sra": [13, 34], "scalar": [14, 29, 32, 34], "field": [14, 29, 32, 34], "ccscalarfield": 14, "base": [14, 16, 18, 19], "class": [14, 16, 18, 19, 24], "2d": [15, 29], "polygon": [15, 29], "ccfacet": 15, "mesh": [16, 29, 31, 32, 33, 34], "ccmesh": 16, "octre": [17, 29, 34], "descriptor": 17, "structur": [17, 31], "point": [18, 31, 32, 33, 34], "cloud": [18, 23, 29, 31, 32, 33, 34], "ccpointcloud": 18, "polylin": [19, 29, 31, 34], "ccpolylin": 19, "ccprimit": 20, "box": [20, 29, 34], "cone": [20, 29], "cylind": [20, 29], "plane": [20, 29], "quadric": [20, 29], "sphere": [20, 29], "toru": [20, 29], "dish": [20, 29], "gener": [20, 28, 29, 34], "primit": [20, 29, 34], "transform": [20, 29], "rotat": 20, "translat": 20, "matrix": 20, "sensor": [21, 29], "ccgblsensor": 21, "ccsensor": 21, "cloudcompi": [22, 25, 26, 30], "modul": [22, 28], "function": 22, "sampl": [23, 34], "color": [24, 29, 32], "qcolor": 24, "from": [24, 29, 31, 32, 34], "qt": 24, "other": [24, 31, 33], "us": [24, 25], "interfac": 25, "cloudcompar": [25, 34], "introduct": [25, 30], "user": 25, "manual": 25, "basic": 25, "some": 25, "case": 25, "refer": 25, "document": 25, "indic": 25, "tabl": 25, "first": 26, "exampl": [26, 32], "licens": 27, "index": [28, 32], "introspect": 29, "manipul": 29, "copi": 29, "destruct": 29, "normal": [29, 32], "creat": [29, 32, 34], "modif": 29, "facet": 29, "set": 30, "environ": 30, "window": 30, "linux": 30, "maco": 30, "python3": 30, "import": 30, "load": 31, "entiti": [31, 33, 34], "file": [31, 33, 34], "known": [31, 33], "format": [31, 33], "without": 31, "explicit": 31, "shift": 31, "contain": 31, "sever": [31, 33, 34], "select": 31, "scan": 31, "e57": 31, "get": 31, "valu": [31, 34], "oper": [32, 34], "coordin": 32, "numpi": [32, 34], "read": 32, "modifi": 32, "an": [32, 34], "arrai": 32, "access": 32, "triangl": 32, "node": 32, "save": 33, "one": [33, 34], "cut": 34, "between": 34, "c2m": 34, "two": 34, "c2c": 34, "split": 34, "registr": 34, "implement": 34, "icp": 34, "algorithm": 34, "triangul": 34, "fit": 34, "ccplane": 34, "search": 34, "nois": 34, "filter": 34, "resampl": 34, "spatial": 34, "subsampl": 34, "randomli": 34, "level": 34, "statist": 34, "outlier": 34, "remov": 34, "sor": 34, "histogram": 34, "figur": 34, "csv": 34, "2": 34, "5d": 34, "volum": 34, "raster": 34, "interpol": 34, "anoth": 34, "find": 34, "optim": 34, "bound": 34, "comparison": 34, "shadevi": 34, "ambiant": 34, "occlus": 34, "hidden": 34, "boolean": 34, "ransac": 34, "sd": 34, "cloth": 34, "simul": 34, "classifi": 34, "train": 34, "surfac": 34, "revolut": 34, "reconstruct": 34, "poisson": 34, "sclice": 34, "contour": 34, "extract": 34, "section": 34, "slice": 34, "profil": 34, "connect": 34, "compon": 34, "merg": 34, "avoid": 34, "memori": 34, "leak": 34, "iter": 34, "process": 34, "render": 34, "3d": 34, "scene": 34, "imag": 34}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx": 57}, "alltitles": {"CSF plugin": [[0, "module-cloudComPy.CSF"]], "Canupo plugin": [[1, "module-cloudComPy.Canupo"]], "Distance Computation Tools": [[2, "distance-computation-tools"]], "Distance computation": [[2, "distance-computation"]], "Distance computation parameters": [[2, "distance-computation-parameters"]], "Geometrical Analysis Tools": [[3, "geometrical-analysis-tools"]], "Geometrical Analysis": [[3, "geometrical-analysis"]], "HPR plugin": [[4, "module-cloudComPy.HPR"]], "M3C2 plugin": [[5, "module-cloudComPy.M3C2"]], "MeshBoolean plugin": [[6, "module-cloudComPy.MeshBoolean"]], "minimalBoundingBox Python plugin": [[7, "minimalboundingbox-python-plugin"]], "Neighbourhood": [[8, "neighbourhood"], [8, "id1"]], "PCL plugin": [[9, "module-cloudComPy.PCL"]], "PCV plugin": [[10, "module-cloudComPy.PCV"]], "PoissonRecon plugin": [[11, "module-cloudComPy.PoissonRecon"]], "RANSAC_SD plugin": [[12, "module-cloudComPy.RANSAC_SD"]], "SRA plugin": [[13, "module-cloudComPy.SRA"]], "Scalar Fields": [[14, "scalar-fields"]], "ccScalarField": [[14, "ccscalarfield"]], "bases classes for ccScalarField": [[14, "bases-classes-for-ccscalarfield"]], "2D Polygons": [[15, "d-polygons"]], "ccFacets": [[15, "ccfacets"]], "Meshes": [[16, "meshes"]], "ccMesh": [[16, "ccmesh"]], "bases classes for Meshes": [[16, "bases-classes-for-meshes"]], "Octrees, descriptors and neighbourhood": [[17, "octrees-descriptors-and-neighbourhood"]], "Octrees": [[17, "octrees"]], "Descriptors structures": [[17, "descriptors-structures"]], "Neighbourhood structures": [[17, "neighbourhood-structures"]], "Points Clouds": [[18, "points-clouds"]], "ccPointCloud": [[18, "ccpointcloud"]], "bases classes for Points Clouds": [[18, "bases-classes-for-points-clouds"]], "Polylines": [[19, "polylines"]], "ccPolyline": [[19, "ccpolyline"]], "bases classes for ccPolyline": [[19, "bases-classes-for-ccpolyline"]], "ccPrimitives": [[20, "ccprimitives"]], "Box": [[20, "box"], [29, "box"]], "Cone": [[20, "cone"], [29, "cone"]], "Cylinder": [[20, "cylinder"], [29, "cylinder"]], "Plane": [[20, "plane"], [29, "plane"]], "Quadric": [[20, "quadric"], [29, "quadric"]], "Sphere": [[20, "sphere"], [29, "sphere"]], "Torus": [[20, "torus"], [29, "torus"]], "Dish": [[20, "dish"], [29, "dish"]], "Generic primitive": [[20, "generic-primitive"]], "transformations": [[20, "transformations"]], "Rotation Translation Matrix": [[20, "rotation-translation-matrix"]], "Sensor": [[21, "sensor"]], "ccGBLSensor": [[21, "ccgblsensor"]], "ccSensor": [[21, "ccsensor"]], "cloudComPy module, functions": [[22, "module-cloudComPy"]], "Cloud Sampling Tools": [[23, "cloud-sampling-tools"]], "cloud sampling": [[23, "cloud-sampling"]], "cloud sampling parameters": [[23, "cloud-sampling-parameters"]], "Colors": [[24, "colors"]], "QColor (from Qt)": [[24, "qcolor-from-qt"]], "Other Useful Color classes (from Qt)": [[24, "other-useful-color-classes-from-qt"]], "cloudComPy: a Python interface for CloudCompare": [[25, "cloudcompy-a-python-interface-for-cloudcompare"]], "Introduction": [[25, null], [30, "introduction"]], "cloudComPy User Manual: basics": [[25, null]], "Some use cases": [[25, null]], "cloudComPy Reference documentation": [[25, null]], "plugins Reference documentation": [[25, null]], "Indices and tables": [[25, null]], "cloudComPy: a first example": [[26, "cloudcompy-a-first-example"]], "license": [[27, "license"]], "general index": [[28, "general-index"]], "module index": [[28, "module-index"]], "Clouds, meshes, scalar fields: introspection, manipulation": [[29, "clouds-meshes-scalar-fields-introspection-manipulation"]], "Clouds and scalar fields": [[29, "clouds-and-scalar-fields"]], "cloud introspection": [[29, "cloud-introspection"]], "cloud transformations": [[29, "cloud-transformations"]], "cloud copy, destruction": [[29, "cloud-copy-destruction"]], "cloud normals": [[29, "cloud-normals"]], "cloud colors": [[29, "cloud-colors"]], "scalar fields": [[29, "scalar-fields"]], "sensors": [[29, "sensors"]], "meshes": [[29, "meshes"]], "create a mesh from a cloud": [[29, "create-a-mesh-from-a-cloud"]], "meshes introspection": [[29, "meshes-introspection"]], "meshes modifications": [[29, "meshes-modifications"]], "Generate a cloud from a mesh": [[29, "generate-a-cloud-from-a-mesh"]], "mesh copy, destruction": [[29, "mesh-copy-destruction"]], "primitives": [[29, "primitives"]], "polylines": [[29, "polylines"]], "2D polygons (facets)": [[29, "d-polygons-facets"]], "octrees": [[29, "octrees"]], "Set the CloudComPy environment": [[30, "set-the-cloudcompy-environment"]], "Windows": [[30, "windows"]], "Linux": [[30, "linux"]], "macOS": [[30, "macos"]], "Python3: CloudComPy import": [[30, "python3-cloudcompy-import"]], "Loading clouds and other entities from files": [[31, "loading-clouds-and-other-entities-from-files"]], "Known formats": [[31, "known-formats"], [33, "known-formats"]], "Load without explicit shift parameters": [[31, "load-without-explicit-shift-parameters"]], "Loading a point cloud": [[31, "loading-a-point-cloud"]], "Loading a mesh": [[31, "loading-a-mesh"]], "Loading a polyline": [[31, "loading-a-polyline"]], "Loading a file containing several entities": [[31, "loading-a-file-containing-several-entities"]], "Select the scans to load in a .E57 file": [[31, "select-the-scans-to-load-in-a-e57-file"]], "Loading the file structure": [[31, "loading-the-file-structure"]], "Getting the shift value": [[31, "getting-the-shift-value"]], "Load with explicit shift parameters": [[31, "load-with-explicit-shift-parameters"]], "operations on coordinates, scalar fields, colors, normals, meshes with Numpy": [[32, "operations-on-coordinates-scalar-fields-colors-normals-meshes-with-numpy"]], "Read, modify or create cloud coordinates with Numpy": [[32, "read-modify-or-create-cloud-coordinates-with-numpy"]], "Read, modify or create a scalar field with Numpy": [[32, "read-modify-or-create-a-scalar-field-with-numpy"]], "An example of point cloud with scalar field created from Numpy arrays": [[32, "an-example-of-point-cloud-with-scalar-field-created-from-numpy-arrays"]], "Access to the indexes of triangles nodes in a mesh": [[32, "access-to-the-indexes-of-triangles-nodes-in-a-mesh"]], "Access to the array of colors in cloud": [[32, "access-to-the-array-of-colors-in-cloud"]], "Read, modify or create normals with Numpy": [[32, "read-modify-or-create-normals-with-numpy"]], "Saving Clouds and other entities to files": [[33, "saving-clouds-and-other-entities-to-files"]], "Saving a Point Cloud": [[33, "saving-a-point-cloud"]], "Saving a mesh": [[33, "saving-a-mesh"]], "Saving several entities in one file": [[33, "saving-several-entities-in-one-file"]], "Create a point cloud with numpy": [[34, "create-a-point-cloud-with-numpy"]], "Cut a cloud or a mesh with a polyline": [[34, "cut-a-cloud-or-a-mesh-with-a-polyline"]], "Cut a cloud with a polyline": [[34, "cut-a-cloud-with-a-polyline"]], "Cut a mesh with a polyline": [[34, "cut-a-mesh-with-a-polyline"]], "Compute distances between clouds and meshes": [[34, "compute-distances-between-clouds-and-meshes"]], "Compute distances between a cloud and a mesh (C2M)": [[34, "compute-distances-between-a-cloud-and-a-mesh-c2m"]], "Compute distances between two clouds (C2C)": [[34, "compute-distances-between-two-clouds-c2c"]], "Compute split distances between two clouds (C2C)": [[34, "compute-split-distances-between-two-clouds-c2c"]], "Cloud registration": [[34, "cloud-registration"]], "Cloud registration with the CloudCompare implementation of ICP algorithm": [[34, "cloud-registration-with-the-cloudcompare-implementation-of-icp-algorithm"]], "Cloud registration with the PCL plugin": [[34, "cloud-registration-with-the-pcl-plugin"]], "Cloud triangulation: create a mesh": [[34, "cloud-triangulation-create-a-mesh"]], "Fitting ccPlane": [[34, "fitting-ccplane"]], "Searching points in neighbourhood": [[34, "searching-points-in-neighbourhood"]], "Cloud sampling, noise filter, filter by scalar field": [[34, "cloud-sampling-noise-filter-filter-by-scalar-field"]], "Noise filter": [[34, "noise-filter"]], "Resample cloud spatially": [[34, "resample-cloud-spatially"]], "Subsample cloud randomly": [[34, "subsample-cloud-randomly"]], "resample cloud with octree at level": [[34, "resample-cloud-with-octree-at-level"]], "resample cloud with octree": [[34, "resample-cloud-with-octree"]], "Statistical Outliers Removal (SOR) filter": [[34, "statistical-outliers-removal-sor-filter"]], "subsample cloud with octree at level": [[34, "subsample-cloud-with-octree-at-level"]], "subsample cloud with octree": [[34, "subsample-cloud-with-octree"]], "filter by scalar field values": [[34, "filter-by-scalar-field-values"]], "Generate histograms": [[34, "generate-histograms"]], "histogram as a figure": [[34, "histogram-as-a-figure"]], "histogram as a csv file": [[34, "histogram-as-a-csv-file"]], "Compute a 2.5D volume": [[34, "compute-a-2-5d-volume"]], "Cloud rasterization": [[34, "cloud-rasterization"]], "Interpolate scalar fields from one cloud to another": [[34, "interpolate-scalar-fields-from-one-cloud-to-another"]], "Finding an optimal bounding box": [[34, "finding-an-optimal-bounding-box"]], "Cloud comparison with plugin M3C2": [[34, "cloud-comparison-with-plugin-m3c2"]], "ShadeVIS (ambiant occlusion) with Plugin PCV": [[34, "shadevis-ambiant-occlusion-with-plugin-pcv"]], "Compute Hidden Point Removal with plugin HPR": [[34, "compute-hidden-point-removal-with-plugin-hpr"]], "Boolean operations on meshes with plugin MeshBoolean": [[34, "boolean-operations-on-meshes-with-plugin-meshboolean"]], "Finding primitives on a cloud with plugin RANSAC-SD": [[34, "finding-primitives-on-a-cloud-with-plugin-ransac-sd"]], "Compute Cloth Simulation Filter on a cloud with CSF plugin": [[34, "compute-cloth-simulation-filter-on-a-cloud-with-csf-plugin"]], "Classify a point cloud with Canupo plugin and a trained classifier": [[34, "classify-a-point-cloud-with-canupo-plugin-and-a-trained-classifier"]], "Compute distance between a cloud and a surface of revolution, with SRA plugin": [[34, "compute-distance-between-a-cloud-and-a-surface-of-revolution-with-sra-plugin"]], "Surface Mesh reconstruction, with Poisson Reconstruction plugin": [[34, "surface-mesh-reconstruction-with-poisson-reconstruction-plugin"]], "Sclices and contours": [[34, "sclices-and-contours"]], "Extract Sections (generate cloud slices and profiles)": [[34, "extract-sections-generate-cloud-slices-and-profiles"]], "Extract Connected Components": [[34, "extract-connected-components"]], "Merge several entities (clouds or meshes)": [[34, "merge-several-entities-clouds-or-meshes"]], "Avoid memory leaks in an iterative process": [[34, "avoid-memory-leaks-in-an-iterative-process"]], "Render a 3D scene to an image file": [[34, "render-a-3d-scene-to-an-image-file"]]}, "indexentries": {"cloudcompy.csf": [[0, "module-cloudComPy.CSF"]], "computecsf() (in module cloudcompy.csf)": [[0, "cloudComPy.CSF.computeCSF"]], "inittrace_csf() (in module cloudcompy.csf)": [[0, "cloudComPy.CSF.initTrace_CSF"]], "module": [[0, "module-cloudComPy.CSF"], [1, "module-cloudComPy.Canupo"], [4, "module-cloudComPy.HPR"], [5, "module-cloudComPy.M3C2"], [6, "module-cloudComPy.MeshBoolean"], [9, "module-cloudComPy.PCL"], [10, "module-cloudComPy.PCV"], [11, "module-cloudComPy.PoissonRecon"], [12, "module-cloudComPy.RANSAC_SD"], [13, "module-cloudComPy.SRA"], [22, "module-cloudComPy"]], "core_cloud_sources (class in cloudcompy.canupo)": [[1, "cloudComPy.Canupo.CORE_CLOUD_SOURCES"]], "classify() (in module cloudcompy.canupo)": [[1, "cloudComPy.Canupo.Classify"]], "msc_file (cloudcompy.canupo.core_cloud_sources attribute)": [[1, "cloudComPy.Canupo.CORE_CLOUD_SOURCES.MSC_FILE"]], "original (cloudcompy.canupo.core_cloud_sources attribute)": [[1, "cloudComPy.Canupo.CORE_CLOUD_SOURCES.ORIGINAL"]], "other (cloudcompy.canupo.core_cloud_sources attribute)": [[1, "cloudComPy.Canupo.CORE_CLOUD_SOURCES.OTHER"]], "subsampled (cloudcompy.canupo.core_cloud_sources attribute)": [[1, "cloudComPy.Canupo.CORE_CLOUD_SOURCES.SUBSAMPLED"]], "__init__() (cloudcompy.canupo.core_cloud_sources method)": [[1, "cloudComPy.Canupo.CORE_CLOUD_SOURCES.__init__"]], "cloudcompy.canupo": [[1, "module-cloudComPy.Canupo"]], "name (cloudcompy.canupo.core_cloud_sources property)": [[1, "cloudComPy.Canupo.CORE_CLOUD_SOURCES.name"]], "value (cloudcompy.canupo.core_cloud_sources property)": [[1, "cloudComPy.Canupo.CORE_CLOUD_SOURCES.value"]], "cpset (cloudcompy.cloud2clouddistancescomputationparams property)": [[2, "cloudComPy.Cloud2CloudDistancesComputationParams.CPSet"]], "cpset (cloudcompy.cloud2meshdistancescomputationparams property)": [[2, "cloudComPy.Cloud2MeshDistancesComputationParams.CPSet"]], "cloud2clouddistancescomputationparams (class in cloudcompy)": [[2, "cloudComPy.Cloud2CloudDistancesComputationParams"]], "cloud2meshdistancescomputationparams (class in cloudcompy)": [[2, "cloudComPy.Cloud2MeshDistancesComputationParams"]], "distancecomputationtools (class in cloudcompy)": [[2, "cloudComPy.DistanceComputationTools"]], "__init__() (cloudcompy.cloud2clouddistancescomputationparams method)": [[2, "cloudComPy.Cloud2CloudDistancesComputationParams.__init__"]], "__init__() (cloudcompy.cloud2meshdistancescomputationparams method)": [[2, "cloudComPy.Cloud2MeshDistancesComputationParams.__init__"]], "__init__() (cloudcompy.distancecomputationtools method)": [[2, "cloudComPy.DistanceComputationTools.__init__"]], "computeapproxcloud2clouddistance() (cloudcompy.distancecomputationtools static method)": [[2, "cloudComPy.DistanceComputationTools.computeApproxCloud2CloudDistance"]], "computeapproxcloud2meshdistance() (cloudcompy.distancecomputationtools static method)": [[2, "cloudComPy.DistanceComputationTools.computeApproxCloud2MeshDistance"]], "computecloud2clouddistances() (cloudcompy.distancecomputationtools static method)": [[2, "cloudComPy.DistanceComputationTools.computeCloud2CloudDistances"]], "computecloud2meshdistances() (cloudcompy.distancecomputationtools static method)": [[2, "cloudComPy.DistanceComputationTools.computeCloud2MeshDistances"]], "determinebestoctreelevel() (cloudcompy.distancecomputationtools static method)": [[2, "cloudComPy.DistanceComputationTools.determineBestOctreeLevel"]], "flipnormals (cloudcompy.cloud2meshdistancescomputationparams property)": [[2, "cloudComPy.Cloud2MeshDistancesComputationParams.flipNormals"]], "getsplitdistance() (cloudcompy.cloud2clouddistancescomputationparams method)": [[2, "cloudComPy.Cloud2CloudDistancesComputationParams.getSplitDistance"]], "knnforlocalmodel (cloudcompy.cloud2clouddistancescomputationparams property)": [[2, "cloudComPy.Cloud2CloudDistancesComputationParams.kNNForLocalModel"]], "localmodel (cloudcompy.cloud2clouddistancescomputationparams property)": [[2, "cloudComPy.Cloud2CloudDistancesComputationParams.localModel"]], "maxsearchdist (cloudcompy.cloud2clouddistancescomputationparams property)": [[2, "cloudComPy.Cloud2CloudDistancesComputationParams.maxSearchDist"]], "maxsearchdist (cloudcompy.cloud2meshdistancescomputationparams property)": [[2, "cloudComPy.Cloud2MeshDistancesComputationParams.maxSearchDist"]], "maxthreadcount (cloudcompy.cloud2clouddistancescomputationparams property)": [[2, "cloudComPy.Cloud2CloudDistancesComputationParams.maxThreadCount"]], "maxthreadcount (cloudcompy.cloud2meshdistancescomputationparams property)": [[2, "cloudComPy.Cloud2MeshDistancesComputationParams.maxThreadCount"]], "multithread (cloudcompy.cloud2clouddistancescomputationparams property)": [[2, "cloudComPy.Cloud2CloudDistancesComputationParams.multiThread"]], "multithread (cloudcompy.cloud2meshdistancescomputationparams property)": [[2, "cloudComPy.Cloud2MeshDistancesComputationParams.multiThread"]], "octreelevel (cloudcompy.cloud2clouddistancescomputationparams property)": [[2, "cloudComPy.Cloud2CloudDistancesComputationParams.octreeLevel"]], "octreelevel (cloudcompy.cloud2meshdistancescomputationparams property)": [[2, "cloudComPy.Cloud2MeshDistancesComputationParams.octreeLevel"]], "radiusforlocalmodel (cloudcompy.cloud2clouddistancescomputationparams property)": [[2, "cloudComPy.Cloud2CloudDistancesComputationParams.radiusForLocalModel"]], "resetformerdistances (cloudcompy.cloud2clouddistancescomputationparams property)": [[2, "cloudComPy.Cloud2CloudDistancesComputationParams.resetFormerDistances"]], "reuseexistinglocalmodels (cloudcompy.cloud2clouddistancescomputationparams property)": [[2, "cloudComPy.Cloud2CloudDistancesComputationParams.reuseExistingLocalModels"]], "setsplitdistances() (cloudcompy.cloud2clouddistancescomputationparams method)": [[2, "cloudComPy.Cloud2CloudDistancesComputationParams.setSplitDistances"]], "signeddistances (cloudcompy.cloud2meshdistancescomputationparams property)": [[2, "cloudComPy.Cloud2MeshDistancesComputationParams.signedDistances"]], "usedistancemap (cloudcompy.cloud2meshdistancescomputationparams property)": [[2, "cloudComPy.Cloud2MeshDistancesComputationParams.useDistanceMap"]], "usesphericalsearchforlocalmodel (cloudcompy.cloud2clouddistancescomputationparams property)": [[2, "cloudComPy.Cloud2CloudDistancesComputationParams.useSphericalSearchForLocalModel"]], "density_2d (cloudcompy.density attribute)": [[3, "cloudComPy.Density.DENSITY_2D"]], "density_3d (cloudcompy.density attribute)": [[3, "cloudComPy.Density.DENSITY_3D"]], "density_knn (cloudcompy.density attribute)": [[3, "cloudComPy.Density.DENSITY_KNN"]], "density (class in cloudcompy)": [[3, "cloudComPy.Density"]], "errorcode (class in cloudcompy)": [[3, "cloudComPy.ErrorCode"]], "flagduplicatepoints() (cloudcompy.geometricalanalysistools static method)": [[3, "cloudComPy.GeometricalAnalysisTools.FlagDuplicatePoints"]], "geometricalanalysistools (class in cloudcompy)": [[3, "cloudComPy.GeometricalAnalysisTools"]], "invalidinput (cloudcompy.errorcode attribute)": [[3, "cloudComPy.ErrorCode.InvalidInput"]], "noerror (cloudcompy.errorcode attribute)": [[3, "cloudComPy.ErrorCode.NoError"]], "notenoughmemory (cloudcompy.errorcode attribute)": [[3, "cloudComPy.ErrorCode.NotEnoughMemory"]], "notenoughpoints (cloudcompy.errorcode attribute)": [[3, "cloudComPy.ErrorCode.NotEnoughPoints"]], "octreecomputationfailed (cloudcompy.errorcode attribute)": [[3, "cloudComPy.ErrorCode.OctreeComputationFailed"]], "processcancelledbyuser (cloudcompy.errorcode attribute)": [[3, "cloudComPy.ErrorCode.ProcessCancelledByUser"]], "processfailed (cloudcompy.errorcode attribute)": [[3, "cloudComPy.ErrorCode.ProcessFailed"]], "unhandledcharacteristic (cloudcompy.errorcode attribute)": [[3, "cloudComPy.ErrorCode.UnhandledCharacteristic"]], "__init__() (cloudcompy.density method)": [[3, "cloudComPy.Density.__init__"]], "__init__() (cloudcompy.errorcode method)": [[3, "cloudComPy.ErrorCode.__init__"]], "__init__() (cloudcompy.geometricalanalysistools method)": [[3, "cloudComPy.GeometricalAnalysisTools.__init__"]], "name (cloudcompy.density property)": [[3, "cloudComPy.Density.name"]], "name (cloudcompy.errorcode property)": [[3, "cloudComPy.ErrorCode.name"]], "value (cloudcompy.density property)": [[3, "cloudComPy.Density.value"]], "value (cloudcompy.errorcode property)": [[3, "cloudComPy.ErrorCode.value"]], "cloudcompy.hpr": [[4, "module-cloudComPy.HPR"]], "computehpr() (in module cloudcompy.hpr)": [[4, "cloudComPy.HPR.computeHPR"]], "inittrace_hpr() (in module cloudcompy.hpr)": [[4, "cloudComPy.HPR.initTrace_HPR"]], "m3c2guessparamstofile() (in module cloudcompy.m3c2)": [[5, "cloudComPy.M3C2.M3C2guessParamsToFile"]], "cloudcompy.m3c2": [[5, "module-cloudComPy.M3C2"]], "computem3c2() (in module cloudcompy.m3c2)": [[5, "cloudComPy.M3C2.computeM3C2"]], "inittrace_m3c2() (in module cloudcompy.m3c2)": [[5, "cloudComPy.M3C2.initTrace_M3C2"]], "csg_operation (class in cloudcompy.meshboolean)": [[6, "cloudComPy.MeshBoolean.CSG_OPERATION"]], "diff (cloudcompy.meshboolean.csg_operation attribute)": [[6, "cloudComPy.MeshBoolean.CSG_OPERATION.DIFF"]], "intersect (cloudcompy.meshboolean.csg_operation attribute)": [[6, "cloudComPy.MeshBoolean.CSG_OPERATION.INTERSECT"]], "sym_diff (cloudcompy.meshboolean.csg_operation attribute)": [[6, "cloudComPy.MeshBoolean.CSG_OPERATION.SYM_DIFF"]], "union (cloudcompy.meshboolean.csg_operation attribute)": [[6, "cloudComPy.MeshBoolean.CSG_OPERATION.UNION"]], "__init__() (cloudcompy.meshboolean.csg_operation method)": [[6, "cloudComPy.MeshBoolean.CSG_OPERATION.__init__"]], "cloudcompy.meshboolean": [[6, "module-cloudComPy.MeshBoolean"]], "computemeshboolean() (in module cloudcompy.meshboolean)": [[6, "cloudComPy.MeshBoolean.computeMeshBoolean"]], "inittrace_meshboolean() (in module cloudcompy.meshboolean)": [[6, "cloudComPy.MeshBoolean.initTrace_MeshBoolean"]], "name (cloudcompy.meshboolean.csg_operation property)": [[6, "cloudComPy.MeshBoolean.CSG_OPERATION.name"]], "value (cloudcompy.meshboolean.csg_operation property)": [[6, "cloudComPy.MeshBoolean.CSG_OPERATION.value"]], "dist2() (in module cloudcompy.minimalboundingbox)": [[7, "cloudComPy.minimalBoundingBox.dist2"]], "findrotation() (in module cloudcompy.minimalboundingbox)": [[7, "cloudComPy.minimalBoundingBox.findRotation"]], "isocahedron() (in module cloudcompy.minimalboundingbox)": [[7, "cloudComPy.minimalBoundingBox.isocahedron"]], "section() (in module cloudcompy.minimalboundingbox)": [[7, "cloudComPy.minimalBoundingBox.section"]], "zinv() (in module cloudcompy.minimalboundingbox)": [[7, "cloudComPy.minimalBoundingBox.zinv"]], "anisotropy (cloudcompy.geomfeature attribute)": [[8, "cloudComPy.GeomFeature.Anisotropy"]], "eigenentropy (cloudcompy.geomfeature attribute)": [[8, "cloudComPy.GeomFeature.EigenEntropy"]], "eigenvalue1 (cloudcompy.geomfeature attribute)": [[8, "cloudComPy.GeomFeature.EigenValue1"]], "eigenvalue2 (cloudcompy.geomfeature attribute)": [[8, "cloudComPy.GeomFeature.EigenValue2"]], "eigenvalue3 (cloudcompy.geomfeature attribute)": [[8, "cloudComPy.GeomFeature.EigenValue3"]], "eigenvaluessum (cloudcompy.geomfeature attribute)": [[8, "cloudComPy.GeomFeature.EigenValuesSum"]], "geomfeature (class in cloudcompy)": [[8, "cloudComPy.GeomFeature"]], "linearity (cloudcompy.geomfeature attribute)": [[8, "cloudComPy.GeomFeature.Linearity"]], "omnivariance (cloudcompy.geomfeature attribute)": [[8, "cloudComPy.GeomFeature.Omnivariance"]], "pca1 (cloudcompy.geomfeature attribute)": [[8, "cloudComPy.GeomFeature.PCA1"]], "pca2 (cloudcompy.geomfeature attribute)": [[8, "cloudComPy.GeomFeature.PCA2"]], "planarity (cloudcompy.geomfeature attribute)": [[8, "cloudComPy.GeomFeature.Planarity"]], "sphericity (cloudcompy.geomfeature attribute)": [[8, "cloudComPy.GeomFeature.Sphericity"]], "surfacevariation (cloudcompy.geomfeature attribute)": [[8, "cloudComPy.GeomFeature.SurfaceVariation"]], "verticality (cloudcompy.geomfeature attribute)": [[8, "cloudComPy.GeomFeature.Verticality"]], "__init__() (cloudcompy.geomfeature method)": [[8, "cloudComPy.GeomFeature.__init__"]], "name (cloudcompy.geomfeature property)": [[8, "cloudComPy.GeomFeature.name"]], "value (cloudcompy.geomfeature property)": [[8, "cloudComPy.GeomFeature.value"]], "fastglobalregistrationfilter (class in cloudcompy.pcl)": [[9, "cloudComPy.PCL.FastGlobalRegistrationFilter"]], "mlssmoothingupsampling (class in cloudcompy.pcl)": [[9, "cloudComPy.PCL.MLSSmoothingUpsampling"]], "normalestimation (class in cloudcompy.pcl)": [[9, "cloudComPy.PCL.NormalEstimation"]], "__init__() (cloudcompy.pcl.fastglobalregistrationfilter method)": [[9, "cloudComPy.PCL.FastGlobalRegistrationFilter.__init__"]], "__init__() (cloudcompy.pcl.mlssmoothingupsampling method)": [[9, "cloudComPy.PCL.MLSSmoothingUpsampling.__init__"]], "__init__() (cloudcompy.pcl.normalestimation method)": [[9, "cloudComPy.PCL.NormalEstimation.__init__"]], "cloudcompy.pcl": [[9, "module-cloudComPy.PCL"]], "compute() (cloudcompy.pcl.fastglobalregistrationfilter method)": [[9, "cloudComPy.PCL.FastGlobalRegistrationFilter.compute"]], "compute() (cloudcompy.pcl.mlssmoothingupsampling method)": [[9, "cloudComPy.PCL.MLSSmoothingUpsampling.compute"]], "compute() (cloudcompy.pcl.normalestimation method)": [[9, "cloudComPy.PCL.NormalEstimation.compute"]], "getautoradius() (cloudcompy.pcl.fastglobalregistrationfilter method)": [[9, "cloudComPy.PCL.FastGlobalRegistrationFilter.getAutoRadius"]], "getoutputcloud() (cloudcompy.pcl.mlssmoothingupsampling method)": [[9, "cloudComPy.PCL.MLSSmoothingUpsampling.getOutputCloud"]], "gettransformation() (cloudcompy.pcl.fastglobalregistrationfilter method)": [[9, "cloudComPy.PCL.FastGlobalRegistrationFilter.getTransformation"]], "inittrace_pcl() (in module cloudcompy.pcl)": [[9, "cloudComPy.PCL.initTrace_PCL"]], "setparameters() (cloudcompy.pcl.fastglobalregistrationfilter method)": [[9, "cloudComPy.PCL.FastGlobalRegistrationFilter.setParameters"]], "setparameters() (cloudcompy.pcl.mlssmoothingupsampling method)": [[9, "cloudComPy.PCL.MLSSmoothingUpsampling.setParameters"]], "setparameters() (cloudcompy.pcl.normalestimation method)": [[9, "cloudComPy.PCL.NormalEstimation.setParameters"]], "cloudcompy.pcv": [[10, "module-cloudComPy.PCV"]], "computeshadevis() (in module cloudcompy.pcv)": [[10, "cloudComPy.PCV.computeShadeVIS"]], "inittrace_pcv() (in module cloudcompy.pcv)": [[10, "cloudComPy.PCV.initTrace_PCV"]], "boundarytype (class in cloudcompy.poissonrecon)": [[11, "cloudComPy.PoissonRecon.BoundaryType"]], "dirichlet (cloudcompy.poissonrecon.boundarytype attribute)": [[11, "cloudComPy.PoissonRecon.BoundaryType.DIRICHLET"]], "free (cloudcompy.poissonrecon.boundarytype attribute)": [[11, "cloudComPy.PoissonRecon.BoundaryType.FREE"]], "neumann (cloudcompy.poissonrecon.boundarytype attribute)": [[11, "cloudComPy.PoissonRecon.BoundaryType.NEUMANN"]], "pr (class in cloudcompy.poissonrecon)": [[11, "cloudComPy.PoissonRecon.PR"]], "poissonreconstruction() (cloudcompy.poissonrecon.pr static method)": [[11, "cloudComPy.PoissonRecon.PR.PoissonReconstruction"]], "__init__() (cloudcompy.poissonrecon.boundarytype method)": [[11, "cloudComPy.PoissonRecon.BoundaryType.__init__"]], "__init__() (cloudcompy.poissonrecon.pr method)": [[11, "cloudComPy.PoissonRecon.PR.__init__"]], "cloudcompy.poissonrecon": [[11, "module-cloudComPy.PoissonRecon"]], "inittrace_poissonrecon() (in module cloudcompy.poissonrecon)": [[11, "cloudComPy.PoissonRecon.initTrace_PoissonRecon"]], "name (cloudcompy.poissonrecon.boundarytype property)": [[11, "cloudComPy.PoissonRecon.BoundaryType.name"]], "value (cloudcompy.poissonrecon.boundarytype property)": [[11, "cloudComPy.PoissonRecon.BoundaryType.value"]], "ransacparams (class in cloudcompy.ransac_sd)": [[12, "cloudComPy.RANSAC_SD.RansacParams"]], "__init__() (cloudcompy.ransac_sd.ransacparams method)": [[12, "cloudComPy.RANSAC_SD.RansacParams.__init__"]], "allowfitting (cloudcompy.ransac_sd.ransacparams property)": [[12, "cloudComPy.RANSAC_SD.RansacParams.allowFitting"]], "allowsimplification (cloudcompy.ransac_sd.ransacparams property)": [[12, "cloudComPy.RANSAC_SD.RansacParams.allowSimplification"]], "bitmapepsilon (cloudcompy.ransac_sd.ransacparams property)": [[12, "cloudComPy.RANSAC_SD.RansacParams.bitmapEpsilon"]], "cloudcompy.ransac_sd": [[12, "module-cloudComPy.RANSAC_SD"]], "computeransac_sd() (in module cloudcompy.ransac_sd)": [[12, "cloudComPy.RANSAC_SD.computeRANSAC_SD"]], "createcloudfromleftoverpoints (cloudcompy.ransac_sd.ransacparams property)": [[12, "cloudComPy.RANSAC_SD.RansacParams.createCloudFromLeftOverPoints"]], "epsilon (cloudcompy.ransac_sd.ransacparams property)": [[12, "cloudComPy.RANSAC_SD.RansacParams.epsilon"]], "getprimenabled() (cloudcompy.ransac_sd.ransacparams method)": [[12, "cloudComPy.RANSAC_SD.RansacParams.getPrimEnabled"]], "inittrace_ransac_sd() (in module cloudcompy.ransac_sd)": [[12, "cloudComPy.RANSAC_SD.initTrace_RANSAC_SD"]], "maxconeangle_deg (cloudcompy.ransac_sd.ransacparams property)": [[12, "cloudComPy.RANSAC_SD.RansacParams.maxConeAngle_deg"]], "maxconelength (cloudcompy.ransac_sd.ransacparams property)": [[12, "cloudComPy.RANSAC_SD.RansacParams.maxConeLength"]], "maxconeradius (cloudcompy.ransac_sd.ransacparams property)": [[12, "cloudComPy.RANSAC_SD.RansacParams.maxConeRadius"]], "maxcylinderlength (cloudcompy.ransac_sd.ransacparams property)": [[12, "cloudComPy.RANSAC_SD.RansacParams.maxCylinderLength"]], "maxcylinderradius (cloudcompy.ransac_sd.ransacparams property)": [[12, "cloudComPy.RANSAC_SD.RansacParams.maxCylinderRadius"]], "maxnormaldev_deg (cloudcompy.ransac_sd.ransacparams property)": [[12, "cloudComPy.RANSAC_SD.RansacParams.maxNormalDev_deg"]], "maxsphereradius (cloudcompy.ransac_sd.ransacparams property)": [[12, "cloudComPy.RANSAC_SD.RansacParams.maxSphereRadius"]], "maxtorusmajorradius (cloudcompy.ransac_sd.ransacparams property)": [[12, "cloudComPy.RANSAC_SD.RansacParams.maxTorusMajorRadius"]], "maxtorusminorradius (cloudcompy.ransac_sd.ransacparams property)": [[12, "cloudComPy.RANSAC_SD.RansacParams.maxTorusMinorRadius"]], "mincylinderradius (cloudcompy.ransac_sd.ransacparams property)": [[12, "cloudComPy.RANSAC_SD.RansacParams.minCylinderRadius"]], "minsphereradius (cloudcompy.ransac_sd.ransacparams property)": [[12, "cloudComPy.RANSAC_SD.RansacParams.minSphereRadius"]], "mintorusmajorradius (cloudcompy.ransac_sd.ransacparams property)": [[12, "cloudComPy.RANSAC_SD.RansacParams.minTorusMajorRadius"]], "mintorusminorradius (cloudcompy.ransac_sd.ransacparams property)": [[12, "cloudComPy.RANSAC_SD.RansacParams.minTorusMinorRadius"]], "optimizeforcloud() (cloudcompy.ransac_sd.ransacparams method)": [[12, "cloudComPy.RANSAC_SD.RansacParams.optimizeForCloud"]], "probability (cloudcompy.ransac_sd.ransacparams property)": [[12, "cloudComPy.RANSAC_SD.RansacParams.probability"]], "randomcolor (cloudcompy.ransac_sd.ransacparams property)": [[12, "cloudComPy.RANSAC_SD.RansacParams.randomColor"]], "setprimenabled() (cloudcompy.ransac_sd.ransacparams method)": [[12, "cloudComPy.RANSAC_SD.RansacParams.setPrimEnabled"]], "supportpoints (cloudcompy.ransac_sd.ransacparams property)": [[12, "cloudComPy.RANSAC_SD.RansacParams.supportPoints"]], "abs_norm_grey (cloudcompy.sra.default_scales attribute)": [[13, "cloudComPy.SRA.DEFAULT_SCALES.ABS_NORM_GREY"]], "bgyr (cloudcompy.sra.default_scales attribute)": [[13, "cloudComPy.SRA.DEFAULT_SCALES.BGYR"]], "brown_yellow (cloudcompy.sra.default_scales attribute)": [[13, "cloudComPy.SRA.DEFAULT_SCALES.BROWN_YELLOW"]], "bwr (cloudcompy.sra.default_scales attribute)": [[13, "cloudComPy.SRA.DEFAULT_SCALES.BWR"]], "default_scales (class in cloudcompy.sra)": [[13, "cloudComPy.SRA.DEFAULT_SCALES"]], "dip_bryw (cloudcompy.sra.default_scales attribute)": [[13, "cloudComPy.SRA.DEFAULT_SCALES.DIP_BRYW"]], "dip_dir_repeat (cloudcompy.sra.default_scales attribute)": [[13, "cloudComPy.SRA.DEFAULT_SCALES.DIP_DIR_REPEAT"]], "emptycellfilloption (class in cloudcompy.sra)": [[13, "cloudComPy.SRA.EmptyCellFillOption"]], "fill_interpolate (cloudcompy.sra.emptycellfilloption attribute)": [[13, "cloudComPy.SRA.EmptyCellFillOption.FILL_INTERPOLATE"]], "fill_strat_avg_dist (cloudcompy.sra.fillstrategytype attribute)": [[13, "cloudComPy.SRA.FillStrategyType.FILL_STRAT_AVG_DIST"]], "fill_strat_max_dist (cloudcompy.sra.fillstrategytype attribute)": [[13, "cloudComPy.SRA.FillStrategyType.FILL_STRAT_MAX_DIST"]], "fill_strat_min_dist (cloudcompy.sra.fillstrategytype attribute)": [[13, "cloudComPy.SRA.FillStrategyType.FILL_STRAT_MIN_DIST"]], "fill_with_zero (cloudcompy.sra.emptycellfilloption attribute)": [[13, "cloudComPy.SRA.EmptyCellFillOption.FILL_WITH_ZERO"]], "fillstrategytype (class in cloudcompy.sra)": [[13, "cloudComPy.SRA.FillStrategyType"]], "grey (cloudcompy.sra.default_scales attribute)": [[13, "cloudComPy.SRA.DEFAULT_SCALES.GREY"]], "high_contrast (cloudcompy.sra.default_scales attribute)": [[13, "cloudComPy.SRA.DEFAULT_SCALES.HIGH_CONTRAST"]], "hsv_360_deg (cloudcompy.sra.default_scales attribute)": [[13, "cloudComPy.SRA.DEFAULT_SCALES.HSV_360_DEG"]], "invalid_strategy_type (cloudcompy.sra.fillstrategytype attribute)": [[13, "cloudComPy.SRA.FillStrategyType.INVALID_STRATEGY_TYPE"]], "leave_empty (cloudcompy.sra.emptycellfilloption attribute)": [[13, "cloudComPy.SRA.EmptyCellFillOption.LEAVE_EMPTY"]], "rw (cloudcompy.sra.default_scales attribute)": [[13, "cloudComPy.SRA.DEFAULT_SCALES.RW"]], "ry (cloudcompy.sra.default_scales attribute)": [[13, "cloudComPy.SRA.DEFAULT_SCALES.RY"]], "topo_landserf (cloudcompy.sra.default_scales attribute)": [[13, "cloudComPy.SRA.DEFAULT_SCALES.TOPO_LANDSERF"]], "vertex_quality (cloudcompy.sra.default_scales attribute)": [[13, "cloudComPy.SRA.DEFAULT_SCALES.VERTEX_QUALITY"]], "viridis (cloudcompy.sra.default_scales attribute)": [[13, "cloudComPy.SRA.DEFAULT_SCALES.VIRIDIS"]], "yellow_brown (cloudcompy.sra.default_scales attribute)": [[13, "cloudComPy.SRA.DEFAULT_SCALES.YELLOW_BROWN"]], "__init__() (cloudcompy.sra.default_scales method)": [[13, "cloudComPy.SRA.DEFAULT_SCALES.__init__"]], "__init__() (cloudcompy.sra.emptycellfilloption method)": [[13, "cloudComPy.SRA.EmptyCellFillOption.__init__"]], "__init__() (cloudcompy.sra.fillstrategytype method)": [[13, "cloudComPy.SRA.FillStrategyType.__init__"]], "__init__() (cloudcompy.sra.qsra method)": [[13, "cloudComPy.SRA.qSRA.__init__"]], "cloudcompy.sra": [[13, "module-cloudComPy.SRA"]], "docomputeradialdists() (cloudcompy.sra.qsra method)": [[13, "cloudComPy.SRA.qSRA.doComputeRadialDists"]], "exportmapascloud() (in module cloudcompy.sra)": [[13, "cloudComPy.SRA.exportMapAsCloud"]], "exportmapasmesh() (in module cloudcompy.sra)": [[13, "cloudComPy.SRA.exportMapAsMesh"]], "inittrace_sra() (in module cloudcompy.sra)": [[13, "cloudComPy.SRA.initTrace_SRA"]], "loadprofile() (in module cloudcompy.sra)": [[13, "cloudComPy.SRA.loadProfile"]], "name (cloudcompy.sra.default_scales property)": [[13, "cloudComPy.SRA.DEFAULT_SCALES.name"]], "name (cloudcompy.sra.emptycellfilloption property)": [[13, "cloudComPy.SRA.EmptyCellFillOption.name"]], "name (cloudcompy.sra.fillstrategytype property)": [[13, "cloudComPy.SRA.FillStrategyType.name"]], "qsra (class in cloudcompy.sra)": [[13, "cloudComPy.SRA.qSRA"]], "value (cloudcompy.sra.default_scales property)": [[13, "cloudComPy.SRA.DEFAULT_SCALES.value"]], "value (cloudcompy.sra.emptycellfilloption property)": [[13, "cloudComPy.SRA.EmptyCellFillOption.value"]], "value (cloudcompy.sra.fillstrategytype property)": [[13, "cloudComPy.SRA.FillStrategyType.value"]], "scalarfield (class in cloudcompy)": [[14, "cloudComPy.ScalarField"]], "__init__() (cloudcompy.scalarfield method)": [[14, "cloudComPy.ScalarField.__init__"]], "__init__() (cloudcompy.ccscalarfield method)": [[14, "cloudComPy.ccScalarField.__init__"]], "addelement() (cloudcompy.scalarfield method)": [[14, "cloudComPy.ScalarField.addElement"]], "addelement() (cloudcompy.ccscalarfield method)": [[14, "cloudComPy.ccScalarField.addElement"]], "ccscalarfield (class in cloudcompy)": [[14, "cloudComPy.ccScalarField"]], "computemeanandvariance() (cloudcompy.scalarfield method)": [[14, "cloudComPy.ScalarField.computeMeanAndVariance"]], "computemeanandvariance() (cloudcompy.ccscalarfield method)": [[14, "cloudComPy.ccScalarField.computeMeanAndVariance"]], "computeminandmax() (cloudcompy.scalarfield method)": [[14, "cloudComPy.ScalarField.computeMinAndMax"]], "computeminandmax() (cloudcompy.ccscalarfield method)": [[14, "cloudComPy.ccScalarField.computeMinAndMax"]], "currentsize() (cloudcompy.scalarfield method)": [[14, "cloudComPy.ScalarField.currentSize"]], "currentsize() (cloudcompy.ccscalarfield method)": [[14, "cloudComPy.ccScalarField.currentSize"]], "fill() (cloudcompy.scalarfield method)": [[14, "cloudComPy.ScalarField.fill"]], "fill() (cloudcompy.ccscalarfield method)": [[14, "cloudComPy.ccScalarField.fill"]], "flagvalueasinvalid() (cloudcompy.scalarfield method)": [[14, "cloudComPy.ScalarField.flagValueAsInvalid"]], "flagvalueasinvalid() (cloudcompy.ccscalarfield method)": [[14, "cloudComPy.ccScalarField.flagValueAsInvalid"]], "fromnparraycopy() (cloudcompy.scalarfield method)": [[14, "cloudComPy.ScalarField.fromNpArrayCopy"]], "fromnparraycopy() (cloudcompy.ccscalarfield method)": [[14, "cloudComPy.ccScalarField.fromNpArrayCopy"]], "getglobalshift() (cloudcompy.ccscalarfield method)": [[14, "cloudComPy.ccScalarField.getGlobalShift"]], "getmax() (cloudcompy.scalarfield method)": [[14, "cloudComPy.ScalarField.getMax"]], "getmax() (cloudcompy.ccscalarfield method)": [[14, "cloudComPy.ccScalarField.getMax"]], "getmin() (cloudcompy.scalarfield method)": [[14, "cloudComPy.ScalarField.getMin"]], "getmin() (cloudcompy.ccscalarfield method)": [[14, "cloudComPy.ccScalarField.getMin"]], "getname() (cloudcompy.scalarfield method)": [[14, "cloudComPy.ScalarField.getName"]], "getname() (cloudcompy.ccscalarfield method)": [[14, "cloudComPy.ccScalarField.getName"]], "getvalue() (cloudcompy.scalarfield method)": [[14, "cloudComPy.ScalarField.getValue"]], "getvalue() (cloudcompy.ccscalarfield method)": [[14, "cloudComPy.ccScalarField.getValue"]], "isserializable() (cloudcompy.ccscalarfield method)": [[14, "cloudComPy.ccScalarField.isSerializable"]], "reservesafe() (cloudcompy.scalarfield method)": [[14, "cloudComPy.ScalarField.reserveSafe"]], "reservesafe() (cloudcompy.ccscalarfield method)": [[14, "cloudComPy.ccScalarField.reserveSafe"]], "resizesafe() (cloudcompy.scalarfield method)": [[14, "cloudComPy.ScalarField.resizeSafe"]], "resizesafe() (cloudcompy.ccscalarfield method)": [[14, "cloudComPy.ccScalarField.resizeSafe"]], "setname() (cloudcompy.scalarfield method)": [[14, "cloudComPy.ScalarField.setName"]], "setname() (cloudcompy.ccscalarfield method)": [[14, "cloudComPy.ccScalarField.setName"]], "setvalue() (cloudcompy.scalarfield method)": [[14, "cloudComPy.ScalarField.setValue"]], "setvalue() (cloudcompy.ccscalarfield method)": [[14, "cloudComPy.ccScalarField.setValue"]], "swap() (cloudcompy.scalarfield method)": [[14, "cloudComPy.ScalarField.swap"]], "swap() (cloudcompy.ccscalarfield method)": [[14, "cloudComPy.ccScalarField.swap"]], "tonparray() (cloudcompy.scalarfield method)": [[14, "cloudComPy.ScalarField.toNpArray"]], "tonparray() (cloudcompy.ccscalarfield method)": [[14, "cloudComPy.ccScalarField.toNpArray"]], "tonparraycopy() (cloudcompy.scalarfield method)": [[14, "cloudComPy.ScalarField.toNpArrayCopy"]], "tonparraycopy() (cloudcompy.ccscalarfield method)": [[14, "cloudComPy.ccScalarField.toNpArrayCopy"]], "create() (cloudcompy.ccfacet static method)": [[15, "cloudComPy.ccFacet.Create"]], "__init__() (cloudcompy.ccfacet method)": [[15, "cloudComPy.ccFacet.__init__"]], "addchild() (cloudcompy.ccfacet method)": [[15, "cloudComPy.ccFacet.addChild"]], "ccfacet (class in cloudcompy)": [[15, "cloudComPy.ccFacet"]], "clone() (cloudcompy.ccfacet method)": [[15, "cloudComPy.ccFacet.clone"]], "colorsshown() (cloudcompy.ccfacet method)": [[15, "cloudComPy.ccFacet.colorsShown"]], "countref() (cloudcompy.ccfacet method)": [[15, "cloudComPy.ccFacet.countRef"]], "decref() (cloudcompy.ccfacet method)": [[15, "cloudComPy.ccFacet.decRef"]], "getcenter() (cloudcompy.ccfacet method)": [[15, "cloudComPy.ccFacet.getCenter"]], "getchild() (cloudcompy.ccfacet method)": [[15, "cloudComPy.ccFacet.getChild"]], "getchildcountrecursive() (cloudcompy.ccfacet method)": [[15, "cloudComPy.ccFacet.getChildCountRecursive"]], "getchildrennumber() (cloudcompy.ccfacet method)": [[15, "cloudComPy.ccFacet.getChildrenNumber"]], "getclassid() (cloudcompy.ccfacet method)": [[15, "cloudComPy.ccFacet.getClassID"]], "getcontour() (cloudcompy.ccfacet method)": [[15, "cloudComPy.ccFacet.getContour"]], "getcontourvertices() (cloudcompy.ccfacet method)": [[15, "cloudComPy.ccFacet.getContourVertices"]], "getname() (cloudcompy.ccfacet method)": [[15, "cloudComPy.ccFacet.getName"]], "getnormal() (cloudcompy.ccfacet method)": [[15, "cloudComPy.ccFacet.getNormal"]], "getoriginpoints() (cloudcompy.ccfacet method)": [[15, "cloudComPy.ccFacet.getOriginPoints"]], "getparent() (cloudcompy.ccfacet method)": [[15, "cloudComPy.ccFacet.getParent"]], "getplaneequation() (cloudcompy.ccfacet method)": [[15, "cloudComPy.ccFacet.getPlaneEquation"]], "getpolygon() (cloudcompy.ccfacet method)": [[15, "cloudComPy.ccFacet.getPolygon"]], "getrms() (cloudcompy.ccfacet method)": [[15, "cloudComPy.ccFacet.getRMS"]], "getsurface() (cloudcompy.ccfacet method)": [[15, "cloudComPy.ccFacet.getSurface"]], "hascolors() (cloudcompy.ccfacet method)": [[15, "cloudComPy.ccFacet.hasColors"]], "hasnormals() (cloudcompy.ccfacet method)": [[15, "cloudComPy.ccFacet.hasNormals"]], "hasscalarfields() (cloudcompy.ccfacet method)": [[15, "cloudComPy.ccFacet.hasScalarFields"]], "incref() (cloudcompy.ccfacet method)": [[15, "cloudComPy.ccFacet.incRef"]], "invertnormal() (cloudcompy.ccfacet method)": [[15, "cloudComPy.ccFacet.invertNormal"]], "isa() (cloudcompy.ccfacet method)": [[15, "cloudComPy.ccFacet.isA"]], "iskindof() (cloudcompy.ccfacet method)": [[15, "cloudComPy.ccFacet.isKindOf"]], "normalsshown() (cloudcompy.ccfacet method)": [[15, "cloudComPy.ccFacet.normalsShown"]], "setcontour() (cloudcompy.ccfacet method)": [[15, "cloudComPy.ccFacet.setContour"]], "setcontourvertices() (cloudcompy.ccfacet method)": [[15, "cloudComPy.ccFacet.setContourVertices"]], "setname() (cloudcompy.ccfacet method)": [[15, "cloudComPy.ccFacet.setName"]], "setoriginpoints() (cloudcompy.ccfacet method)": [[15, "cloudComPy.ccFacet.setOriginPoints"]], "setpolygon() (cloudcompy.ccfacet method)": [[15, "cloudComPy.ccFacet.setPolygon"]], "sfshown() (cloudcompy.ccfacet method)": [[15, "cloudComPy.ccFacet.sfShown"]], "showcolors() (cloudcompy.ccfacet method)": [[15, "cloudComPy.ccFacet.showColors"]], "shownormals() (cloudcompy.ccfacet method)": [[15, "cloudComPy.ccFacet.showNormals"]], "showsf() (cloudcompy.ccfacet method)": [[15, "cloudComPy.ccFacet.showSF"]], "delaunay_2d_axis_aligned (cloudcompy.triangulation_types attribute)": [[16, "cloudComPy.TRIANGULATION_TYPES.DELAUNAY_2D_AXIS_ALIGNED"]], "delaunay_2d_best_ls_plane (cloudcompy.triangulation_types attribute)": [[16, "cloudComPy.TRIANGULATION_TYPES.DELAUNAY_2D_BEST_LS_PLANE"]], "edgeconnectivitystats (class in cloudcompy)": [[16, "cloudComPy.EdgeConnectivityStats"]], "genericindexedmesh (class in cloudcompy)": [[16, "cloudComPy.GenericIndexedMesh"]], "indexestonparray() (cloudcompy.ccmesh method)": [[16, "cloudComPy.ccMesh.IndexesToNpArray"]], "indexestonparray_copy() (cloudcompy.ccmesh method)": [[16, "cloudComPy.ccMesh.IndexesToNpArray_copy"]], "triangulation_types (class in cloudcompy)": [[16, "cloudComPy.TRIANGULATION_TYPES"]], "__init__() (cloudcompy.edgeconnectivitystats method)": [[16, "cloudComPy.EdgeConnectivityStats.__init__"]], "__init__() (cloudcompy.genericindexedmesh method)": [[16, "cloudComPy.GenericIndexedMesh.__init__"]], "__init__() (cloudcompy.triangulation_types method)": [[16, "cloudComPy.TRIANGULATION_TYPES.__init__"]], "__init__() (cloudcompy.ccgenericmesh method)": [[16, "cloudComPy.ccGenericMesh.__init__"]], "__init__() (cloudcompy.ccmesh method)": [[16, "cloudComPy.ccMesh.__init__"]], "addchild() (cloudcompy.ccgenericmesh method)": [[16, "cloudComPy.ccGenericMesh.addChild"]], "addchild() (cloudcompy.ccmesh method)": [[16, "cloudComPy.ccMesh.addChild"]], "ccgenericmesh (class in cloudcompy)": [[16, "cloudComPy.ccGenericMesh"]], "ccmesh (class in cloudcompy)": [[16, "cloudComPy.ccMesh"]], "cleartrinormals() (cloudcompy.ccmesh method)": [[16, "cloudComPy.ccMesh.clearTriNormals"]], "clonemesh() (cloudcompy.ccmesh method)": [[16, "cloudComPy.ccMesh.cloneMesh"]], "colorsshown() (cloudcompy.ccgenericmesh method)": [[16, "cloudComPy.ccGenericMesh.colorsShown"]], "colorsshown() (cloudcompy.ccmesh method)": [[16, "cloudComPy.ccMesh.colorsShown"]], "computemesharea() (cloudcompy.ccgenericmesh method)": [[16, "cloudComPy.ccGenericMesh.computeMeshArea"]], "computemesharea() (cloudcompy.ccmesh method)": [[16, "cloudComPy.ccMesh.computeMeshArea"]], "computemeshvolume() (cloudcompy.ccmesh method)": [[16, "cloudComPy.ccMesh.computeMeshVolume"]], "countref() (cloudcompy.ccgenericmesh method)": [[16, "cloudComPy.ccGenericMesh.countRef"]], "countref() (cloudcompy.ccmesh method)": [[16, "cloudComPy.ccMesh.countRef"]], "crop2d() (cloudcompy.ccmesh method)": [[16, "cloudComPy.ccMesh.crop2D"]], "decref() (cloudcompy.ccgenericmesh method)": [[16, "cloudComPy.ccGenericMesh.decRef"]], "decref() (cloudcompy.ccmesh method)": [[16, "cloudComPy.ccMesh.decRef"]], "edgescount (cloudcompy.edgeconnectivitystats property)": [[16, "cloudComPy.EdgeConnectivityStats.edgesCount"]], "edgesnotshared (cloudcompy.edgeconnectivitystats property)": [[16, "cloudComPy.EdgeConnectivityStats.edgesNotShared"]], "edgessharedbymore (cloudcompy.edgeconnectivitystats property)": [[16, "cloudComPy.EdgeConnectivityStats.edgesSharedByMore"]], "edgessharedbytwo (cloudcompy.edgeconnectivitystats property)": [[16, "cloudComPy.EdgeConnectivityStats.edgesSharedByTwo"]], "flagverticesbytype() (cloudcompy.ccgenericmesh method)": [[16, "cloudComPy.ccGenericMesh.flagVerticesByType"]], "flagverticesbytype() (cloudcompy.ccmesh method)": [[16, "cloudComPy.ccMesh.flagVerticesByType"]], "fliptriangles() (cloudcompy.ccmesh method)": [[16, "cloudComPy.ccMesh.flipTriangles"]], "getassociatedcloud() (cloudcompy.ccmesh method)": [[16, "cloudComPy.ccMesh.getAssociatedCloud"]], "getchild() (cloudcompy.ccgenericmesh method)": [[16, "cloudComPy.ccGenericMesh.getChild"]], "getchild() (cloudcompy.ccmesh method)": [[16, "cloudComPy.ccMesh.getChild"]], "getchildcountrecursive() (cloudcompy.ccgenericmesh method)": [[16, "cloudComPy.ccGenericMesh.getChildCountRecursive"]], "getchildcountrecursive() (cloudcompy.ccmesh method)": [[16, "cloudComPy.ccMesh.getChildCountRecursive"]], "getchildrennumber() (cloudcompy.ccgenericmesh method)": [[16, "cloudComPy.ccGenericMesh.getChildrenNumber"]], "getchildrennumber() (cloudcompy.ccmesh method)": [[16, "cloudComPy.ccMesh.getChildrenNumber"]], "getclassid() (cloudcompy.ccgenericmesh method)": [[16, "cloudComPy.ccGenericMesh.getClassID"]], "getclassid() (cloudcompy.ccmesh method)": [[16, "cloudComPy.ccMesh.getClassID"]], "getglobalscale() (cloudcompy.ccgenericmesh method)": [[16, "cloudComPy.ccGenericMesh.getGlobalScale"]], "getglobalscale() (cloudcompy.ccmesh method)": [[16, "cloudComPy.ccMesh.getGlobalScale"]], "getglobalshift() (cloudcompy.ccgenericmesh method)": [[16, "cloudComPy.ccGenericMesh.getGlobalShift"]], "getglobalshift() (cloudcompy.ccmesh method)": [[16, "cloudComPy.ccMesh.getGlobalShift"]], "getname() (cloudcompy.ccgenericmesh method)": [[16, "cloudComPy.ccGenericMesh.getName"]], "getname() (cloudcompy.ccmesh method)": [[16, "cloudComPy.ccMesh.getName"]], "getparent() (cloudcompy.ccgenericmesh method)": [[16, "cloudComPy.ccGenericMesh.getParent"]], "getparent() (cloudcompy.ccmesh method)": [[16, "cloudComPy.ccMesh.getParent"]], "gettrianglevertindexes() (cloudcompy.ccmesh method)": [[16, "cloudComPy.ccMesh.getTriangleVertIndexes"]], "hascolors() (cloudcompy.ccgenericmesh method)": [[16, "cloudComPy.ccGenericMesh.hasColors"]], "hascolors() (cloudcompy.ccmesh method)": [[16, "cloudComPy.ccMesh.hasColors"]], "hasnormals() (cloudcompy.ccgenericmesh method)": [[16, "cloudComPy.ccGenericMesh.hasNormals"]], "hasnormals() (cloudcompy.ccmesh method)": [[16, "cloudComPy.ccMesh.hasNormals"]], "hasscalarfields() (cloudcompy.ccgenericmesh method)": [[16, "cloudComPy.ccGenericMesh.hasScalarFields"]], "hasscalarfields() (cloudcompy.ccmesh method)": [[16, "cloudComPy.ccMesh.hasScalarFields"]], "incref() (cloudcompy.ccgenericmesh method)": [[16, "cloudComPy.ccGenericMesh.incRef"]], "incref() (cloudcompy.ccmesh method)": [[16, "cloudComPy.ccMesh.incRef"]], "isa() (cloudcompy.ccgenericmesh method)": [[16, "cloudComPy.ccGenericMesh.isA"]], "isa() (cloudcompy.ccmesh method)": [[16, "cloudComPy.ccMesh.isA"]], "iskindof() (cloudcompy.ccgenericmesh method)": [[16, "cloudComPy.ccGenericMesh.isKindOf"]], "iskindof() (cloudcompy.ccmesh method)": [[16, "cloudComPy.ccMesh.isKindOf"]], "isshifted() (cloudcompy.ccgenericmesh method)": [[16, "cloudComPy.ccGenericMesh.isShifted"]], "isshifted() (cloudcompy.ccmesh method)": [[16, "cloudComPy.ccMesh.isShifted"]], "laplaciansmooth() (cloudcompy.ccmesh method)": [[16, "cloudComPy.ccMesh.laplacianSmooth"]], "name (cloudcompy.triangulation_types property)": [[16, "cloudComPy.TRIANGULATION_TYPES.name"]], "normalsshown() (cloudcompy.ccgenericmesh method)": [[16, "cloudComPy.ccGenericMesh.normalsShown"]], "normalsshown() (cloudcompy.ccmesh method)": [[16, "cloudComPy.ccMesh.normalsShown"]], "samplepoints() (cloudcompy.ccgenericmesh method)": [[16, "cloudComPy.ccGenericMesh.samplePoints"]], "samplepoints() (cloudcompy.ccmesh method)": [[16, "cloudComPy.ccMesh.samplePoints"]], "setglobalscale() (cloudcompy.ccgenericmesh method)": [[16, "cloudComPy.ccGenericMesh.setGlobalScale"]], "setglobalscale() (cloudcompy.ccmesh method)": [[16, "cloudComPy.ccMesh.setGlobalScale"]], "setglobalshift() (cloudcompy.ccgenericmesh method)": [[16, "cloudComPy.ccGenericMesh.setGlobalShift"]], "setglobalshift() (cloudcompy.ccmesh method)": [[16, "cloudComPy.ccMesh.setGlobalShift"]], "setname() (cloudcompy.ccgenericmesh method)": [[16, "cloudComPy.ccGenericMesh.setName"]], "setname() (cloudcompy.ccmesh method)": [[16, "cloudComPy.ccMesh.setName"]], "sfshown() (cloudcompy.ccgenericmesh method)": [[16, "cloudComPy.ccGenericMesh.sfShown"]], "sfshown() (cloudcompy.ccmesh method)": [[16, "cloudComPy.ccMesh.sfShown"]], "showcolors() (cloudcompy.ccgenericmesh method)": [[16, "cloudComPy.ccGenericMesh.showColors"]], "showcolors() (cloudcompy.ccmesh method)": [[16, "cloudComPy.ccMesh.showColors"]], "shownormals() (cloudcompy.ccgenericmesh method)": [[16, "cloudComPy.ccGenericMesh.showNormals"]], "shownormals() (cloudcompy.ccmesh method)": [[16, "cloudComPy.ccMesh.showNormals"]], "showsf() (cloudcompy.ccgenericmesh method)": [[16, "cloudComPy.ccGenericMesh.showSF"]], "showsf() (cloudcompy.ccmesh method)": [[16, "cloudComPy.ccMesh.showSF"]], "size() (cloudcompy.ccmesh method)": [[16, "cloudComPy.ccMesh.size"]], "subdivide() (cloudcompy.ccmesh method)": [[16, "cloudComPy.ccMesh.subdivide"]], "triangulate() (cloudcompy.ccmesh static method)": [[16, "cloudComPy.ccMesh.triangulate"]], "triangulatetwopolylines() (cloudcompy.ccmesh static method)": [[16, "cloudComPy.ccMesh.triangulateTwoPolylines"]], "value (cloudcompy.triangulation_types property)": [[16, "cloudComPy.TRIANGULATION_TYPES.value"]], "boxneighbourhood (class in cloudcompy)": [[17, "cloudComPy.BoxNeighbourhood"]], "celldescriptor (class in cloudcompy)": [[17, "cloudComPy.CellDescriptor"]], "cylindricalneighbourhood (class in cloudcompy)": [[17, "cloudComPy.CylindricalNeighbourhood"]], "dgmoctree (class in cloudcompy)": [[17, "cloudComPy.DgmOctree"]], "generatetruncatedcellcode() (cloudcompy.dgmoctree method)": [[17, "cloudComPy.DgmOctree.GenerateTruncatedCellCode"]], "indexandcode (class in cloudcompy)": [[17, "cloudComPy.IndexAndCode"]], "nearestneighbourssearchstruct (class in cloudcompy)": [[17, "cloudComPy.NearestNeighboursSearchStruct"]], "pointdescriptor (class in cloudcompy)": [[17, "cloudComPy.PointDescriptor"]], "progressivecylindricalneighbourhood (class in cloudcompy)": [[17, "cloudComPy.ProgressiveCylindricalNeighbourhood"]], "__init__() (cloudcompy.boxneighbourhood method)": [[17, "cloudComPy.BoxNeighbourhood.__init__"]], "__init__() (cloudcompy.celldescriptor method)": [[17, "cloudComPy.CellDescriptor.__init__"]], "__init__() (cloudcompy.cylindricalneighbourhood method)": [[17, "cloudComPy.CylindricalNeighbourhood.__init__"]], "__init__() (cloudcompy.dgmoctree method)": [[17, "cloudComPy.DgmOctree.__init__"]], "__init__() (cloudcompy.indexandcode method)": [[17, "cloudComPy.IndexAndCode.__init__"]], "__init__() (cloudcompy.nearestneighbourssearchstruct method)": [[17, "cloudComPy.NearestNeighboursSearchStruct.__init__"]], "__init__() (cloudcompy.pointdescriptor method)": [[17, "cloudComPy.PointDescriptor.__init__"]], "__init__() (cloudcompy.progressivecylindricalneighbourhood method)": [[17, "cloudComPy.ProgressiveCylindricalNeighbourhood.__init__"]], "alreadyvisitedneighbourhoodsize (cloudcompy.nearestneighbourssearchstruct property)": [[17, "cloudComPy.NearestNeighboursSearchStruct.alreadyVisitedNeighbourhoodSize"]], "axes (cloudcompy.boxneighbourhood property)": [[17, "cloudComPy.BoxNeighbourhood.axes"]], "cellcenter (cloudcompy.nearestneighbourssearchstruct property)": [[17, "cloudComPy.NearestNeighboursSearchStruct.cellCenter"]], "cellpos (cloudcompy.nearestneighbourssearchstruct property)": [[17, "cloudComPy.NearestNeighboursSearchStruct.cellPos"]], "center (cloudcompy.boxneighbourhood property)": [[17, "cloudComPy.BoxNeighbourhood.center"]], "center (cloudcompy.celldescriptor property)": [[17, "cloudComPy.CellDescriptor.center"]], "center (cloudcompy.cylindricalneighbourhood property)": [[17, "cloudComPy.CylindricalNeighbourhood.center"]], "computecellcenter() (cloudcompy.dgmoctree method)": [[17, "cloudComPy.DgmOctree.computeCellCenter"]], "currenthalflength (cloudcompy.progressivecylindricalneighbourhood property)": [[17, "cloudComPy.ProgressiveCylindricalNeighbourhood.currentHalfLength"]], "dimensions (cloudcompy.boxneighbourhood property)": [[17, "cloudComPy.BoxNeighbourhood.dimensions"]], "dir (cloudcompy.cylindricalneighbourhood property)": [[17, "cloudComPy.CylindricalNeighbourhood.dir"]], "findbestlevelforagivencellnumber() (cloudcompy.dgmoctree method)": [[17, "cloudComPy.DgmOctree.findBestLevelForAGivenCellNumber"]], "findbestlevelforagivenneighbourhoodsizeextraction() (cloudcompy.dgmoctree method)": [[17, "cloudComPy.DgmOctree.findBestLevelForAGivenNeighbourhoodSizeExtraction"]], "findbestlevelforagivenpopulationpercell() (cloudcompy.dgmoctree method)": [[17, "cloudComPy.DgmOctree.findBestLevelForAGivenPopulationPerCell"]], "findnearestneighborsstartingfromcell() (cloudcompy.dgmoctree method)": [[17, "cloudComPy.DgmOctree.findNearestNeighborsStartingFromCell"]], "findneighborsinaspherestartingfromcell() (cloudcompy.dgmoctree method)": [[17, "cloudComPy.DgmOctree.findNeighborsInASphereStartingFromCell"]], "findpointneighbourhood() (cloudcompy.dgmoctree method)": [[17, "cloudComPy.DgmOctree.findPointNeighbourhood"]], "findthenearestneighborstartingfromcell() (cloudcompy.dgmoctree method)": [[17, "cloudComPy.DgmOctree.findTheNearestNeighborStartingFromCell"]], "getboundingbox() (cloudcompy.dgmoctree method)": [[17, "cloudComPy.DgmOctree.getBoundingBox"]], "getcellcode() (cloudcompy.dgmoctree method)": [[17, "cloudComPy.DgmOctree.getCellCode"]], "getcellcodes() (cloudcompy.dgmoctree method)": [[17, "cloudComPy.DgmOctree.getCellCodes"]], "getcellcodesandindexes() (cloudcompy.dgmoctree method)": [[17, "cloudComPy.DgmOctree.getCellCodesAndIndexes"]], "getcelldistancefromborders() (cloudcompy.dgmoctree method)": [[17, "cloudComPy.DgmOctree.getCellDistanceFromBorders"]], "getcellindexes() (cloudcompy.dgmoctree method)": [[17, "cloudComPy.DgmOctree.getCellIndexes"]], "getcellnumber() (cloudcompy.dgmoctree method)": [[17, "cloudComPy.DgmOctree.getCellNumber"]], "getcellpos() (cloudcompy.dgmoctree method)": [[17, "cloudComPy.DgmOctree.getCellPos"]], "getcellsize() (cloudcompy.dgmoctree method)": [[17, "cloudComPy.DgmOctree.getCellSize"]], "getmaxfillindexes() (cloudcompy.dgmoctree method)": [[17, "cloudComPy.DgmOctree.getMaxFillIndexes"]], "getminfillindexes() (cloudcompy.dgmoctree method)": [[17, "cloudComPy.DgmOctree.getMinFillIndexes"]], "getnumberofprojectedpoints() (cloudcompy.dgmoctree method)": [[17, "cloudComPy.DgmOctree.getNumberOfProjectedPoints"]], "getoctreemaxs() (cloudcompy.dgmoctree method)": [[17, "cloudComPy.DgmOctree.getOctreeMaxs"]], "getoctreemins() (cloudcompy.dgmoctree method)": [[17, "cloudComPy.DgmOctree.getOctreeMins"]], "getpointsinboxneighbourhood() (cloudcompy.dgmoctree method)": [[17, "cloudComPy.DgmOctree.getPointsInBoxNeighbourhood"]], "getpointsincell() (cloudcompy.dgmoctree method)": [[17, "cloudComPy.DgmOctree.getPointsInCell"]], "getpointsincellbycellindex() (cloudcompy.dgmoctree method)": [[17, "cloudComPy.DgmOctree.getPointsInCellByCellIndex"]], "getpointsincellswithsortedcellcodes() (cloudcompy.dgmoctree method)": [[17, "cloudComPy.DgmOctree.getPointsInCellsWithSortedCellCodes"]], "getpointsincylindricalneighbourhood() (cloudcompy.dgmoctree method)": [[17, "cloudComPy.DgmOctree.getPointsInCylindricalNeighbourhood"]], "getpointsincylindricalneighbourhoodprogressive() (cloudcompy.dgmoctree method)": [[17, "cloudComPy.DgmOctree.getPointsInCylindricalNeighbourhoodProgressive"]], "getpointsinsphericalneighbourhood() (cloudcompy.dgmoctree method)": [[17, "cloudComPy.DgmOctree.getPointsInSphericalNeighbourhood"]], "getthecellposwhichincludesthepoint() (cloudcompy.dgmoctree method)": [[17, "cloudComPy.DgmOctree.getTheCellPosWhichIncludesThePoint"]], "getthecellposwhichincludesthepointinbbounds() (cloudcompy.dgmoctree method)": [[17, "cloudComPy.DgmOctree.getTheCellPosWhichIncludesThePointInbBounds"]], "index (cloudcompy.celldescriptor property)": [[17, "cloudComPy.CellDescriptor.index"]], "indexcomp() (cloudcompy.indexandcode static method)": [[17, "cloudComPy.IndexAndCode.indexComp"]], "level (cloudcompy.boxneighbourhood property)": [[17, "cloudComPy.BoxNeighbourhood.level"]], "level (cloudcompy.cylindricalneighbourhood property)": [[17, "cloudComPy.CylindricalNeighbourhood.level"]], "level (cloudcompy.nearestneighbourssearchstruct property)": [[17, "cloudComPy.NearestNeighboursSearchStruct.level"]], "maxhalflength (cloudcompy.cylindricalneighbourhood property)": [[17, "cloudComPy.CylindricalNeighbourhood.maxHalfLength"]], "maxsearchsquaredistd (cloudcompy.nearestneighbourssearchstruct property)": [[17, "cloudComPy.NearestNeighboursSearchStruct.maxSearchSquareDistd"]], "minnumberofneighbors (cloudcompy.nearestneighbourssearchstruct property)": [[17, "cloudComPy.NearestNeighboursSearchStruct.minNumberOfNeighbors"]], "minimalcellssettovisit (cloudcompy.nearestneighbourssearchstruct property)": [[17, "cloudComPy.NearestNeighboursSearchStruct.minimalCellsSetToVisit"]], "onlypositivedir (cloudcompy.cylindricalneighbourhood property)": [[17, "cloudComPy.CylindricalNeighbourhood.onlyPositiveDir"]], "point (cloudcompy.pointdescriptor property)": [[17, "cloudComPy.PointDescriptor.point"]], "pointindex (cloudcompy.pointdescriptor property)": [[17, "cloudComPy.PointDescriptor.pointIndex"]], "pointsinneighbourhood (cloudcompy.nearestneighbourssearchstruct property)": [[17, "cloudComPy.NearestNeighboursSearchStruct.pointsInNeighbourhood"]], "potentialcandidates (cloudcompy.progressivecylindricalneighbourhood property)": [[17, "cloudComPy.ProgressiveCylindricalNeighbourhood.potentialCandidates"]], "prevmaxcornerpos (cloudcompy.progressivecylindricalneighbourhood property)": [[17, "cloudComPy.ProgressiveCylindricalNeighbourhood.prevMaxCornerPos"]], "prevmincornerpos (cloudcompy.progressivecylindricalneighbourhood property)": [[17, "cloudComPy.ProgressiveCylindricalNeighbourhood.prevMinCornerPos"]], "querypoint (cloudcompy.nearestneighbourssearchstruct property)": [[17, "cloudComPy.NearestNeighboursSearchStruct.queryPoint"]], "radius (cloudcompy.cylindricalneighbourhood property)": [[17, "cloudComPy.CylindricalNeighbourhood.radius"]], "squaredistd (cloudcompy.pointdescriptor property)": [[17, "cloudComPy.PointDescriptor.squareDistd"]], "thecode (cloudcompy.indexandcode property)": [[17, "cloudComPy.IndexAndCode.theCode"]], "theindex (cloudcompy.indexandcode property)": [[17, "cloudComPy.IndexAndCode.theIndex"]], "thenearestpointindex (cloudcompy.nearestneighbourssearchstruct property)": [[17, "cloudComPy.NearestNeighboursSearchStruct.theNearestPointIndex"]], "clone_warnings (class in cloudcompy)": [[18, "cloudComPy.CLONE_WARNINGS"]], "dependency_flags (class in cloudcompy)": [[18, "cloudComPy.DEPENDENCY_FLAGS"]], "dp_delete_other (cloudcompy.dependency_flags attribute)": [[18, "cloudComPy.DEPENDENCY_FLAGS.DP_DELETE_OTHER"]], "dp_none (cloudcompy.dependency_flags attribute)": [[18, "cloudComPy.DEPENDENCY_FLAGS.DP_NONE"]], "dp_notify_other_on_delete (cloudcompy.dependency_flags attribute)": [[18, "cloudComPy.DEPENDENCY_FLAGS.DP_NOTIFY_OTHER_ON_DELETE"]], "dp_notify_other_on_update (cloudcompy.dependency_flags attribute)": [[18, "cloudComPy.DEPENDENCY_FLAGS.DP_NOTIFY_OTHER_ON_UPDATE"]], "dp_parent_of_other (cloudcompy.dependency_flags attribute)": [[18, "cloudComPy.DEPENDENCY_FLAGS.DP_PARENT_OF_OTHER"]], "genericindexedcloudpersist (class in cloudcompy)": [[18, "cloudComPy.GenericIndexedCloudPersist"]], "pointcloudtpl_ccgenericpointcloud_qstring (class in cloudcompy)": [[18, "cloudComPy.PointCloudTpl_ccGenericPointCloud_QString"]], "referencecloud (class in cloudcompy)": [[18, "cloudComPy.ReferenceCloud"]], "wrn_out_of_mem_for_colors (cloudcompy.clone_warnings attribute)": [[18, "cloudComPy.CLONE_WARNINGS.WRN_OUT_OF_MEM_FOR_COLORS"]], "wrn_out_of_mem_for_fwf (cloudcompy.clone_warnings attribute)": [[18, "cloudComPy.CLONE_WARNINGS.WRN_OUT_OF_MEM_FOR_FWF"]], "wrn_out_of_mem_for_normals (cloudcompy.clone_warnings attribute)": [[18, "cloudComPy.CLONE_WARNINGS.WRN_OUT_OF_MEM_FOR_NORMALS"]], "wrn_out_of_mem_for_sfs (cloudcompy.clone_warnings attribute)": [[18, "cloudComPy.CLONE_WARNINGS.WRN_OUT_OF_MEM_FOR_SFS"]], "__init__() (cloudcompy.clone_warnings method)": [[18, "cloudComPy.CLONE_WARNINGS.__init__"]], "__init__() (cloudcompy.dependency_flags method)": [[18, "cloudComPy.DEPENDENCY_FLAGS.__init__"]], "__init__() (cloudcompy.genericindexedcloudpersist method)": [[18, "cloudComPy.GenericIndexedCloudPersist.__init__"]], "__init__() (cloudcompy.pointcloudtpl_ccgenericpointcloud_qstring method)": [[18, "cloudComPy.PointCloudTpl_ccGenericPointCloud_QString.__init__"]], "__init__() (cloudcompy.referencecloud method)": [[18, "cloudComPy.ReferenceCloud.__init__"]], "__init__() (cloudcompy.ccgenericpointcloud method)": [[18, "cloudComPy.ccGenericPointCloud.__init__"]], "__init__() (cloudcompy.cchobject method)": [[18, "cloudComPy.ccHObject.__init__"]], "__init__() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.__init__"]], "__init__() (cloudcompy.ccshiftedobject method)": [[18, "cloudComPy.ccShiftedObject.__init__"]], "addchild() (cloudcompy.cchobject method)": [[18, "cloudComPy.ccHObject.addChild"]], "addchild() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.addChild"]], "addpoint() (cloudcompy.pointcloudtpl_ccgenericpointcloud_qstring method)": [[18, "cloudComPy.PointCloudTpl_ccGenericPointCloud_QString.addPoint"]], "addpoint() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.addPoint"]], "addpointindex() (cloudcompy.referencecloud method)": [[18, "cloudComPy.ReferenceCloud.addPointIndex"]], "addpointindexglobal() (cloudcompy.referencecloud method)": [[18, "cloudComPy.ReferenceCloud.addPointIndexGlobal"]], "addscalarfield() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.addScalarField"]], "applyrigidtransformation() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.applyRigidTransformation"]], "ccgenericpointcloud (class in cloudcompy)": [[18, "cloudComPy.ccGenericPointCloud"]], "cchobject (class in cloudcompy)": [[18, "cloudComPy.ccHObject"]], "ccpointcloud (class in cloudcompy)": [[18, "cloudComPy.ccPointCloud"]], "ccshiftedobject (class in cloudcompy)": [[18, "cloudComPy.ccShiftedObject"]], "changecolorlevels() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.changeColorLevels"]], "clonethis() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.cloneThis"]], "colorize() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.colorize"]], "colorsfromnparray_copy() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.colorsFromNPArray_copy"]], "colorsshown() (cloudcompy.cchobject method)": [[18, "cloudComPy.ccHObject.colorsShown"]], "colorsshown() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.colorsShown"]], "colorstonparray() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.colorsToNpArray"]], "colorstonparraycopy() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.colorsToNpArrayCopy"]], "computegravitycenter() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.computeGravityCenter"]], "computeoctree() (cloudcompy.ccgenericpointcloud method)": [[18, "cloudComPy.ccGenericPointCloud.computeOctree"]], "computeoctree() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.computeOctree"]], "computescalarfieldgradient() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.computeScalarFieldGradient"]], "convertcurrentscalarfieldtocolors() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.convertCurrentScalarFieldToColors"]], "convertnormaltodipdirsfs() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.convertNormalToDipDirSFs"]], "convertnormaltorgb() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.convertNormalToRGB"]], "convertrgbtogreyscale() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.convertRGBToGreyScale"]], "coordsfromnparray_copy() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.coordsFromNPArray_copy"]], "countref() (cloudcompy.cchobject method)": [[18, "cloudComPy.ccHObject.countRef"]], "countref() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.countRef"]], "crop2d() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.crop2D"]], "decref() (cloudcompy.cchobject method)": [[18, "cloudComPy.ccHObject.decRef"]], "decref() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.decRef"]], "deleteallscalarfields() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.deleteAllScalarFields"]], "deleteoctree() (cloudcompy.ccgenericpointcloud method)": [[18, "cloudComPy.ccGenericPointCloud.deleteOctree"]], "deleteoctree() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.deleteOctree"]], "deletescalarfield() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.deleteScalarField"]], "enablescalarfield() (cloudcompy.referencecloud method)": [[18, "cloudComPy.ReferenceCloud.enableScalarField"]], "enhancergbwithintensitysf() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.enhanceRGBWithIntensitySF"]], "exportcoordtosf() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.exportCoordToSF"]], "exportnormaltosf() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.exportNormalToSF"]], "filterpointsbyscalarvalue() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.filterPointsByScalarValue"]], "forwarditerator() (cloudcompy.referencecloud method)": [[18, "cloudComPy.ReferenceCloud.forwardIterator"]], "fuse() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.fuse"]], "getassociatedcloud() (cloudcompy.referencecloud method)": [[18, "cloudComPy.ReferenceCloud.getAssociatedCloud"]], "getboundingbox() (cloudcompy.referencecloud method)": [[18, "cloudComPy.ReferenceCloud.getBoundingBox"]], "getchild() (cloudcompy.cchobject method)": [[18, "cloudComPy.ccHObject.getChild"]], "getchild() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.getChild"]], "getchildcountrecursive() (cloudcompy.cchobject method)": [[18, "cloudComPy.ccHObject.getChildCountRecursive"]], "getchildcountrecursive() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.getChildCountRecursive"]], "getchildrennumber() (cloudcompy.cchobject method)": [[18, "cloudComPy.ccHObject.getChildrenNumber"]], "getchildrennumber() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.getChildrenNumber"]], "getclassid() (cloudcompy.cchobject method)": [[18, "cloudComPy.ccHObject.getClassID"]], "getclassid() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.getClassID"]], "getcurrentdisplayedscalarfield() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.getCurrentDisplayedScalarField"]], "getcurrentdisplayedscalarfieldindex() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.getCurrentDisplayedScalarFieldIndex"]], "getcurrentinscalarfield() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.getCurrentInScalarField"]], "getcurrentoutscalarfield() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.getCurrentOutScalarField"]], "getcurrentpointcoordinates() (cloudcompy.referencecloud method)": [[18, "cloudComPy.ReferenceCloud.getCurrentPointCoordinates"]], "getcurrentpointglobalindex() (cloudcompy.referencecloud method)": [[18, "cloudComPy.ReferenceCloud.getCurrentPointGlobalIndex"]], "getcurrentpointscalarvalue() (cloudcompy.referencecloud method)": [[18, "cloudComPy.ReferenceCloud.getCurrentPointScalarValue"]], "getglobalscale() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.getGlobalScale"]], "getglobalscale() (cloudcompy.ccshiftedobject method)": [[18, "cloudComPy.ccShiftedObject.getGlobalScale"]], "getglobalshift() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.getGlobalShift"]], "getglobalshift() (cloudcompy.ccshiftedobject method)": [[18, "cloudComPy.ccShiftedObject.getGlobalShift"]], "getname() (cloudcompy.cchobject method)": [[18, "cloudComPy.ccHObject.getName"]], "getname() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.getName"]], "getnextpoint() (cloudcompy.referencecloud method)": [[18, "cloudComPy.ReferenceCloud.getNextPoint"]], "getnumberofscalarfields() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.getNumberOfScalarFields"]], "getoctree() (cloudcompy.ccgenericpointcloud method)": [[18, "cloudComPy.ccGenericPointCloud.getOctree"]], "getoctree() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.getOctree"]], "getownbb() (cloudcompy.ccgenericpointcloud method)": [[18, "cloudComPy.ccGenericPointCloud.getOwnBB"]], "getownbb() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.getOwnBB"]], "getparent() (cloudcompy.cchobject method)": [[18, "cloudComPy.ccHObject.getParent"]], "getparent() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.getParent"]], "getpoint() (cloudcompy.pointcloudtpl_ccgenericpointcloud_qstring method)": [[18, "cloudComPy.PointCloudTpl_ccGenericPointCloud_QString.getPoint"]], "getpoint() (cloudcompy.referencecloud method)": [[18, "cloudComPy.ReferenceCloud.getPoint"]], "getpoint() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.getPoint"]], "getpointglobalindex() (cloudcompy.referencecloud method)": [[18, "cloudComPy.ReferenceCloud.getPointGlobalIndex"]], "getpointscalarvalue() (cloudcompy.referencecloud method)": [[18, "cloudComPy.ReferenceCloud.getPointScalarValue"]], "getscalarfield() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.getScalarField"]], "getscalarfielddic() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.getScalarFieldDic"]], "getscalarfieldname() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.getScalarFieldName"]], "getsensors() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.getSensors"]], "hascolors() (cloudcompy.cchobject method)": [[18, "cloudComPy.ccHObject.hasColors"]], "hascolors() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.hasColors"]], "hasnormals() (cloudcompy.cchobject method)": [[18, "cloudComPy.ccHObject.hasNormals"]], "hasnormals() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.hasNormals"]], "hasscalarfields() (cloudcompy.cchobject method)": [[18, "cloudComPy.ccHObject.hasScalarFields"]], "hasscalarfields() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.hasScalarFields"]], "incref() (cloudcompy.cchobject method)": [[18, "cloudComPy.ccHObject.incRef"]], "incref() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.incRef"]], "interpolatecolorsfrom() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.interpolateColorsFrom"]], "isa() (cloudcompy.cchobject method)": [[18, "cloudComPy.ccHObject.isA"]], "isa() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.isA"]], "iskindof() (cloudcompy.cchobject method)": [[18, "cloudComPy.ccHObject.isKindOf"]], "iskindof() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.isKindOf"]], "isscalarfieldenabled() (cloudcompy.referencecloud method)": [[18, "cloudComPy.ReferenceCloud.isScalarFieldEnabled"]], "isshifted() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.isShifted"]], "isshifted() (cloudcompy.ccshiftedobject method)": [[18, "cloudComPy.ccShiftedObject.isShifted"]], "name (cloudcompy.clone_warnings property)": [[18, "cloudComPy.CLONE_WARNINGS.name"]], "name (cloudcompy.dependency_flags property)": [[18, "cloudComPy.DEPENDENCY_FLAGS.name"]], "normalsfromnparraycopy() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.normalsFromNpArrayCopy"]], "normalsshown() (cloudcompy.cchobject method)": [[18, "cloudComPy.ccHObject.normalsShown"]], "normalsshown() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.normalsShown"]], "normalstonparraycopy() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.normalsToNpArrayCopy"]], "orientnormalswithfm() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.orientNormalsWithFM"]], "orientnormalswithmst() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.orientNormalsWithMST"]], "partialclone() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.partialClone"]], "placeiteratoratbeginning() (cloudcompy.referencecloud method)": [[18, "cloudComPy.ReferenceCloud.placeIteratorAtBeginning"]], "renamescalarfield() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.renameScalarField"]], "reserve() (cloudcompy.pointcloudtpl_ccgenericpointcloud_qstring method)": [[18, "cloudComPy.PointCloudTpl_ccGenericPointCloud_QString.reserve"]], "reserve() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.reserve"]], "resize() (cloudcompy.pointcloudtpl_ccgenericpointcloud_qstring method)": [[18, "cloudComPy.PointCloudTpl_ccGenericPointCloud_QString.resize"]], "resize() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.resize"]], "scale() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.scale"]], "setcolor() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.setColor"]], "setcolorgradient() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.setColorGradient"]], "setcolorgradientbanded() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.setColorGradientBanded"]], "setcolorgradientdefault() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.setColorGradientDefault"]], "setcurrentdisplayedscalarfield() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.setCurrentDisplayedScalarField"]], "setcurrentinscalarfield() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.setCurrentInScalarField"]], "setcurrentoutscalarfield() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.setCurrentOutScalarField"]], "setcurrentpointscalarvalue() (cloudcompy.referencecloud method)": [[18, "cloudComPy.ReferenceCloud.setCurrentPointScalarValue"]], "setcurrentscalarfield() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.setCurrentScalarField"]], "setglobalscale() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.setGlobalScale"]], "setglobalscale() (cloudcompy.ccshiftedobject method)": [[18, "cloudComPy.ccShiftedObject.setGlobalScale"]], "setglobalshift() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.setGlobalShift"]], "setglobalshift() (cloudcompy.ccshiftedobject method)": [[18, "cloudComPy.ccShiftedObject.setGlobalShift"]], "setname() (cloudcompy.cchobject method)": [[18, "cloudComPy.ccHObject.setName"]], "setname() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.setName"]], "setpointscalarvalue() (cloudcompy.referencecloud method)": [[18, "cloudComPy.ReferenceCloud.setPointScalarValue"]], "sffromcolor() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.sfFromColor"]], "sfshown() (cloudcompy.cchobject method)": [[18, "cloudComPy.ccHObject.sfShown"]], "sfshown() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.sfShown"]], "shiftpointsalongnormals() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.shiftPointsAlongNormals"]], "showcolors() (cloudcompy.cchobject method)": [[18, "cloudComPy.ccHObject.showColors"]], "showcolors() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.showColors"]], "shownormals() (cloudcompy.cchobject method)": [[18, "cloudComPy.ccHObject.showNormals"]], "shownormals() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.showNormals"]], "showsf() (cloudcompy.cchobject method)": [[18, "cloudComPy.ccHObject.showSF"]], "showsf() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.showSF"]], "showsfcolorsscale() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.showSFColorsScale"]], "shrinktofit() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.shrinkToFit"]], "size() (cloudcompy.referencecloud method)": [[18, "cloudComPy.ReferenceCloud.size"]], "size() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.size"]], "tonparray() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.toNpArray"]], "tonparraycopy() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.toNpArrayCopy"]], "translate() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.translate"]], "unallocatecolors() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.unallocateColors"]], "unallocatenorms() (cloudcompy.ccpointcloud method)": [[18, "cloudComPy.ccPointCloud.unallocateNorms"]], "value (cloudcompy.clone_warnings property)": [[18, "cloudComPy.CLONE_WARNINGS.value"]], "value (cloudcompy.dependency_flags property)": [[18, "cloudComPy.DEPENDENCY_FLAGS.value"]], "polyline (class in cloudcompy)": [[19, "cloudComPy.Polyline"]], "__init__() (cloudcompy.polyline method)": [[19, "cloudComPy.Polyline.__init__"]], "__init__() (cloudcompy.ccpolyline method)": [[19, "cloudComPy.ccPolyline.__init__"]], "addchild() (cloudcompy.ccpolyline method)": [[19, "cloudComPy.ccPolyline.addChild"]], "addpointindex() (cloudcompy.ccpolyline method)": [[19, "cloudComPy.ccPolyline.addPointIndex"]], "addpointindexglobal() (cloudcompy.ccpolyline method)": [[19, "cloudComPy.ccPolyline.addPointIndexGlobal"]], "ccpolyline (class in cloudcompy)": [[19, "cloudComPy.ccPolyline"]], "colorsshown() (cloudcompy.ccpolyline method)": [[19, "cloudComPy.ccPolyline.colorsShown"]], "computelength() (cloudcompy.ccpolyline method)": [[19, "cloudComPy.ccPolyline.computeLength"]], "countref() (cloudcompy.ccpolyline method)": [[19, "cloudComPy.ccPolyline.countRef"]], "decref() (cloudcompy.ccpolyline method)": [[19, "cloudComPy.ccPolyline.decRef"]], "enablescalarfield() (cloudcompy.ccpolyline method)": [[19, "cloudComPy.ccPolyline.enableScalarField"]], "forwarditerator() (cloudcompy.ccpolyline method)": [[19, "cloudComPy.ccPolyline.forwardIterator"]], "generateorthosections() (cloudcompy.ccpolyline method)": [[19, "cloudComPy.ccPolyline.generateOrthoSections"]], "getassociatedcloud() (cloudcompy.ccpolyline method)": [[19, "cloudComPy.ccPolyline.getAssociatedCloud"]], "getboundingbox() (cloudcompy.ccpolyline method)": [[19, "cloudComPy.ccPolyline.getBoundingBox"]], "getchild() (cloudcompy.ccpolyline method)": [[19, "cloudComPy.ccPolyline.getChild"]], "getchildcountrecursive() (cloudcompy.ccpolyline method)": [[19, "cloudComPy.ccPolyline.getChildCountRecursive"]], "getchildrennumber() (cloudcompy.ccpolyline method)": [[19, "cloudComPy.ccPolyline.getChildrenNumber"]], "getclassid() (cloudcompy.ccpolyline method)": [[19, "cloudComPy.ccPolyline.getClassID"]], "getcurrentpointcoordinates() (cloudcompy.ccpolyline method)": [[19, "cloudComPy.ccPolyline.getCurrentPointCoordinates"]], "getcurrentpointglobalindex() (cloudcompy.ccpolyline method)": [[19, "cloudComPy.ccPolyline.getCurrentPointGlobalIndex"]], "getcurrentpointscalarvalue() (cloudcompy.ccpolyline method)": [[19, "cloudComPy.ccPolyline.getCurrentPointScalarValue"]], "getglobalscale() (cloudcompy.ccpolyline method)": [[19, "cloudComPy.ccPolyline.getGlobalScale"]], "getglobalshift() (cloudcompy.ccpolyline method)": [[19, "cloudComPy.ccPolyline.getGlobalShift"]], "getname() (cloudcompy.ccpolyline method)": [[19, "cloudComPy.ccPolyline.getName"]], "getnextpoint() (cloudcompy.ccpolyline method)": [[19, "cloudComPy.ccPolyline.getNextPoint"]], "getparent() (cloudcompy.ccpolyline method)": [[19, "cloudComPy.ccPolyline.getParent"]], "getpoint() (cloudcompy.ccpolyline method)": [[19, "cloudComPy.ccPolyline.getPoint"]], "getpointglobalindex() (cloudcompy.ccpolyline method)": [[19, "cloudComPy.ccPolyline.getPointGlobalIndex"]], "getpointscalarvalue() (cloudcompy.ccpolyline method)": [[19, "cloudComPy.ccPolyline.getPointScalarValue"]], "hascolors() (cloudcompy.ccpolyline method)": [[19, "cloudComPy.ccPolyline.hasColors"]], "hasnormals() (cloudcompy.ccpolyline method)": [[19, "cloudComPy.ccPolyline.hasNormals"]], "hasscalarfields() (cloudcompy.ccpolyline method)": [[19, "cloudComPy.ccPolyline.hasScalarFields"]], "incref() (cloudcompy.ccpolyline method)": [[19, "cloudComPy.ccPolyline.incRef"]], "is2dmode() (cloudcompy.ccpolyline method)": [[19, "cloudComPy.ccPolyline.is2DMode"]], "isa() (cloudcompy.ccpolyline method)": [[19, "cloudComPy.ccPolyline.isA"]], "isclosed() (cloudcompy.polyline method)": [[19, "cloudComPy.Polyline.isClosed"]], "isclosed() (cloudcompy.ccpolyline method)": [[19, "cloudComPy.ccPolyline.isClosed"]], "iskindof() (cloudcompy.ccpolyline method)": [[19, "cloudComPy.ccPolyline.isKindOf"]], "isscalarfieldenabled() (cloudcompy.ccpolyline method)": [[19, "cloudComPy.ccPolyline.isScalarFieldEnabled"]], "isshifted() (cloudcompy.ccpolyline method)": [[19, "cloudComPy.ccPolyline.isShifted"]], "normalsshown() (cloudcompy.ccpolyline method)": [[19, "cloudComPy.ccPolyline.normalsShown"]], "placeiteratoratbeginning() (cloudcompy.ccpolyline method)": [[19, "cloudComPy.ccPolyline.placeIteratorAtBeginning"]], "samplepoints() (cloudcompy.ccpolyline method)": [[19, "cloudComPy.ccPolyline.samplePoints"]], "segmentcount() (cloudcompy.ccpolyline method)": [[19, "cloudComPy.ccPolyline.segmentCount"]], "set2dmode() (cloudcompy.ccpolyline method)": [[19, "cloudComPy.ccPolyline.set2DMode"]], "setclosed() (cloudcompy.polyline method)": [[19, "cloudComPy.Polyline.setClosed"]], "setclosed() (cloudcompy.ccpolyline method)": [[19, "cloudComPy.ccPolyline.setClosed"]], "setcurrentpointscalarvalue() (cloudcompy.ccpolyline method)": [[19, "cloudComPy.ccPolyline.setCurrentPointScalarValue"]], "setglobalscale() (cloudcompy.ccpolyline method)": [[19, "cloudComPy.ccPolyline.setGlobalScale"]], "setglobalshift() (cloudcompy.ccpolyline method)": [[19, "cloudComPy.ccPolyline.setGlobalShift"]], "setname() (cloudcompy.ccpolyline method)": [[19, "cloudComPy.ccPolyline.setName"]], "setpointscalarvalue() (cloudcompy.ccpolyline method)": [[19, "cloudComPy.ccPolyline.setPointScalarValue"]], "sfshown() (cloudcompy.ccpolyline method)": [[19, "cloudComPy.ccPolyline.sfShown"]], "showcolors() (cloudcompy.ccpolyline method)": [[19, "cloudComPy.ccPolyline.showColors"]], "shownormals() (cloudcompy.ccpolyline method)": [[19, "cloudComPy.ccPolyline.showNormals"]], "showsf() (cloudcompy.ccpolyline method)": [[19, "cloudComPy.ccPolyline.showSF"]], "size() (cloudcompy.ccpolyline method)": [[19, "cloudComPy.ccPolyline.size"]], "smoothchaikin() (cloudcompy.ccpolyline method)": [[19, "cloudComPy.ccPolyline.smoothChaikin"]], "fit() (cloudcompy.ccplane static method)": [[20, "cloudComPy.ccPlane.Fit"]], "fromtorotation() (cloudcompy.ccglmatrix method)": [[20, "cloudComPy.ccGLMatrix.FromToRotation"]], "fromtorotation() (cloudcompy.ccglmatrixd method)": [[20, "cloudComPy.ccGLMatrixd.FromToRotation"]], "fromviewdirandupdir() (cloudcompy.ccglmatrix method)": [[20, "cloudComPy.ccGLMatrix.FromViewDirAndUpDir"]], "fromviewdirandupdir() (cloudcompy.ccglmatrixd method)": [[20, "cloudComPy.ccGLMatrixd.FromViewDirAndUpDir"]], "interpolate() (cloudcompy.ccglmatrix method)": [[20, "cloudComPy.ccGLMatrix.Interpolate"]], "interpolate() (cloudcompy.ccglmatrixd method)": [[20, "cloudComPy.ccGLMatrixd.Interpolate"]], "__init__() (cloudcompy.ccbox method)": [[20, "cloudComPy.ccBox.__init__"]], "__init__() (cloudcompy.cccone method)": [[20, "cloudComPy.ccCone.__init__"]], "__init__() (cloudcompy.cccylinder method)": [[20, "cloudComPy.ccCylinder.__init__"]], "__init__() (cloudcompy.ccdish method)": [[20, "cloudComPy.ccDish.__init__"]], "__init__() (cloudcompy.ccglmatrix method)": [[20, "cloudComPy.ccGLMatrix.__init__"]], "__init__() (cloudcompy.ccglmatrixparams1_double method)": [[20, "cloudComPy.ccGLMatrixParams1_double.__init__"]], "__init__() (cloudcompy.ccglmatrixparams1_float method)": [[20, "cloudComPy.ccGLMatrixParams1_float.__init__"]], "__init__() (cloudcompy.ccglmatrixparams2_double method)": [[20, "cloudComPy.ccGLMatrixParams2_double.__init__"]], "__init__() (cloudcompy.ccglmatrixparams2_float method)": [[20, "cloudComPy.ccGLMatrixParams2_float.__init__"]], "__init__() (cloudcompy.ccglmatrixd method)": [[20, "cloudComPy.ccGLMatrixd.__init__"]], "__init__() (cloudcompy.ccgenericprimitive method)": [[20, "cloudComPy.ccGenericPrimitive.__init__"]], "__init__() (cloudcompy.ccplane method)": [[20, "cloudComPy.ccPlane.__init__"]], "__init__() (cloudcompy.ccquadric method)": [[20, "cloudComPy.ccQuadric.__init__"]], "__init__() (cloudcompy.ccsphere method)": [[20, "cloudComPy.ccSphere.__init__"]], "__init__() (cloudcompy.cctorus method)": [[20, "cloudComPy.ccTorus.__init__"]], "alpha_rad (cloudcompy.ccglmatrixparams1_double property)": [[20, "cloudComPy.ccGLMatrixParams1_double.alpha_rad"]], "alpha_rad (cloudcompy.ccglmatrixparams1_float property)": [[20, "cloudComPy.ccGLMatrixParams1_float.alpha_rad"]], "axis3d (cloudcompy.ccglmatrixparams1_double property)": [[20, "cloudComPy.ccGLMatrixParams1_double.axis3D"]], "axis3d (cloudcompy.ccglmatrixparams1_float property)": [[20, "cloudComPy.ccGLMatrixParams1_float.axis3D"]], "ccbox (class in cloudcompy)": [[20, "cloudComPy.ccBox"]], "cccone (class in cloudcompy)": [[20, "cloudComPy.ccCone"]], "cccylinder (class in cloudcompy)": [[20, "cloudComPy.ccCylinder"]], "ccdish (class in cloudcompy)": [[20, "cloudComPy.ccDish"]], "ccglmatrix (class in cloudcompy)": [[20, "cloudComPy.ccGLMatrix"]], "ccglmatrixparams1_double (class in cloudcompy)": [[20, "cloudComPy.ccGLMatrixParams1_double"]], "ccglmatrixparams1_float (class in cloudcompy)": [[20, "cloudComPy.ccGLMatrixParams1_float"]], "ccglmatrixparams2_double (class in cloudcompy)": [[20, "cloudComPy.ccGLMatrixParams2_double"]], "ccglmatrixparams2_float (class in cloudcompy)": [[20, "cloudComPy.ccGLMatrixParams2_float"]], "ccglmatrixd (class in cloudcompy)": [[20, "cloudComPy.ccGLMatrixd"]], "ccgenericprimitive (class in cloudcompy)": [[20, "cloudComPy.ccGenericPrimitive"]], "ccplane (class in cloudcompy)": [[20, "cloudComPy.ccPlane"]], "ccquadric (class in cloudcompy)": [[20, "cloudComPy.ccQuadric"]], "ccsphere (class in cloudcompy)": [[20, "cloudComPy.ccSphere"]], "cctorus (class in cloudcompy)": [[20, "cloudComPy.ccTorus"]], "cleartranslation() (cloudcompy.ccglmatrix method)": [[20, "cloudComPy.ccGLMatrix.clearTranslation"]], "cleartranslation() (cloudcompy.ccglmatrixd method)": [[20, "cloudComPy.ccGLMatrixd.clearTranslation"]], "data() (cloudcompy.ccglmatrix method)": [[20, "cloudComPy.ccGLMatrix.data"]], "data() (cloudcompy.ccglmatrixd method)": [[20, "cloudComPy.ccGLMatrixd.data"]], "fromdouble() (cloudcompy.ccglmatrix static method)": [[20, "cloudComPy.ccGLMatrix.fromDouble"]], "fromstring() (cloudcompy.ccglmatrix static method)": [[20, "cloudComPy.ccGLMatrix.fromString"]], "fromstring() (cloudcompy.ccglmatrixd static method)": [[20, "cloudComPy.ccGLMatrixd.fromString"]], "getbottomcenter() (cloudcompy.cccone method)": [[20, "cloudComPy.ccCone.getBottomCenter"]], "getbottomradius() (cloudcompy.cccone method)": [[20, "cloudComPy.ccCone.getBottomRadius"]], "getcenter() (cloudcompy.ccplane method)": [[20, "cloudComPy.ccPlane.getCenter"]], "getcolumn() (cloudcompy.ccglmatrix method)": [[20, "cloudComPy.ccGLMatrix.getColumn"]], "getcolumn() (cloudcompy.ccglmatrixd method)": [[20, "cloudComPy.ccGLMatrixd.getColumn"]], "getdimensions() (cloudcompy.ccbox method)": [[20, "cloudComPy.ccBox.getDimensions"]], "getequation() (cloudcompy.ccplane method)": [[20, "cloudComPy.ccPlane.getEquation"]], "getheight() (cloudcompy.cccone method)": [[20, "cloudComPy.ccCone.getHeight"]], "getlargecenter() (cloudcompy.cccone method)": [[20, "cloudComPy.ccCone.getLargeCenter"]], "getlargeradius() (cloudcompy.cccone method)": [[20, "cloudComPy.ccCone.getLargeRadius"]], "getnormal() (cloudcompy.ccplane method)": [[20, "cloudComPy.ccPlane.getNormal"]], "getparameters1() (cloudcompy.ccglmatrix method)": [[20, "cloudComPy.ccGLMatrix.getParameters1"]], "getparameters1() (cloudcompy.ccglmatrixd method)": [[20, "cloudComPy.ccGLMatrixd.getParameters1"]], "getparameters2() (cloudcompy.ccglmatrix method)": [[20, "cloudComPy.ccGLMatrix.getParameters2"]], "getparameters2() (cloudcompy.ccglmatrixd method)": [[20, "cloudComPy.ccGLMatrixd.getParameters2"]], "getradius() (cloudcompy.ccsphere method)": [[20, "cloudComPy.ccSphere.getRadius"]], "getsmallcenter() (cloudcompy.cccone method)": [[20, "cloudComPy.ccCone.getSmallCenter"]], "getsmallradius() (cloudcompy.cccone method)": [[20, "cloudComPy.ccCone.getSmallRadius"]], "gettopcenter() (cloudcompy.cccone method)": [[20, "cloudComPy.ccCone.getTopCenter"]], "gettopradius() (cloudcompy.cccone method)": [[20, "cloudComPy.ccCone.getTopRadius"]], "gettransformation() (cloudcompy.ccgenericprimitive method)": [[20, "cloudComPy.ccGenericPrimitive.getTransformation"]], "gettypename() (cloudcompy.ccgenericprimitive method)": [[20, "cloudComPy.ccGenericPrimitive.getTypeName"]], "initfromparameters() (cloudcompy.ccglmatrix method)": [[20, "cloudComPy.ccGLMatrix.initFromParameters"]], "initfromparameters() (cloudcompy.ccglmatrixd method)": [[20, "cloudComPy.ccGLMatrixd.initFromParameters"]], "inverse() (cloudcompy.ccglmatrix method)": [[20, "cloudComPy.ccGLMatrix.inverse"]], "inverse() (cloudcompy.ccglmatrixd method)": [[20, "cloudComPy.ccGLMatrixd.inverse"]], "invert() (cloudcompy.ccglmatrix method)": [[20, "cloudComPy.ccGLMatrix.invert"]], "invert() (cloudcompy.ccglmatrixd method)": [[20, "cloudComPy.ccGLMatrixd.invert"]], "phi_rad (cloudcompy.ccglmatrixparams2_double property)": [[20, "cloudComPy.ccGLMatrixParams2_double.phi_rad"]], "phi_rad (cloudcompy.ccglmatrixparams2_float property)": [[20, "cloudComPy.ccGLMatrixParams2_float.phi_rad"]], "psi_rad (cloudcompy.ccglmatrixparams2_double property)": [[20, "cloudComPy.ccGLMatrixParams2_double.psi_rad"]], "psi_rad (cloudcompy.ccglmatrixparams2_float property)": [[20, "cloudComPy.ccGLMatrixParams2_float.psi_rad"]], "setbottomradius() (cloudcompy.cccone method)": [[20, "cloudComPy.ccCone.setBottomRadius"]], "setdimensions() (cloudcompy.ccbox method)": [[20, "cloudComPy.ccBox.setDimensions"]], "setheight() (cloudcompy.cccone method)": [[20, "cloudComPy.ccCone.setHeight"]], "setradius() (cloudcompy.cccylinder method)": [[20, "cloudComPy.ccCylinder.setRadius"]], "setradius() (cloudcompy.ccsphere method)": [[20, "cloudComPy.ccSphere.setRadius"]], "settopradius() (cloudcompy.cccone method)": [[20, "cloudComPy.ccCone.setTopRadius"]], "setxwidth() (cloudcompy.ccplane method)": [[20, "cloudComPy.ccPlane.setXWidth"]], "setywidth() (cloudcompy.ccplane method)": [[20, "cloudComPy.ccPlane.setYWidth"]], "t3d (cloudcompy.ccglmatrixparams1_double property)": [[20, "cloudComPy.ccGLMatrixParams1_double.t3D"]], "t3d (cloudcompy.ccglmatrixparams1_float property)": [[20, "cloudComPy.ccGLMatrixParams1_float.t3D"]], "t3d (cloudcompy.ccglmatrixparams2_double property)": [[20, "cloudComPy.ccGLMatrixParams2_double.t3D"]], "t3d (cloudcompy.ccglmatrixparams2_float property)": [[20, "cloudComPy.ccGLMatrixParams2_float.t3D"]], "theta_rad (cloudcompy.ccglmatrixparams2_double property)": [[20, "cloudComPy.ccGLMatrixParams2_double.theta_rad"]], "theta_rad (cloudcompy.ccglmatrixparams2_float property)": [[20, "cloudComPy.ccGLMatrixParams2_float.theta_rad"]], "tostring() (cloudcompy.ccglmatrix method)": [[20, "cloudComPy.ccGLMatrix.toString"]], "tostring() (cloudcompy.ccglmatrixd method)": [[20, "cloudComPy.ccGLMatrixd.toString"]], "transpose() (cloudcompy.ccglmatrix method)": [[20, "cloudComPy.ccGLMatrix.transpose"]], "transpose() (cloudcompy.ccglmatrixd method)": [[20, "cloudComPy.ccGLMatrixd.transpose"]], "transposed() (cloudcompy.ccglmatrix method)": [[20, "cloudComPy.ccGLMatrix.transposed"]], "transposed() (cloudcompy.ccglmatrixd method)": [[20, "cloudComPy.ccGLMatrixd.transposed"]], "xrotation() (cloudcompy.ccglmatrix method)": [[20, "cloudComPy.ccGLMatrix.xRotation"]], "xrotation() (cloudcompy.ccglmatrixd method)": [[20, "cloudComPy.ccGLMatrixd.xRotation"]], "yrotation() (cloudcompy.ccglmatrix method)": [[20, "cloudComPy.ccGLMatrix.yRotation"]], "yrotation() (cloudcompy.ccglmatrixd method)": [[20, "cloudComPy.ccGLMatrixd.yRotation"]], "zrotation() (cloudcompy.ccglmatrix method)": [[20, "cloudComPy.ccGLMatrix.zRotation"]], "zrotation() (cloudcompy.ccglmatrixd method)": [[20, "cloudComPy.ccGLMatrixd.zRotation"]], "cc_sensor_type (class in cloudcompy)": [[21, "cloudComPy.CC_SENSOR_TYPE"]], "computescatteringangles() (cloudcompy.ccsensor method)": [[21, "cloudComPy.ccSensor.ComputeScatteringAngles"]], "ground_based_lidar (cloudcompy.cc_sensor_type attribute)": [[21, "cloudComPy.CC_SENSOR_TYPE.GROUND_BASED_LIDAR"]], "pitch_then_yaw (cloudcompy.rotation_order attribute)": [[21, "cloudComPy.ROTATION_ORDER.PITCH_THEN_YAW"]], "rotation_order (class in cloudcompy)": [[21, "cloudComPy.ROTATION_ORDER"]], "unknown_sensor (cloudcompy.cc_sensor_type attribute)": [[21, "cloudComPy.CC_SENSOR_TYPE.UNKNOWN_SENSOR"]], "yaw_then_pitch (cloudcompy.rotation_order attribute)": [[21, "cloudComPy.ROTATION_ORDER.YAW_THEN_PITCH"]], "__init__() (cloudcompy.cc_sensor_type method)": [[21, "cloudComPy.CC_SENSOR_TYPE.__init__"]], "__init__() (cloudcompy.rotation_order method)": [[21, "cloudComPy.ROTATION_ORDER.__init__"]], "__init__() (cloudcompy.ccgblsensor method)": [[21, "cloudComPy.ccGBLSensor.__init__"]], "__init__() (cloudcompy.ccsensor method)": [[21, "cloudComPy.ccSensor.__init__"]], "addposition() (cloudcompy.ccsensor method)": [[21, "cloudComPy.ccSensor.addPosition"]], "ccgblsensor (class in cloudcompy)": [[21, "cloudComPy.ccGBLSensor"]], "ccsensor (class in cloudcompy)": [[21, "cloudComPy.ccSensor"]], "getgraphicscale() (cloudcompy.ccsensor method)": [[21, "cloudComPy.ccSensor.getGraphicScale"]], "getrigidtransformation() (cloudcompy.ccsensor method)": [[21, "cloudComPy.ccSensor.getRigidTransformation"]], "gettype() (cloudcompy.ccgblsensor method)": [[21, "cloudComPy.ccGBLSensor.getType"]], "gettype() (cloudcompy.ccsensor method)": [[21, "cloudComPy.ccSensor.getType"]], "getuncertainty() (cloudcompy.ccgblsensor method)": [[21, "cloudComPy.ccGBLSensor.getUncertainty"]], "name (cloudcompy.cc_sensor_type property)": [[21, "cloudComPy.CC_SENSOR_TYPE.name"]], "name (cloudcompy.rotation_order property)": [[21, "cloudComPy.ROTATION_ORDER.name"]], "setgraphicscale() (cloudcompy.ccsensor method)": [[21, "cloudComPy.ccSensor.setGraphicScale"]], "setrigidtransformation() (cloudcompy.ccsensor method)": [[21, "cloudComPy.ccSensor.setRigidTransformation"]], "value (cloudcompy.cc_sensor_type property)": [[21, "cloudComPy.CC_SENSOR_TYPE.value"]], "value (cloudcompy.rotation_order property)": [[21, "cloudComPy.ROTATION_ORDER.value"]], "auto (cloudcompy.cc_shift_mode attribute)": [[22, "cloudComPy.CC_SHIFT_MODE.AUTO"]], "cc_direction (class in cloudcompy)": [[22, "cloudComPy.CC_DIRECTION"]], "cc_ferr_bad_argument (cloudcompy.cc_file_error attribute)": [[22, "cloudComPy.CC_FILE_ERROR.CC_FERR_BAD_ARGUMENT"]], "cc_ferr_bad_entity_type (cloudcompy.cc_file_error attribute)": [[22, "cloudComPy.CC_FILE_ERROR.CC_FERR_BAD_ENTITY_TYPE"]], "cc_ferr_broken_dependency_error (cloudcompy.cc_file_error attribute)": [[22, "cloudComPy.CC_FILE_ERROR.CC_FERR_BROKEN_DEPENDENCY_ERROR"]], "cc_ferr_canceled_by_user (cloudcompy.cc_file_error attribute)": [[22, "cloudComPy.CC_FILE_ERROR.CC_FERR_CANCELED_BY_USER"]], "cc_ferr_console_error (cloudcompy.cc_file_error attribute)": [[22, "cloudComPy.CC_FILE_ERROR.CC_FERR_CONSOLE_ERROR"]], "cc_ferr_file_was_written_by_unknown_plugin (cloudcompy.cc_file_error attribute)": [[22, "cloudComPy.CC_FILE_ERROR.CC_FERR_FILE_WAS_WRITTEN_BY_UNKNOWN_PLUGIN"]], "cc_ferr_malformed_file (cloudcompy.cc_file_error attribute)": [[22, "cloudComPy.CC_FILE_ERROR.CC_FERR_MALFORMED_FILE"]], "cc_ferr_not_enough_memory (cloudcompy.cc_file_error attribute)": [[22, "cloudComPy.CC_FILE_ERROR.CC_FERR_NOT_ENOUGH_MEMORY"]], "cc_ferr_not_implemented (cloudcompy.cc_file_error attribute)": [[22, "cloudComPy.CC_FILE_ERROR.CC_FERR_NOT_IMPLEMENTED"]], "cc_ferr_no_error (cloudcompy.cc_file_error attribute)": [[22, "cloudComPy.CC_FILE_ERROR.CC_FERR_NO_ERROR"]], "cc_ferr_no_load (cloudcompy.cc_file_error attribute)": [[22, "cloudComPy.CC_FILE_ERROR.CC_FERR_NO_LOAD"]], "cc_ferr_no_save (cloudcompy.cc_file_error attribute)": [[22, "cloudComPy.CC_FILE_ERROR.CC_FERR_NO_SAVE"]], "cc_ferr_reading (cloudcompy.cc_file_error attribute)": [[22, "cloudComPy.CC_FILE_ERROR.CC_FERR_READING"]], "cc_ferr_third_party_lib_exception (cloudcompy.cc_file_error attribute)": [[22, "cloudComPy.CC_FILE_ERROR.CC_FERR_THIRD_PARTY_LIB_EXCEPTION"]], "cc_ferr_third_party_lib_failure (cloudcompy.cc_file_error attribute)": [[22, "cloudComPy.CC_FILE_ERROR.CC_FERR_THIRD_PARTY_LIB_FAILURE"]], "cc_ferr_unknown_file (cloudcompy.cc_file_error attribute)": [[22, "cloudComPy.CC_FILE_ERROR.CC_FERR_UNKNOWN_FILE"]], "cc_ferr_writing (cloudcompy.cc_file_error attribute)": [[22, "cloudComPy.CC_FILE_ERROR.CC_FERR_WRITING"]], "cc_ferr_wrong_file_type (cloudcompy.cc_file_error attribute)": [[22, "cloudComPy.CC_FILE_ERROR.CC_FERR_WRONG_FILE_TYPE"]], "cc_file_error (class in cloudcompy)": [[22, "cloudComPy.CC_FILE_ERROR"]], "cc_shift_mode (class in cloudcompy)": [[22, "cloudComPy.CC_SHIFT_MODE"]], "convergence_type (class in cloudcompy)": [[22, "cloudComPy.CONVERGENCE_TYPE"]], "computevolume25d() (in module cloudcompy)": [[22, "cloudComPy.ComputeVolume25D"]], "curvaturetype (class in cloudcompy)": [[22, "cloudComPy.CurvatureType"]], "emptycellfilloption (class in cloudcompy)": [[22, "cloudComPy.EmptyCellFillOption"]], "exportablefields (class in cloudcompy)": [[22, "cloudComPy.ExportableFields"]], "extractconnectedcomponents() (in module cloudcompy)": [[22, "cloudComPy.ExtractConnectedComponents"]], "extractslicesandcontours() (in module cloudcompy)": [[22, "cloudComPy.ExtractSlicesAndContours"]], "fill_average_height (cloudcompy.emptycellfilloption attribute)": [[22, "cloudComPy.EmptyCellFillOption.FILL_AVERAGE_HEIGHT"]], "fill_custom_height (cloudcompy.emptycellfilloption attribute)": [[22, "cloudComPy.EmptyCellFillOption.FILL_CUSTOM_HEIGHT"]], "fill_maximum_height (cloudcompy.emptycellfilloption attribute)": [[22, "cloudComPy.EmptyCellFillOption.FILL_MAXIMUM_HEIGHT"]], "fill_minimum_height (cloudcompy.emptycellfilloption attribute)": [[22, "cloudComPy.EmptyCellFillOption.FILL_MINIMUM_HEIGHT"]], "first_global_shift (cloudcompy.cc_shift_mode attribute)": [[22, "cloudComPy.CC_SHIFT_MODE.FIRST_GLOBAL_SHIFT"]], "gaussian_curv (cloudcompy.curvaturetype attribute)": [[22, "cloudComPy.CurvatureType.GAUSSIAN_CURV"]], "getpointcloudradius() (in module cloudcompy)": [[22, "cloudComPy.GetPointCloudRadius"]], "icp() (in module cloudcompy)": [[22, "cloudComPy.ICP"]], "icpres (class in cloudcompy)": [[22, "cloudComPy.ICPres"]], "interpolate_delaunay (cloudcompy.emptycellfilloption attribute)": [[22, "cloudComPy.EmptyCellFillOption.INTERPOLATE_DELAUNAY"]], "invalid_projection_type (cloudcompy.projectiontype attribute)": [[22, "cloudComPy.ProjectionType.INVALID_PROJECTION_TYPE"]], "kriging (cloudcompy.emptycellfilloption attribute)": [[22, "cloudComPy.EmptyCellFillOption.KRIGING"]], "leave_empty (cloudcompy.emptycellfilloption attribute)": [[22, "cloudComPy.EmptyCellFillOption.LEAVE_EMPTY"]], "local_model_types (class in cloudcompy)": [[22, "cloudComPy.LOCAL_MODEL_TYPES"]], "ls (cloudcompy.local_model_types attribute)": [[22, "cloudComPy.LOCAL_MODEL_TYPES.LS"]], "labelconnectedcomponents() (in module cloudcompy)": [[22, "cloudComPy.LabelConnectedComponents"]], "max_error_convergence (cloudcompy.convergence_type attribute)": [[22, "cloudComPy.CONVERGENCE_TYPE.MAX_ERROR_CONVERGENCE"]], "max_iter_convergence (cloudcompy.convergence_type attribute)": [[22, "cloudComPy.CONVERGENCE_TYPE.MAX_ITER_CONVERGENCE"]], "mean_curv (cloudcompy.curvaturetype attribute)": [[22, "cloudComPy.CurvatureType.MEAN_CURV"]], "minus_barycenter (cloudcompy.orientation attribute)": [[22, "cloudComPy.Orientation.MINUS_BARYCENTER"]], "minus_origin (cloudcompy.orientation attribute)": [[22, "cloudComPy.Orientation.MINUS_ORIGIN"]], "minus_sensor_origin (cloudcompy.orientation attribute)": [[22, "cloudComPy.Orientation.MINUS_SENSOR_ORIGIN"]], "minus_x (cloudcompy.orientation attribute)": [[22, "cloudComPy.Orientation.MINUS_X"]], "minus_y (cloudcompy.orientation attribute)": [[22, "cloudComPy.Orientation.MINUS_Y"]], "minus_z (cloudcompy.orientation attribute)": [[22, "cloudComPy.Orientation.MINUS_Z"]], "mergeentities() (in module cloudcompy)": [[22, "cloudComPy.MergeEntities"]], "normal_change_rate (cloudcompy.curvaturetype attribute)": [[22, "cloudComPy.CurvatureType.NORMAL_CHANGE_RATE"]], "no_global_shift (cloudcompy.cc_shift_mode attribute)": [[22, "cloudComPy.CC_SHIFT_MODE.NO_GLOBAL_SHIFT"]], "no_model (cloudcompy.local_model_types attribute)": [[22, "cloudComPy.LOCAL_MODEL_TYPES.NO_MODEL"]], "orientation (class in cloudcompy)": [[22, "cloudComPy.Orientation"]], "per_cell_avg_height (cloudcompy.exportablefields attribute)": [[22, "cloudComPy.ExportableFields.PER_CELL_AVG_HEIGHT"]], "per_cell_count (cloudcompy.exportablefields attribute)": [[22, "cloudComPy.ExportableFields.PER_CELL_COUNT"]], "per_cell_height (cloudcompy.exportablefields attribute)": [[22, "cloudComPy.ExportableFields.PER_CELL_HEIGHT"]], "per_cell_height_range (cloudcompy.exportablefields attribute)": [[22, "cloudComPy.ExportableFields.PER_CELL_HEIGHT_RANGE"]], "per_cell_height_std_dev (cloudcompy.exportablefields attribute)": [[22, "cloudComPy.ExportableFields.PER_CELL_HEIGHT_STD_DEV"]], "per_cell_invalid (cloudcompy.exportablefields attribute)": [[22, "cloudComPy.ExportableFields.PER_CELL_INVALID"]], "per_cell_max_height (cloudcompy.exportablefields attribute)": [[22, "cloudComPy.ExportableFields.PER_CELL_MAX_HEIGHT"]], "per_cell_min_height (cloudcompy.exportablefields attribute)": [[22, "cloudComPy.ExportableFields.PER_CELL_MIN_HEIGHT"]], "plus_barycenter (cloudcompy.orientation attribute)": [[22, "cloudComPy.Orientation.PLUS_BARYCENTER"]], "plus_origin (cloudcompy.orientation attribute)": [[22, "cloudComPy.Orientation.PLUS_ORIGIN"]], "plus_sensor_origin (cloudcompy.orientation attribute)": [[22, "cloudComPy.Orientation.PLUS_SENSOR_ORIGIN"]], "plus_x (cloudcompy.orientation attribute)": [[22, "cloudComPy.Orientation.PLUS_X"]], "plus_y (cloudcompy.orientation attribute)": [[22, "cloudComPy.Orientation.PLUS_Y"]], "plus_z (cloudcompy.orientation attribute)": [[22, "cloudComPy.Orientation.PLUS_Z"]], "previous (cloudcompy.orientation attribute)": [[22, "cloudComPy.Orientation.PREVIOUS"]], "proj_average_value (cloudcompy.projectiontype attribute)": [[22, "cloudComPy.ProjectionType.PROJ_AVERAGE_VALUE"]], "proj_inverse_var_value (cloudcompy.projectiontype attribute)": [[22, "cloudComPy.ProjectionType.PROJ_INVERSE_VAR_VALUE"]], "proj_maximum_value (cloudcompy.projectiontype attribute)": [[22, "cloudComPy.ProjectionType.PROJ_MAXIMUM_VALUE"]], "proj_median_value (cloudcompy.projectiontype attribute)": [[22, "cloudComPy.ProjectionType.PROJ_MEDIAN_VALUE"]], "proj_minimum_value (cloudcompy.projectiontype attribute)": [[22, "cloudComPy.ProjectionType.PROJ_MINIMUM_VALUE"]], "projectiontype (class in cloudcompy)": [[22, "cloudComPy.ProjectionType"]], "quadric (cloudcompy.local_model_types attribute)": [[22, "cloudComPy.LOCAL_MODEL_TYPES.QUADRIC"]], "rasterizegeotiffonly() (in module cloudcompy)": [[22, "cloudComPy.RasterizeGeoTiffOnly"]], "rasterizetocloud() (in module cloudcompy)": [[22, "cloudComPy.RasterizeToCloud"]], "rasterizetomesh() (in module cloudcompy)": [[22, "cloudComPy.RasterizeToMesh"]], "reportinfovol (class in cloudcompy)": [[22, "cloudComPy.ReportInfoVol"]], "skip_none (cloudcompy.transformation_filters attribute)": [[22, "cloudComPy.TRANSFORMATION_FILTERS.SKIP_NONE"]], "skip_rotation (cloudcompy.transformation_filters attribute)": [[22, "cloudComPy.TRANSFORMATION_FILTERS.SKIP_ROTATION"]], "skip_rxy (cloudcompy.transformation_filters attribute)": [[22, "cloudComPy.TRANSFORMATION_FILTERS.SKIP_RXY"]], "skip_rxz (cloudcompy.transformation_filters attribute)": [[22, "cloudComPy.TRANSFORMATION_FILTERS.SKIP_RXZ"]], "skip_ryz (cloudcompy.transformation_filters attribute)": [[22, "cloudComPy.TRANSFORMATION_FILTERS.SKIP_RYZ"]], "skip_translation (cloudcompy.transformation_filters attribute)": [[22, "cloudComPy.TRANSFORMATION_FILTERS.SKIP_TRANSLATION"]], "skip_tx (cloudcompy.transformation_filters attribute)": [[22, "cloudComPy.TRANSFORMATION_FILTERS.SKIP_TX"]], "skip_ty (cloudcompy.transformation_filters attribute)": [[22, "cloudComPy.TRANSFORMATION_FILTERS.SKIP_TY"]], "skip_tz (cloudcompy.transformation_filters attribute)": [[22, "cloudComPy.TRANSFORMATION_FILTERS.SKIP_TZ"]], "saveentities() (in module cloudcompy)": [[22, "cloudComPy.SaveEntities"]], "savemesh() (in module cloudcompy)": [[22, "cloudComPy.SaveMesh"]], "savepointcloud() (in module cloudcompy)": [[22, "cloudComPy.SavePointCloud"]], "transformation_filters (class in cloudcompy)": [[22, "cloudComPy.TRANSFORMATION_FILTERS"]], "tri (cloudcompy.local_model_types attribute)": [[22, "cloudComPy.LOCAL_MODEL_TYPES.TRI"]], "undefined (cloudcompy.orientation attribute)": [[22, "cloudComPy.Orientation.UNDEFINED"]], "x (cloudcompy.cc_direction attribute)": [[22, "cloudComPy.CC_DIRECTION.X"]], "xyz (cloudcompy.cc_shift_mode attribute)": [[22, "cloudComPy.CC_SHIFT_MODE.XYZ"]], "y (cloudcompy.cc_direction attribute)": [[22, "cloudComPy.CC_DIRECTION.Y"]], "z (cloudcompy.cc_direction attribute)": [[22, "cloudComPy.CC_DIRECTION.Z"]], "__init__() (cloudcompy.cc_direction method)": [[22, "cloudComPy.CC_DIRECTION.__init__"]], "__init__() (cloudcompy.cc_file_error method)": [[22, "cloudComPy.CC_FILE_ERROR.__init__"]], "__init__() (cloudcompy.cc_shift_mode method)": [[22, "cloudComPy.CC_SHIFT_MODE.__init__"]], "__init__() (cloudcompy.convergence_type method)": [[22, "cloudComPy.CONVERGENCE_TYPE.__init__"]], "__init__() (cloudcompy.curvaturetype method)": [[22, "cloudComPy.CurvatureType.__init__"]], "__init__() (cloudcompy.emptycellfilloption method)": [[22, "cloudComPy.EmptyCellFillOption.__init__"]], "__init__() (cloudcompy.exportablefields method)": [[22, "cloudComPy.ExportableFields.__init__"]], "__init__() (cloudcompy.icpres method)": [[22, "cloudComPy.ICPres.__init__"]], "__init__() (cloudcompy.local_model_types method)": [[22, "cloudComPy.LOCAL_MODEL_TYPES.__init__"]], "__init__() (cloudcompy.orientation method)": [[22, "cloudComPy.Orientation.__init__"]], "__init__() (cloudcompy.projectiontype method)": [[22, "cloudComPy.ProjectionType.__init__"]], "__init__() (cloudcompy.reportinfovol method)": [[22, "cloudComPy.ReportInfoVol.__init__"]], "__init__() (cloudcompy.transformation_filters method)": [[22, "cloudComPy.TRANSFORMATION_FILTERS.__init__"]], "__init__() (cloudcompy.ccbbox method)": [[22, "cloudComPy.ccBBox.__init__"]], "__init__() (cloudcompy.interpolatorparameters method)": [[22, "cloudComPy.interpolatorParameters.__init__"]], "addtorenderscene() (in module cloudcompy)": [[22, "cloudComPy.addToRenderScene"]], "addedvolume (cloudcompy.reportinfovol property)": [[22, "cloudComPy.ReportInfoVol.addedVolume"]], "algos (cloudcompy.interpolatorparameters property)": [[22, "cloudComPy.interpolatorParameters.algos"]], "aligned (cloudcompy.icpres property)": [[22, "cloudComPy.ICPres.aligned"]], "averageneighborspercell (cloudcompy.reportinfovol property)": [[22, "cloudComPy.ReportInfoVol.averageNeighborsPerCell"]], "ccbbox (class in cloudcompy)": [[22, "cloudComPy.ccBBox"]], "ceilnonmatchingpercent (cloudcompy.reportinfovol property)": [[22, "cloudComPy.ReportInfoVol.ceilNonMatchingPercent"]], "cloudcompy": [[22, "module-cloudComPy"]], "computeapproxlocaldensity() (in module cloudcompy)": [[22, "cloudComPy.computeApproxLocalDensity"]], "computecurvature() (in module cloudcompy)": [[22, "cloudComPy.computeCurvature"]], "computefeature() (in module cloudcompy)": [[22, "cloudComPy.computeFeature"]], "computelocaldensity() (in module cloudcompy)": [[22, "cloudComPy.computeLocalDensity"]], "computemomentorder1() (in module cloudcompy)": [[22, "cloudComPy.computeMomentOrder1"]], "computenormals() (in module cloudcompy)": [[22, "cloudComPy.computeNormals"]], "computeroughness() (in module cloudcompy)": [[22, "cloudComPy.computeRoughness"]], "deleteentity() (in module cloudcompy)": [[22, "cloudComPy.deleteEntity"]], "extractpointsalongsections() (in module cloudcompy)": [[22, "cloudComPy.extractPointsAlongSections"]], "filterbysfvalue() (in module cloudcompy)": [[22, "cloudComPy.filterBySFValue"]], "finalpointcount (cloudcompy.icpres property)": [[22, "cloudComPy.ICPres.finalPointCount"]], "finalrms (cloudcompy.icpres property)": [[22, "cloudComPy.ICPres.finalRMS"]], "finalscale (cloudcompy.icpres property)": [[22, "cloudComPy.ICPres.finalScale"]], "getscalartype() (in module cloudcompy)": [[22, "cloudComPy.getScalarType"]], "groundnonmatchingpercent (cloudcompy.reportinfovol property)": [[22, "cloudComPy.ReportInfoVol.groundNonMatchingPercent"]], "importfile() (in module cloudcompy)": [[22, "cloudComPy.importFile"]], "initcc() (in module cloudcompy)": [[22, "cloudComPy.initCC"]], "initcloudcompare() (in module cloudcompy)": [[22, "cloudComPy.initCloudCompare"]], "interpolatescalarfieldsfrom() (in module cloudcompy)": [[22, "cloudComPy.interpolateScalarFieldsFrom"]], "interpolatorparameters (class in cloudcompy)": [[22, "cloudComPy.interpolatorParameters"]], "invertnormals() (in module cloudcompy)": [[22, "cloudComPy.invertNormals"]], "isplugindraco() (in module cloudcompy)": [[22, "cloudComPy.isPluginDraco"]], "ispluginfbx() (in module cloudcompy)": [[22, "cloudComPy.isPluginFbx"]], "ispluginhpr() (in module cloudcompy)": [[22, "cloudComPy.isPluginHPR"]], "ispluginm3c2() (in module cloudcompy)": [[22, "cloudComPy.isPluginM3C2"]], "ispluginmeshboolean() (in module cloudcompy)": [[22, "cloudComPy.isPluginMeshBoolean"]], "ispluginpcv() (in module cloudcompy)": [[22, "cloudComPy.isPluginPCV"]], "ispluginransac_sd() (in module cloudcompy)": [[22, "cloudComPy.isPluginRANSAC_SD"]], "knn (cloudcompy.interpolatorparameters property)": [[22, "cloudComPy.interpolatorParameters.knn"]], "loadmesh() (in module cloudcompy)": [[22, "cloudComPy.loadMesh"]], "loadpointcloud() (in module cloudcompy)": [[22, "cloudComPy.loadPointCloud"]], "loadpolyline() (in module cloudcompy)": [[22, "cloudComPy.loadPolyline"]], "matchingpercent (cloudcompy.reportinfovol property)": [[22, "cloudComPy.ReportInfoVol.matchingPercent"]], "maxcorner() (cloudcompy.ccbbox method)": [[22, "cloudComPy.ccBBox.maxCorner"]], "method (cloudcompy.interpolatorparameters property)": [[22, "cloudComPy.interpolatorParameters.method"]], "mincorner() (cloudcompy.ccbbox method)": [[22, "cloudComPy.ccBBox.minCorner"]], "name (cloudcompy.cc_direction property)": [[22, "cloudComPy.CC_DIRECTION.name"]], "name (cloudcompy.cc_file_error property)": [[22, "cloudComPy.CC_FILE_ERROR.name"]], "name (cloudcompy.cc_shift_mode property)": [[22, "cloudComPy.CC_SHIFT_MODE.name"]], "name (cloudcompy.convergence_type property)": [[22, "cloudComPy.CONVERGENCE_TYPE.name"]], "name (cloudcompy.curvaturetype property)": [[22, "cloudComPy.CurvatureType.name"]], "name (cloudcompy.emptycellfilloption property)": [[22, "cloudComPy.EmptyCellFillOption.name"]], "name (cloudcompy.exportablefields property)": [[22, "cloudComPy.ExportableFields.name"]], "name (cloudcompy.local_model_types property)": [[22, "cloudComPy.LOCAL_MODEL_TYPES.name"]], "name (cloudcompy.orientation property)": [[22, "cloudComPy.Orientation.name"]], "name (cloudcompy.projectiontype property)": [[22, "cloudComPy.ProjectionType.name"]], "name (cloudcompy.transformation_filters property)": [[22, "cloudComPy.TRANSFORMATION_FILTERS.name"]], "radius (cloudcompy.interpolatorparameters property)": [[22, "cloudComPy.interpolatorParameters.radius"]], "removefromrenderscene() (in module cloudcompy)": [[22, "cloudComPy.removeFromRenderScene"]], "removedvolume (cloudcompy.reportinfovol property)": [[22, "cloudComPy.ReportInfoVol.removedVolume"]], "render() (in module cloudcompy)": [[22, "cloudComPy.render"]], "setbackview() (in module cloudcompy)": [[22, "cloudComPy.setBackView"]], "setbackgroundcolor() (in module cloudcompy)": [[22, "cloudComPy.setBackgroundColor"]], "setbottomview() (in module cloudcompy)": [[22, "cloudComPy.setBottomView"]], "setcamerapos() (in module cloudcompy)": [[22, "cloudComPy.setCameraPos"]], "setcenteredperspectiveview() (in module cloudcompy)": [[22, "cloudComPy.setCenteredPerspectiveView"]], "setcolorscaleshowhistogram() (in module cloudcompy)": [[22, "cloudComPy.setColorScaleShowHistogram"]], "setcustomview() (in module cloudcompy)": [[22, "cloudComPy.setCustomView"]], "setfrontview() (in module cloudcompy)": [[22, "cloudComPy.setFrontView"]], "setglobalzoom() (in module cloudcompy)": [[22, "cloudComPy.setGlobalZoom"]], "setisoview1() (in module cloudcompy)": [[22, "cloudComPy.setIsoView1"]], "setisoview2() (in module cloudcompy)": [[22, "cloudComPy.setIsoView2"]], "setleftview() (in module cloudcompy)": [[22, "cloudComPy.setLeftView"]], "setorthoview() (in module cloudcompy)": [[22, "cloudComPy.setOrthoView"]], "setrightview() (in module cloudcompy)": [[22, "cloudComPy.setRightView"]], "settextdefaultcol() (in module cloudcompy)": [[22, "cloudComPy.setTextDefaultCol"]], "settopview() (in module cloudcompy)": [[22, "cloudComPy.setTopView"]], "settraces() (in module cloudcompy)": [[22, "cloudComPy.setTraces"]], "setviewerperspectiveview() (in module cloudcompy)": [[22, "cloudComPy.setViewerPerspectiveView"]], "sigma (cloudcompy.interpolatorparameters property)": [[22, "cloudComPy.interpolatorParameters.sigma"]], "surface (cloudcompy.reportinfovol property)": [[22, "cloudComPy.ReportInfoVol.surface"]], "transmat (cloudcompy.icpres property)": [[22, "cloudComPy.ICPres.transMat"]], "unfoldpointsalongpolylines() (in module cloudcompy)": [[22, "cloudComPy.unfoldPointsAlongPolylines"]], "value (cloudcompy.cc_direction property)": [[22, "cloudComPy.CC_DIRECTION.value"]], "value (cloudcompy.cc_file_error property)": [[22, "cloudComPy.CC_FILE_ERROR.value"]], "value (cloudcompy.cc_shift_mode property)": [[22, "cloudComPy.CC_SHIFT_MODE.value"]], "value (cloudcompy.convergence_type property)": [[22, "cloudComPy.CONVERGENCE_TYPE.value"]], "value (cloudcompy.curvaturetype property)": [[22, "cloudComPy.CurvatureType.value"]], "value (cloudcompy.emptycellfilloption property)": [[22, "cloudComPy.EmptyCellFillOption.value"]], "value (cloudcompy.exportablefields property)": [[22, "cloudComPy.ExportableFields.value"]], "value (cloudcompy.local_model_types property)": [[22, "cloudComPy.LOCAL_MODEL_TYPES.value"]], "value (cloudcompy.orientation property)": [[22, "cloudComPy.Orientation.value"]], "value (cloudcompy.projectiontype property)": [[22, "cloudComPy.ProjectionType.value"]], "value (cloudcompy.transformation_filters property)": [[22, "cloudComPy.TRANSFORMATION_FILTERS.value"]], "volume (cloudcompy.reportinfovol property)": [[22, "cloudComPy.ReportInfoVol.volume"]], "zoomonselectedentity() (in module cloudcompy)": [[22, "cloudComPy.zoomOnSelectedEntity"]], "cell_center (cloudcompy.resampling_cell_method attribute)": [[23, "cloudComPy.RESAMPLING_CELL_METHOD.CELL_CENTER"]], "cell_gravity_center (cloudcompy.resampling_cell_method attribute)": [[23, "cloudComPy.RESAMPLING_CELL_METHOD.CELL_GRAVITY_CENTER"]], "cloudsamplingtools (class in cloudcompy)": [[23, "cloudComPy.CloudSamplingTools"]], "nearest_point_to_cell_center (cloudcompy.subsampling_cell_method attribute)": [[23, "cloudComPy.SUBSAMPLING_CELL_METHOD.NEAREST_POINT_TO_CELL_CENTER"]], "random_point (cloudcompy.subsampling_cell_method attribute)": [[23, "cloudComPy.SUBSAMPLING_CELL_METHOD.RANDOM_POINT"]], "resampling_cell_method (class in cloudcompy)": [[23, "cloudComPy.RESAMPLING_CELL_METHOD"]], "sfmodulationparams (class in cloudcompy)": [[23, "cloudComPy.SFModulationParams"]], "subsampling_cell_method (class in cloudcompy)": [[23, "cloudComPy.SUBSAMPLING_CELL_METHOD"]], "__init__() (cloudcompy.cloudsamplingtools method)": [[23, "cloudComPy.CloudSamplingTools.__init__"]], "__init__() (cloudcompy.resampling_cell_method method)": [[23, "cloudComPy.RESAMPLING_CELL_METHOD.__init__"]], "__init__() (cloudcompy.sfmodulationparams method)": [[23, "cloudComPy.SFModulationParams.__init__"]], "__init__() (cloudcompy.subsampling_cell_method method)": [[23, "cloudComPy.SUBSAMPLING_CELL_METHOD.__init__"]], "a (cloudcompy.sfmodulationparams property)": [[23, "cloudComPy.SFModulationParams.a"]], "b (cloudcompy.sfmodulationparams property)": [[23, "cloudComPy.SFModulationParams.b"]], "enabled (cloudcompy.sfmodulationparams property)": [[23, "cloudComPy.SFModulationParams.enabled"]], "name (cloudcompy.resampling_cell_method property)": [[23, "cloudComPy.RESAMPLING_CELL_METHOD.name"]], "name (cloudcompy.subsampling_cell_method property)": [[23, "cloudComPy.SUBSAMPLING_CELL_METHOD.name"]], "noisefilter() (cloudcompy.cloudsamplingtools static method)": [[23, "cloudComPy.CloudSamplingTools.noiseFilter"]], "resamplecloudspatially() (cloudcompy.cloudsamplingtools static method)": [[23, "cloudComPy.CloudSamplingTools.resampleCloudSpatially"]], "resamplecloudwithoctree() (cloudcompy.cloudsamplingtools static method)": [[23, "cloudComPy.CloudSamplingTools.resampleCloudWithOctree"]], "resamplecloudwithoctreeatlevel() (cloudcompy.cloudsamplingtools static method)": [[23, "cloudComPy.CloudSamplingTools.resampleCloudWithOctreeAtLevel"]], "sorfilter() (cloudcompy.cloudsamplingtools static method)": [[23, "cloudComPy.CloudSamplingTools.sorFilter"]], "subsamplecloudrandomly() (cloudcompy.cloudsamplingtools static method)": [[23, "cloudComPy.CloudSamplingTools.subsampleCloudRandomly"]], "subsamplecloudwithoctree() (cloudcompy.cloudsamplingtools static method)": [[23, "cloudComPy.CloudSamplingTools.subsampleCloudWithOctree"]], "subsamplecloudwithoctreeatlevel() (cloudcompy.cloudsamplingtools static method)": [[23, "cloudComPy.CloudSamplingTools.subsampleCloudWithOctreeAtLevel"]], "value (cloudcompy.resampling_cell_method property)": [[23, "cloudComPy.RESAMPLING_CELL_METHOD.value"]], "value (cloudcompy.subsampling_cell_method property)": [[23, "cloudComPy.SUBSAMPLING_CELL_METHOD.value"]], "cmyk (cloudcompy.qcolorspec attribute)": [[24, "cloudComPy.QColorSpec.Cmyk"]], "hsl (cloudcompy.qcolorspec attribute)": [[24, "cloudComPy.QColorSpec.Hsl"]], "hsv (cloudcompy.qcolorspec attribute)": [[24, "cloudComPy.QColorSpec.Hsv"]], "invalid (cloudcompy.qcolorspec attribute)": [[24, "cloudComPy.QColorSpec.Invalid"]], "qcolor (class in cloudcompy)": [[24, "cloudComPy.QColor"]], "qcolorspec (class in cloudcompy)": [[24, "cloudComPy.QColorSpec"]], "qrgba64 (class in cloudcompy)": [[24, "cloudComPy.QRgba64"]], "rgb (cloudcompy.qcolorspec attribute)": [[24, "cloudComPy.QColorSpec.Rgb"]], "__init__() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.__init__"]], "__init__() (cloudcompy.qcolorspec method)": [[24, "cloudComPy.QColorSpec.__init__"]], "__init__() (cloudcompy.qrgba64 method)": [[24, "cloudComPy.QRgba64.__init__"]], "alpha() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.alpha"]], "alpha() (cloudcompy.qrgba64 method)": [[24, "cloudComPy.QRgba64.alpha"]], "alpha8() (cloudcompy.qrgba64 method)": [[24, "cloudComPy.QRgba64.alpha8"]], "alphaf() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.alphaF"]], "black() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.black"]], "blackf() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.blackF"]], "blue() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.blue"]], "blue() (cloudcompy.qrgba64 method)": [[24, "cloudComPy.QRgba64.blue"]], "blue8() (cloudcompy.qrgba64 method)": [[24, "cloudComPy.QRgba64.blue8"]], "bluef() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.blueF"]], "colornames() (cloudcompy.qcolor static method)": [[24, "cloudComPy.QColor.colorNames"]], "convertto() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.convertTo"]], "cyan() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.cyan"]], "cyanf() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.cyanF"]], "darker() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.darker"]], "fromargb32() (cloudcompy.qrgba64 static method)": [[24, "cloudComPy.QRgba64.fromArgb32"]], "fromcmyk() (cloudcompy.qcolor static method)": [[24, "cloudComPy.QColor.fromCmyk"]], "fromcmykf() (cloudcompy.qcolor static method)": [[24, "cloudComPy.QColor.fromCmykF"]], "fromhsl() (cloudcompy.qcolor static method)": [[24, "cloudComPy.QColor.fromHsl"]], "fromhslf() (cloudcompy.qcolor static method)": [[24, "cloudComPy.QColor.fromHslF"]], "fromhsv() (cloudcompy.qcolor static method)": [[24, "cloudComPy.QColor.fromHsv"]], "fromhsvf() (cloudcompy.qcolor static method)": [[24, "cloudComPy.QColor.fromHsvF"]], "fromquint64() (cloudcompy.qrgba64 method)": [[24, "cloudComPy.QRgba64.fromQuint64"]], "fromrgbf() (cloudcompy.qcolor static method)": [[24, "cloudComPy.QColor.fromRgbF"]], "fromrgbuint() (cloudcompy.qcolor static method)": [[24, "cloudComPy.QColor.fromRgbUInt"]], "fromrgba() (cloudcompy.qcolor static method)": [[24, "cloudComPy.QColor.fromRgba"]], "fromrgba() (cloudcompy.qrgba64 static method)": [[24, "cloudComPy.QRgba64.fromRgba"]], "fromrgba64() (cloudcompy.qrgba64 static method)": [[24, "cloudComPy.QRgba64.fromRgba64"]], "fromrgba64q() (cloudcompy.qcolor static method)": [[24, "cloudComPy.QColor.fromRgba64Q"]], "fromrgba64q() (cloudcompy.qrgba64 static method)": [[24, "cloudComPy.QRgba64.fromRgba64Q"]], "getcmyk() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.getCmyk"]], "getcmykf() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.getCmykF"]], "gethsl() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.getHsl"]], "gethslf() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.getHslF"]], "gethsv() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.getHsv"]], "gethsvf() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.getHsvF"]], "getrgb() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.getRgb"]], "getrgbf() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.getRgbF"]], "green() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.green"]], "green() (cloudcompy.qrgba64 method)": [[24, "cloudComPy.QRgba64.green"]], "green8() (cloudcompy.qrgba64 method)": [[24, "cloudComPy.QRgba64.green8"]], "greenf() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.greenF"]], "hslhue() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.hslHue"]], "hslhuef() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.hslHueF"]], "hslsaturation() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.hslSaturation"]], "hslsaturationf() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.hslSaturationF"]], "hsvhue() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.hsvHue"]], "hsvhuef() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.hsvHueF"]], "hsvsaturation() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.hsvSaturation"]], "hsvsaturationf() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.hsvSaturationF"]], "hue() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.hue"]], "huef() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.hueF"]], "isopaque() (cloudcompy.qrgba64 method)": [[24, "cloudComPy.QRgba64.isOpaque"]], "istransparent() (cloudcompy.qrgba64 method)": [[24, "cloudComPy.QRgba64.isTransparent"]], "isvalid() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.isValid"]], "isvalidcolor() (cloudcompy.qcolor static method)": [[24, "cloudComPy.QColor.isValidColor"]], "lighter() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.lighter"]], "lightness() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.lightness"]], "lightnessf() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.lightnessF"]], "magenta() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.magenta"]], "magentaf() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.magentaF"]], "name (cloudcompy.qcolorspec property)": [[24, "cloudComPy.QColorSpec.name"]], "name() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.name"]], "nameargb() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.nameARGB"]], "premultiplied() (cloudcompy.qrgba64 method)": [[24, "cloudComPy.QRgba64.premultiplied"]], "red() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.red"]], "red() (cloudcompy.qrgba64 method)": [[24, "cloudComPy.QRgba64.red"]], "red8() (cloudcompy.qrgba64 method)": [[24, "cloudComPy.QRgba64.red8"]], "redf() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.redF"]], "rgb() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.rgb"]], "rgba() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.rgba"]], "rgba64() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.rgba64"]], "saturation() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.saturation"]], "saturationf() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.saturationF"]], "setalpha() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.setAlpha"]], "setalpha() (cloudcompy.qrgba64 method)": [[24, "cloudComPy.QRgba64.setAlpha"]], "setalphaf() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.setAlphaF"]], "setblue() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.setBlue"]], "setblue() (cloudcompy.qrgba64 method)": [[24, "cloudComPy.QRgba64.setBlue"]], "setbluef() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.setBlueF"]], "setcmyk() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.setCmyk"]], "setcmykf() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.setCmykF"]], "setgreen() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.setGreen"]], "setgreen() (cloudcompy.qrgba64 method)": [[24, "cloudComPy.QRgba64.setGreen"]], "setgreenf() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.setGreenF"]], "sethsl() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.setHsl"]], "sethslf() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.setHslF"]], "sethsv() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.setHsv"]], "sethsvf() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.setHsvF"]], "setnamedcolor() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.setNamedColor"]], "setred() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.setRed"]], "setred() (cloudcompy.qrgba64 method)": [[24, "cloudComPy.QRgba64.setRed"]], "setredf() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.setRedF"]], "setrgb() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.setRgb"]], "setrgbuint() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.setRgbUInt"]], "setrgba64() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.setRgba64"]], "spec() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.spec"]], "toargb32() (cloudcompy.qrgba64 method)": [[24, "cloudComPy.QRgba64.toArgb32"]], "tocmyk() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.toCmyk"]], "tohsl() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.toHsl"]], "tohsv() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.toHsv"]], "toquint64() (cloudcompy.qrgba64 method)": [[24, "cloudComPy.QRgba64.toQuint64"]], "torgb() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.toRgb"]], "torgb16() (cloudcompy.qrgba64 method)": [[24, "cloudComPy.QRgba64.toRgb16"]], "unpremultiplied() (cloudcompy.qrgba64 method)": [[24, "cloudComPy.QRgba64.unpremultiplied"]], "value (cloudcompy.qcolorspec property)": [[24, "cloudComPy.QColorSpec.value"]], "value() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.value"]], "valuef() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.valueF"]], "yellow() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.yellow"]], "yellowf() (cloudcompy.qcolor method)": [[24, "cloudComPy.QColor.yellowF"]]}})